// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: objects/movable.proto

package objects

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Position and rotation state of moving object.
type State struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name            string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	X               float32 `protobuf:"fixed32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y               float32 `protobuf:"fixed32,3,opt,name=y,proto3" json:"y,omitempty"`
	Z               float32 `protobuf:"fixed32,4,opt,name=z,proto3" json:"z,omitempty"`
	Rx              float32 `protobuf:"fixed32,5,opt,name=rx,proto3" json:"rx,omitempty"`
	Ry              float32 `protobuf:"fixed32,6,opt,name=ry,proto3" json:"ry,omitempty"`
	Rz              float32 `protobuf:"fixed32,7,opt,name=rz,proto3" json:"rz,omitempty"`
	TransitionSpeed float32 `protobuf:"fixed32,8,opt,name=transition_speed,json=transitionSpeed,proto3" json:"transition_speed,omitempty"`
}

func (x *State) Reset() {
	*x = State{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *State) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*State) ProtoMessage() {}

func (x *State) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use State.ProtoReflect.Descriptor instead.
func (*State) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{0}
}

func (x *State) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *State) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *State) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *State) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *State) GetRx() float32 {
	if x != nil {
		return x.Rx
	}
	return 0
}

func (x *State) GetRy() float32 {
	if x != nil {
		return x.Ry
	}
	return 0
}

func (x *State) GetRz() float32 {
	if x != nil {
		return x.Rz
	}
	return 0
}

func (x *State) GetTransitionSpeed() float32 {
	if x != nil {
		return x.TransitionSpeed
	}
	return 0
}

// A movable object.
type MovableObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	// List of states that an object can take.
	States []*State `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *MovableObject) Reset() {
	*x = MovableObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MovableObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MovableObject) ProtoMessage() {}

func (x *MovableObject) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MovableObject.ProtoReflect.Descriptor instead.
func (*MovableObject) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{1}
}

func (x *MovableObject) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *MovableObject) GetStates() []*State {
	if x != nil {
		return x.States
	}
	return nil
}

// Request message for rpc `CreateMovableObject`.
type CreateMovableObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object *Object `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	// List of states that an object can take.
	States []*State `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *CreateMovableObjectRequest) Reset() {
	*x = CreateMovableObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovableObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovableObjectRequest) ProtoMessage() {}

func (x *CreateMovableObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovableObjectRequest.ProtoReflect.Descriptor instead.
func (*CreateMovableObjectRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMovableObjectRequest) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *CreateMovableObjectRequest) GetStates() []*State {
	if x != nil {
		return x.States
	}
	return nil
}

// Response message for rpc `CreateMovableObject`.
type CreateMovableObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateMovableObjectResponse) Reset() {
	*x = CreateMovableObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMovableObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMovableObjectResponse) ProtoMessage() {}

func (x *CreateMovableObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMovableObjectResponse.ProtoReflect.Descriptor instead.
func (*CreateMovableObjectResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMovableObjectResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `GetMovableObject`.
type GetMovableObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetMovableObjectRequest) Reset() {
	*x = GetMovableObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovableObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovableObjectRequest) ProtoMessage() {}

func (x *GetMovableObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovableObjectRequest.ProtoReflect.Descriptor instead.
func (*GetMovableObjectRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{4}
}

func (x *GetMovableObjectRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `GetMovableObject`.
type GetMovableObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Object           *Object  `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	States           []*State `protobuf:"bytes,2,rep,name=states,proto3" json:"states,omitempty"`
	CurrentStateId   uint32   `protobuf:"varint,3,opt,name=current_state_id,json=currentStateId,proto3" json:"current_state_id,omitempty"`
	CurrentStateName string   `protobuf:"bytes,4,opt,name=current_state_name,json=currentStateName,proto3" json:"current_state_name,omitempty"`
}

func (x *GetMovableObjectResponse) Reset() {
	*x = GetMovableObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMovableObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMovableObjectResponse) ProtoMessage() {}

func (x *GetMovableObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMovableObjectResponse.ProtoReflect.Descriptor instead.
func (*GetMovableObjectResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{5}
}

func (x *GetMovableObjectResponse) GetObject() *Object {
	if x != nil {
		return x.Object
	}
	return nil
}

func (x *GetMovableObjectResponse) GetStates() []*State {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *GetMovableObjectResponse) GetCurrentStateId() uint32 {
	if x != nil {
		return x.CurrentStateId
	}
	return 0
}

func (x *GetMovableObjectResponse) GetCurrentStateName() string {
	if x != nil {
		return x.CurrentStateName
	}
	return ""
}

// Request message for rpc `UpdateMovableObject`.
type UpdateMovableObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 0 for no changes.
	ObjectId uint32   `protobuf:"varint,2,opt,name=object_id,json=objectId,proto3" json:"object_id,omitempty"`
	States   []*State `protobuf:"bytes,3,rep,name=states,proto3" json:"states,omitempty"`
}

func (x *UpdateMovableObjectRequest) Reset() {
	*x = UpdateMovableObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovableObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovableObjectRequest) ProtoMessage() {}

func (x *UpdateMovableObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovableObjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateMovableObjectRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateMovableObjectRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateMovableObjectRequest) GetObjectId() uint32 {
	if x != nil {
		return x.ObjectId
	}
	return 0
}

func (x *UpdateMovableObjectRequest) GetStates() []*State {
	if x != nil {
		return x.States
	}
	return nil
}

// Response message for rpc `UpdateMovableObject`.
type UpdateMovableObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateMovableObjectResponse) Reset() {
	*x = UpdateMovableObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateMovableObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateMovableObjectResponse) ProtoMessage() {}

func (x *UpdateMovableObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateMovableObjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateMovableObjectResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{7}
}

// Request message for rpc `DeleteMovableObject`.
type DeleteMovableObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteMovableObjectRequest) Reset() {
	*x = DeleteMovableObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovableObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovableObjectRequest) ProtoMessage() {}

func (x *DeleteMovableObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovableObjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteMovableObjectRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteMovableObjectRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `DeleteMovableObject`.
type DeleteMovableObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteMovableObjectResponse) Reset() {
	*x = DeleteMovableObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMovableObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMovableObjectResponse) ProtoMessage() {}

func (x *DeleteMovableObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMovableObjectResponse.ProtoReflect.Descriptor instead.
func (*DeleteMovableObjectResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{9}
}

// Request message for rpc `MoveObject`.
type MoveObjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State uint32 `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *MoveObjectRequest) Reset() {
	*x = MoveObjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectRequest) ProtoMessage() {}

func (x *MoveObjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectRequest.ProtoReflect.Descriptor instead.
func (*MoveObjectRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{10}
}

func (x *MoveObjectRequest) GetState() uint32 {
	if x != nil {
		return x.State
	}
	return 0
}

// Response message for rpc `MoveObject`.
type MoveObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MoveObjectResponse) Reset() {
	*x = MoveObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectResponse) ProtoMessage() {}

func (x *MoveObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectResponse.ProtoReflect.Descriptor instead.
func (*MoveObjectResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{11}
}

// Request message for rpc `MoveObjectNext`.
type MoveObjectNextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MoveObjectNextRequest) Reset() {
	*x = MoveObjectNextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectNextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectNextRequest) ProtoMessage() {}

func (x *MoveObjectNextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectNextRequest.ProtoReflect.Descriptor instead.
func (*MoveObjectNextRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{12}
}

func (x *MoveObjectNextRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `MoveObjectNext`.
type MoveObjectNextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId   uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	StateName string `protobuf:"bytes,2,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`
}

func (x *MoveObjectNextResponse) Reset() {
	*x = MoveObjectNextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectNextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectNextResponse) ProtoMessage() {}

func (x *MoveObjectNextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectNextResponse.ProtoReflect.Descriptor instead.
func (*MoveObjectNextResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{13}
}

func (x *MoveObjectNextResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *MoveObjectNextResponse) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

// Request message for rpc `MoveObjectPrevious`.
type MoveObjectPreviousRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *MoveObjectPreviousRequest) Reset() {
	*x = MoveObjectPreviousRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectPreviousRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectPreviousRequest) ProtoMessage() {}

func (x *MoveObjectPreviousRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectPreviousRequest.ProtoReflect.Descriptor instead.
func (*MoveObjectPreviousRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{14}
}

func (x *MoveObjectPreviousRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `MoveObjectPrevious`.
type MoveObjectPreviousResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateId   uint32 `protobuf:"varint,1,opt,name=state_id,json=stateId,proto3" json:"state_id,omitempty"`
	StateName string `protobuf:"bytes,2,opt,name=state_name,json=stateName,proto3" json:"state_name,omitempty"`
}

func (x *MoveObjectPreviousResponse) Reset() {
	*x = MoveObjectPreviousResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveObjectPreviousResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveObjectPreviousResponse) ProtoMessage() {}

func (x *MoveObjectPreviousResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveObjectPreviousResponse.ProtoReflect.Descriptor instead.
func (*MoveObjectPreviousResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{15}
}

func (x *MoveObjectPreviousResponse) GetStateId() uint32 {
	if x != nil {
		return x.StateId
	}
	return 0
}

func (x *MoveObjectPreviousResponse) GetStateName() string {
	if x != nil {
		return x.StateName
	}
	return ""
}

// Request message for rpc `FetchAllMovableObjects`.
type FetchAllMovableObjectsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkSize uint32 `protobuf:"varint,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
}

func (x *FetchAllMovableObjectsRequest) Reset() {
	*x = FetchAllMovableObjectsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllMovableObjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllMovableObjectsRequest) ProtoMessage() {}

func (x *FetchAllMovableObjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllMovableObjectsRequest.ProtoReflect.Descriptor instead.
func (*FetchAllMovableObjectsRequest) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{16}
}

func (x *FetchAllMovableObjectsRequest) GetChunkSize() uint32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

// Response message for rpc `FetchAllMovableObjects`.
type FetchAllMovableObjectsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MovableObjects map[uint32]*MovableObject `protobuf:"bytes,1,rep,name=movable_objects,json=movableObjects,proto3" json:"movable_objects,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FetchAllMovableObjectsResponse) Reset() {
	*x = FetchAllMovableObjectsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_movable_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllMovableObjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllMovableObjectsResponse) ProtoMessage() {}

func (x *FetchAllMovableObjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_objects_movable_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllMovableObjectsResponse.ProtoReflect.Descriptor instead.
func (*FetchAllMovableObjectsResponse) Descriptor() ([]byte, []int) {
	return file_objects_movable_proto_rawDescGZIP(), []int{17}
}

func (x *FetchAllMovableObjectsResponse) GetMovableObjects() map[uint32]*MovableObject {
	if x != nil {
		return x.MovableObjects
	}
	return nil
}

var File_objects_movable_proto protoreflect.FileDescriptor

var file_objects_movable_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x01, 0x0a, 0x05, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x01, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02,
	0x72, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02,
	0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x72, 0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x02,
	0x72, 0x7a, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x70, 0x65, 0x65, 0x64, 0x22, 0x6a, 0x0a,
	0x0d, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2c,
	0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x22, 0x77, 0x0a, 0x1a, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x06, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x22, 0x2d, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x29, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcd, 0x01, 0x0a,
	0x18, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x1a,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x29, 0x0a, 0x11, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x4d,
	0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x0a, 0x15, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x52, 0x0a, 0x16, 0x4d, 0x6f,
	0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x2b,
	0x0a, 0x19, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x4d,
	0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x3e, 0x0a, 0x1d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4d,
	0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53,
	0x69, 0x7a, 0x65, 0x22, 0xeb, 0x01, 0x0a, 0x1e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c,
	0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a, 0x0f, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x40, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x6f,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x0e, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x1a, 0x5e, 0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x31, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x32, 0xda, 0x08, 0x0a, 0x19, 0x4d, 0x72, 0x75, 0x56, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x89, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x17, 0x22, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x82, 0x01, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x12, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76,
	0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x8e, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x32, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x61, 0x62,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01,
	0x2a, 0x12, 0x8b, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x28, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x2a, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x61,
	0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x74, 0x0a, 0x0a, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x76,
	0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x85, 0x01, 0x0a, 0x0e, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x12, 0x23, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31,
	0x2f, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f,
	0x6d, 0x6f, 0x76, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x78, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x95, 0x01,
	0x0a, 0x12, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x12, 0x27, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x6f, 0x76,
	0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22,
	0x21, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2f, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x2f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x16, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c,
	0x6c, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12,
	0x2b, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x4d, 0x6f, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x27,
	0x5a, 0x25, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x72, 0x75,
	0x56, 0x2d, 0x52, 0x50, 0x2f, 0x6d, 0x72, 0x75, 0x76, 0x2d, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_objects_movable_proto_rawDescOnce sync.Once
	file_objects_movable_proto_rawDescData = file_objects_movable_proto_rawDesc
)

func file_objects_movable_proto_rawDescGZIP() []byte {
	file_objects_movable_proto_rawDescOnce.Do(func() {
		file_objects_movable_proto_rawDescData = protoimpl.X.CompressGZIP(file_objects_movable_proto_rawDescData)
	})
	return file_objects_movable_proto_rawDescData
}

var file_objects_movable_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_objects_movable_proto_goTypes = []interface{}{
	(*State)(nil),                          // 0: mruv.objects.State
	(*MovableObject)(nil),                  // 1: mruv.objects.MovableObject
	(*CreateMovableObjectRequest)(nil),     // 2: mruv.objects.CreateMovableObjectRequest
	(*CreateMovableObjectResponse)(nil),    // 3: mruv.objects.CreateMovableObjectResponse
	(*GetMovableObjectRequest)(nil),        // 4: mruv.objects.GetMovableObjectRequest
	(*GetMovableObjectResponse)(nil),       // 5: mruv.objects.GetMovableObjectResponse
	(*UpdateMovableObjectRequest)(nil),     // 6: mruv.objects.UpdateMovableObjectRequest
	(*UpdateMovableObjectResponse)(nil),    // 7: mruv.objects.UpdateMovableObjectResponse
	(*DeleteMovableObjectRequest)(nil),     // 8: mruv.objects.DeleteMovableObjectRequest
	(*DeleteMovableObjectResponse)(nil),    // 9: mruv.objects.DeleteMovableObjectResponse
	(*MoveObjectRequest)(nil),              // 10: mruv.objects.MoveObjectRequest
	(*MoveObjectResponse)(nil),             // 11: mruv.objects.MoveObjectResponse
	(*MoveObjectNextRequest)(nil),          // 12: mruv.objects.MoveObjectNextRequest
	(*MoveObjectNextResponse)(nil),         // 13: mruv.objects.MoveObjectNextResponse
	(*MoveObjectPreviousRequest)(nil),      // 14: mruv.objects.MoveObjectPreviousRequest
	(*MoveObjectPreviousResponse)(nil),     // 15: mruv.objects.MoveObjectPreviousResponse
	(*FetchAllMovableObjectsRequest)(nil),  // 16: mruv.objects.FetchAllMovableObjectsRequest
	(*FetchAllMovableObjectsResponse)(nil), // 17: mruv.objects.FetchAllMovableObjectsResponse
	nil,                                    // 18: mruv.objects.FetchAllMovableObjectsResponse.MovableObjectsEntry
	(*Object)(nil),                         // 19: mruv.objects.Object
}
var file_objects_movable_proto_depIdxs = []int32{
	19, // 0: mruv.objects.MovableObject.object:type_name -> mruv.objects.Object
	0,  // 1: mruv.objects.MovableObject.states:type_name -> mruv.objects.State
	19, // 2: mruv.objects.CreateMovableObjectRequest.object:type_name -> mruv.objects.Object
	0,  // 3: mruv.objects.CreateMovableObjectRequest.states:type_name -> mruv.objects.State
	19, // 4: mruv.objects.GetMovableObjectResponse.object:type_name -> mruv.objects.Object
	0,  // 5: mruv.objects.GetMovableObjectResponse.states:type_name -> mruv.objects.State
	0,  // 6: mruv.objects.UpdateMovableObjectRequest.states:type_name -> mruv.objects.State
	18, // 7: mruv.objects.FetchAllMovableObjectsResponse.movable_objects:type_name -> mruv.objects.FetchAllMovableObjectsResponse.MovableObjectsEntry
	1,  // 8: mruv.objects.FetchAllMovableObjectsResponse.MovableObjectsEntry.value:type_name -> mruv.objects.MovableObject
	2,  // 9: mruv.objects.MruVMovableObjectsService.CreateMovableObject:input_type -> mruv.objects.CreateMovableObjectRequest
	4,  // 10: mruv.objects.MruVMovableObjectsService.GetMovableObject:input_type -> mruv.objects.GetMovableObjectRequest
	6,  // 11: mruv.objects.MruVMovableObjectsService.UpdateMovableObject:input_type -> mruv.objects.UpdateMovableObjectRequest
	8,  // 12: mruv.objects.MruVMovableObjectsService.DeleteMovableObject:input_type -> mruv.objects.DeleteMovableObjectRequest
	10, // 13: mruv.objects.MruVMovableObjectsService.MoveObject:input_type -> mruv.objects.MoveObjectRequest
	12, // 14: mruv.objects.MruVMovableObjectsService.MoveObjectNext:input_type -> mruv.objects.MoveObjectNextRequest
	14, // 15: mruv.objects.MruVMovableObjectsService.MoveObjectPrevious:input_type -> mruv.objects.MoveObjectPreviousRequest
	16, // 16: mruv.objects.MruVMovableObjectsService.FetchAllMovableObjects:input_type -> mruv.objects.FetchAllMovableObjectsRequest
	3,  // 17: mruv.objects.MruVMovableObjectsService.CreateMovableObject:output_type -> mruv.objects.CreateMovableObjectResponse
	5,  // 18: mruv.objects.MruVMovableObjectsService.GetMovableObject:output_type -> mruv.objects.GetMovableObjectResponse
	7,  // 19: mruv.objects.MruVMovableObjectsService.UpdateMovableObject:output_type -> mruv.objects.UpdateMovableObjectResponse
	9,  // 20: mruv.objects.MruVMovableObjectsService.DeleteMovableObject:output_type -> mruv.objects.DeleteMovableObjectResponse
	11, // 21: mruv.objects.MruVMovableObjectsService.MoveObject:output_type -> mruv.objects.MoveObjectResponse
	13, // 22: mruv.objects.MruVMovableObjectsService.MoveObjectNext:output_type -> mruv.objects.MoveObjectNextResponse
	15, // 23: mruv.objects.MruVMovableObjectsService.MoveObjectPrevious:output_type -> mruv.objects.MoveObjectPreviousResponse
	17, // 24: mruv.objects.MruVMovableObjectsService.FetchAllMovableObjects:output_type -> mruv.objects.FetchAllMovableObjectsResponse
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_objects_movable_proto_init() }
func file_objects_movable_proto_init() {
	if File_objects_movable_proto != nil {
		return
	}
	file_objects_objects_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_objects_movable_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*State); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MovableObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMovableObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMovableObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovableObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMovableObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMovableObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateMovableObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMovableObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMovableObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectNextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectNextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectPreviousRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveObjectPreviousResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllMovableObjectsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_movable_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllMovableObjectsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_objects_movable_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_objects_movable_proto_goTypes,
		DependencyIndexes: file_objects_movable_proto_depIdxs,
		MessageInfos:      file_objects_movable_proto_msgTypes,
	}.Build()
	File_objects_movable_proto = out.File
	file_objects_movable_proto_rawDesc = nil
	file_objects_movable_proto_goTypes = nil
	file_objects_movable_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MruVMovableObjectsServiceClient is the client API for MruVMovableObjectsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVMovableObjectsServiceClient interface {
	// Create a movable object.
	CreateMovableObject(ctx context.Context, in *CreateMovableObjectRequest, opts ...grpc.CallOption) (*CreateMovableObjectResponse, error)
	// Get a movable object.
	GetMovableObject(ctx context.Context, in *GetMovableObjectRequest, opts ...grpc.CallOption) (*GetMovableObjectResponse, error)
	// Update a movable object.
	UpdateMovableObject(ctx context.Context, in *UpdateMovableObjectRequest, opts ...grpc.CallOption) (*UpdateMovableObjectResponse, error)
	// Delete a movable object.
	DeleteMovableObject(ctx context.Context, in *DeleteMovableObjectRequest, opts ...grpc.CallOption) (*DeleteMovableObjectResponse, error)
	// Move an object to other state.
	MoveObject(ctx context.Context, in *MoveObjectRequest, opts ...grpc.CallOption) (*MoveObjectResponse, error)
	// Move an object to next state.
	MoveObjectNext(ctx context.Context, in *MoveObjectNextRequest, opts ...grpc.CallOption) (*MoveObjectNextResponse, error)
	// Move an object to previous state.
	MoveObjectPrevious(ctx context.Context, in *MoveObjectPreviousRequest, opts ...grpc.CallOption) (*MoveObjectPreviousResponse, error)
	//
	FetchAllMovableObjects(ctx context.Context, in *FetchAllMovableObjectsRequest, opts ...grpc.CallOption) (MruVMovableObjectsService_FetchAllMovableObjectsClient, error)
}

type mruVMovableObjectsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMruVMovableObjectsServiceClient(cc grpc.ClientConnInterface) MruVMovableObjectsServiceClient {
	return &mruVMovableObjectsServiceClient{cc}
}

func (c *mruVMovableObjectsServiceClient) CreateMovableObject(ctx context.Context, in *CreateMovableObjectRequest, opts ...grpc.CallOption) (*CreateMovableObjectResponse, error) {
	out := new(CreateMovableObjectResponse)
	err := c.cc.Invoke(ctx, "/mruv.objects.MruVMovableObjectsService/CreateMovableObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVMovableObjectsServiceClient) GetMovableObject(ctx context.Context, in *GetMovableObjectRequest, opts ...grpc.CallOption) (*GetMovableObjectResponse, error) {
	out := new(GetMovableObjectResponse)
	err := c.cc.Invoke(ctx, "/mruv.objects.MruVMovableObjectsService/GetMovableObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVMovableObjectsServiceClient) UpdateMovableObject(ctx context.Context, in *UpdateMovableObjectRequest, opts ...grpc.CallOption) (*UpdateMovableObjectResponse, error) {
	out := new(UpdateMovableObjectResponse)
	err := c.cc.Invoke(ctx, "/mruv.objects.MruVMovableObjectsService/UpdateMovableObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVMovableObjectsServiceClient) DeleteMovableObject(ctx context.Context, in *DeleteMovableObjectRequest, opts ...grpc.CallOption) (*DeleteMovableObjectResponse, error) {
	out := new(DeleteMovableObjectResponse)
	err := c.cc.Invoke(ctx, "/mruv.objects.MruVMovableObjectsService/DeleteMovableObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVMovableObjectsServiceClient) MoveObject(ctx context.Context, in *MoveObjectRequest, opts ...grpc.CallOption) (*MoveObjectResponse, error) {
	out := new(MoveObjectResponse)
	err := c.cc.Invoke(ctx, "/mruv.objects.MruVMovableObjectsService/MoveObject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVMovableObjectsServiceClient) MoveObjectNext(ctx context.Context, in *MoveObjectNextRequest, opts ...grpc.CallOption) (*MoveObjectNextResponse, error) {
	out := new(MoveObjectNextResponse)
	err := c.cc.Invoke(ctx, "/mruv.objects.MruVMovableObjectsService/MoveObjectNext", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVMovableObjectsServiceClient) MoveObjectPrevious(ctx context.Context, in *MoveObjectPreviousRequest, opts ...grpc.CallOption) (*MoveObjectPreviousResponse, error) {
	out := new(MoveObjectPreviousResponse)
	err := c.cc.Invoke(ctx, "/mruv.objects.MruVMovableObjectsService/MoveObjectPrevious", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVMovableObjectsServiceClient) FetchAllMovableObjects(ctx context.Context, in *FetchAllMovableObjectsRequest, opts ...grpc.CallOption) (MruVMovableObjectsService_FetchAllMovableObjectsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVMovableObjectsService_serviceDesc.Streams[0], "/mruv.objects.MruVMovableObjectsService/FetchAllMovableObjects", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVMovableObjectsServiceFetchAllMovableObjectsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVMovableObjectsService_FetchAllMovableObjectsClient interface {
	Recv() (*FetchAllMovableObjectsResponse, error)
	grpc.ClientStream
}

type mruVMovableObjectsServiceFetchAllMovableObjectsClient struct {
	grpc.ClientStream
}

func (x *mruVMovableObjectsServiceFetchAllMovableObjectsClient) Recv() (*FetchAllMovableObjectsResponse, error) {
	m := new(FetchAllMovableObjectsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVMovableObjectsServiceServer is the server API for MruVMovableObjectsService service.
type MruVMovableObjectsServiceServer interface {
	// Create a movable object.
	CreateMovableObject(context.Context, *CreateMovableObjectRequest) (*CreateMovableObjectResponse, error)
	// Get a movable object.
	GetMovableObject(context.Context, *GetMovableObjectRequest) (*GetMovableObjectResponse, error)
	// Update a movable object.
	UpdateMovableObject(context.Context, *UpdateMovableObjectRequest) (*UpdateMovableObjectResponse, error)
	// Delete a movable object.
	DeleteMovableObject(context.Context, *DeleteMovableObjectRequest) (*DeleteMovableObjectResponse, error)
	// Move an object to other state.
	MoveObject(context.Context, *MoveObjectRequest) (*MoveObjectResponse, error)
	// Move an object to next state.
	MoveObjectNext(context.Context, *MoveObjectNextRequest) (*MoveObjectNextResponse, error)
	// Move an object to previous state.
	MoveObjectPrevious(context.Context, *MoveObjectPreviousRequest) (*MoveObjectPreviousResponse, error)
	//
	FetchAllMovableObjects(*FetchAllMovableObjectsRequest, MruVMovableObjectsService_FetchAllMovableObjectsServer) error
}

// UnimplementedMruVMovableObjectsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVMovableObjectsServiceServer struct {
}

func (*UnimplementedMruVMovableObjectsServiceServer) CreateMovableObject(context.Context, *CreateMovableObjectRequest) (*CreateMovableObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMovableObject not implemented")
}
func (*UnimplementedMruVMovableObjectsServiceServer) GetMovableObject(context.Context, *GetMovableObjectRequest) (*GetMovableObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMovableObject not implemented")
}
func (*UnimplementedMruVMovableObjectsServiceServer) UpdateMovableObject(context.Context, *UpdateMovableObjectRequest) (*UpdateMovableObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateMovableObject not implemented")
}
func (*UnimplementedMruVMovableObjectsServiceServer) DeleteMovableObject(context.Context, *DeleteMovableObjectRequest) (*DeleteMovableObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMovableObject not implemented")
}
func (*UnimplementedMruVMovableObjectsServiceServer) MoveObject(context.Context, *MoveObjectRequest) (*MoveObjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveObject not implemented")
}
func (*UnimplementedMruVMovableObjectsServiceServer) MoveObjectNext(context.Context, *MoveObjectNextRequest) (*MoveObjectNextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveObjectNext not implemented")
}
func (*UnimplementedMruVMovableObjectsServiceServer) MoveObjectPrevious(context.Context, *MoveObjectPreviousRequest) (*MoveObjectPreviousResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MoveObjectPrevious not implemented")
}
func (*UnimplementedMruVMovableObjectsServiceServer) FetchAllMovableObjects(*FetchAllMovableObjectsRequest, MruVMovableObjectsService_FetchAllMovableObjectsServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchAllMovableObjects not implemented")
}

func RegisterMruVMovableObjectsServiceServer(s *grpc.Server, srv MruVMovableObjectsServiceServer) {
	s.RegisterService(&_MruVMovableObjectsService_serviceDesc, srv)
}

func _MruVMovableObjectsService_CreateMovableObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMovableObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVMovableObjectsServiceServer).CreateMovableObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.objects.MruVMovableObjectsService/CreateMovableObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVMovableObjectsServiceServer).CreateMovableObject(ctx, req.(*CreateMovableObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVMovableObjectsService_GetMovableObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMovableObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVMovableObjectsServiceServer).GetMovableObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.objects.MruVMovableObjectsService/GetMovableObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVMovableObjectsServiceServer).GetMovableObject(ctx, req.(*GetMovableObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVMovableObjectsService_UpdateMovableObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateMovableObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVMovableObjectsServiceServer).UpdateMovableObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.objects.MruVMovableObjectsService/UpdateMovableObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVMovableObjectsServiceServer).UpdateMovableObject(ctx, req.(*UpdateMovableObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVMovableObjectsService_DeleteMovableObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMovableObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVMovableObjectsServiceServer).DeleteMovableObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.objects.MruVMovableObjectsService/DeleteMovableObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVMovableObjectsServiceServer).DeleteMovableObject(ctx, req.(*DeleteMovableObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVMovableObjectsService_MoveObject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveObjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVMovableObjectsServiceServer).MoveObject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.objects.MruVMovableObjectsService/MoveObject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVMovableObjectsServiceServer).MoveObject(ctx, req.(*MoveObjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVMovableObjectsService_MoveObjectNext_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveObjectNextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVMovableObjectsServiceServer).MoveObjectNext(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.objects.MruVMovableObjectsService/MoveObjectNext",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVMovableObjectsServiceServer).MoveObjectNext(ctx, req.(*MoveObjectNextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVMovableObjectsService_MoveObjectPrevious_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MoveObjectPreviousRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVMovableObjectsServiceServer).MoveObjectPrevious(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.objects.MruVMovableObjectsService/MoveObjectPrevious",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVMovableObjectsServiceServer).MoveObjectPrevious(ctx, req.(*MoveObjectPreviousRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVMovableObjectsService_FetchAllMovableObjects_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchAllMovableObjectsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVMovableObjectsServiceServer).FetchAllMovableObjects(m, &mruVMovableObjectsServiceFetchAllMovableObjectsServer{stream})
}

type MruVMovableObjectsService_FetchAllMovableObjectsServer interface {
	Send(*FetchAllMovableObjectsResponse) error
	grpc.ServerStream
}

type mruVMovableObjectsServiceFetchAllMovableObjectsServer struct {
	grpc.ServerStream
}

func (x *mruVMovableObjectsServiceFetchAllMovableObjectsServer) Send(m *FetchAllMovableObjectsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVMovableObjectsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.objects.MruVMovableObjectsService",
	HandlerType: (*MruVMovableObjectsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMovableObject",
			Handler:    _MruVMovableObjectsService_CreateMovableObject_Handler,
		},
		{
			MethodName: "GetMovableObject",
			Handler:    _MruVMovableObjectsService_GetMovableObject_Handler,
		},
		{
			MethodName: "UpdateMovableObject",
			Handler:    _MruVMovableObjectsService_UpdateMovableObject_Handler,
		},
		{
			MethodName: "DeleteMovableObject",
			Handler:    _MruVMovableObjectsService_DeleteMovableObject_Handler,
		},
		{
			MethodName: "MoveObject",
			Handler:    _MruVMovableObjectsService_MoveObject_Handler,
		},
		{
			MethodName: "MoveObjectNext",
			Handler:    _MruVMovableObjectsService_MoveObjectNext_Handler,
		},
		{
			MethodName: "MoveObjectPrevious",
			Handler:    _MruVMovableObjectsService_MoveObjectPrevious_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchAllMovableObjects",
			Handler:       _MruVMovableObjectsService_FetchAllMovableObjects_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "objects/movable.proto",
}
