// Code generated by protoc-gen-go. DO NOT EDIT.
// source: items/items.proto

package items

import (
	context "context"
	fmt "fmt"
	common "github.com/MruV-RP/mruv-pb-go/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for `MruVItemsService.GetItems`.
type GetItemsRequest struct {
	// Limit of the returned items.
	Limit                uint32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetItemsRequest) Reset()         { *m = GetItemsRequest{} }
func (m *GetItemsRequest) String() string { return proto.CompactTextString(m) }
func (*GetItemsRequest) ProtoMessage()    {}
func (*GetItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{0}
}

func (m *GetItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemsRequest.Unmarshal(m, b)
}
func (m *GetItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemsRequest.Marshal(b, m, deterministic)
}
func (m *GetItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemsRequest.Merge(m, src)
}
func (m *GetItemsRequest) XXX_Size() int {
	return xxx_messageInfo_GetItemsRequest.Size(m)
}
func (m *GetItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemsRequest proto.InternalMessageInfo

func (m *GetItemsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

// Response message for `MruVItemsService.GetItems`.
type GetItemsResponse struct {
	// List of items.
	Items                []*Item  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetItemsResponse) Reset()         { *m = GetItemsResponse{} }
func (m *GetItemsResponse) String() string { return proto.CompactTextString(m) }
func (*GetItemsResponse) ProtoMessage()    {}
func (*GetItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{1}
}

func (m *GetItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemsResponse.Unmarshal(m, b)
}
func (m *GetItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemsResponse.Marshal(b, m, deterministic)
}
func (m *GetItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemsResponse.Merge(m, src)
}
func (m *GetItemsResponse) XXX_Size() int {
	return xxx_messageInfo_GetItemsResponse.Size(m)
}
func (m *GetItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemsResponse proto.InternalMessageInfo

func (m *GetItemsResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

// Request message for `MruVItemsService.GetItemTypes`.
type GetItemTypesRequest struct {
	// Limit of the returned item types.
	Limit                uint32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetItemTypesRequest) Reset()         { *m = GetItemTypesRequest{} }
func (m *GetItemTypesRequest) String() string { return proto.CompactTextString(m) }
func (*GetItemTypesRequest) ProtoMessage()    {}
func (*GetItemTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{2}
}

func (m *GetItemTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemTypesRequest.Unmarshal(m, b)
}
func (m *GetItemTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemTypesRequest.Marshal(b, m, deterministic)
}
func (m *GetItemTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemTypesRequest.Merge(m, src)
}
func (m *GetItemTypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetItemTypesRequest.Size(m)
}
func (m *GetItemTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemTypesRequest proto.InternalMessageInfo

func (m *GetItemTypesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

//Response message for `MruVItemsService.GetItemTypes`.
type GetItemTypesResponse struct {
	//List of item types.
	ItemTypes            []*ItemType `protobuf:"bytes,1,rep,name=item_types,json=itemTypes,proto3" json:"item_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetItemTypesResponse) Reset()         { *m = GetItemTypesResponse{} }
func (m *GetItemTypesResponse) String() string { return proto.CompactTextString(m) }
func (*GetItemTypesResponse) ProtoMessage()    {}
func (*GetItemTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{3}
}

func (m *GetItemTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemTypesResponse.Unmarshal(m, b)
}
func (m *GetItemTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemTypesResponse.Marshal(b, m, deterministic)
}
func (m *GetItemTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemTypesResponse.Merge(m, src)
}
func (m *GetItemTypesResponse) XXX_Size() int {
	return xxx_messageInfo_GetItemTypesResponse.Size(m)
}
func (m *GetItemTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemTypesResponse proto.InternalMessageInfo

func (m *GetItemTypesResponse) GetItemTypes() []*ItemType {
	if m != nil {
		return m.ItemTypes
	}
	return nil
}

//Request message for `MruVItemsService.GetContainers`.
type GetContainersRequest struct {
	//Limit of the returned containers.
	Limit                uint32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainersRequest) Reset()         { *m = GetContainersRequest{} }
func (m *GetContainersRequest) String() string { return proto.CompactTextString(m) }
func (*GetContainersRequest) ProtoMessage()    {}
func (*GetContainersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{4}
}

func (m *GetContainersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainersRequest.Unmarshal(m, b)
}
func (m *GetContainersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainersRequest.Marshal(b, m, deterministic)
}
func (m *GetContainersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainersRequest.Merge(m, src)
}
func (m *GetContainersRequest) XXX_Size() int {
	return xxx_messageInfo_GetContainersRequest.Size(m)
}
func (m *GetContainersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainersRequest proto.InternalMessageInfo

func (m *GetContainersRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

//Response message for `MruVItemsService.GetContainers`.
type GetContainersResponse struct {
	//List of containers.
	Containers           []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetContainersResponse) Reset()         { *m = GetContainersResponse{} }
func (m *GetContainersResponse) String() string { return proto.CompactTextString(m) }
func (*GetContainersResponse) ProtoMessage()    {}
func (*GetContainersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{5}
}

func (m *GetContainersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainersResponse.Unmarshal(m, b)
}
func (m *GetContainersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainersResponse.Marshal(b, m, deterministic)
}
func (m *GetContainersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainersResponse.Merge(m, src)
}
func (m *GetContainersResponse) XXX_Size() int {
	return xxx_messageInfo_GetContainersResponse.Size(m)
}
func (m *GetContainersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainersResponse proto.InternalMessageInfo

func (m *GetContainersResponse) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

//Request message for `MruVItemsService.GetContainerTypes`.
type GetContainerTypesRequest struct {
	//Limit of the returned container types.
	Limit                uint32   `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainerTypesRequest) Reset()         { *m = GetContainerTypesRequest{} }
func (m *GetContainerTypesRequest) String() string { return proto.CompactTextString(m) }
func (*GetContainerTypesRequest) ProtoMessage()    {}
func (*GetContainerTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{6}
}

func (m *GetContainerTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerTypesRequest.Unmarshal(m, b)
}
func (m *GetContainerTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerTypesRequest.Marshal(b, m, deterministic)
}
func (m *GetContainerTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerTypesRequest.Merge(m, src)
}
func (m *GetContainerTypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetContainerTypesRequest.Size(m)
}
func (m *GetContainerTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerTypesRequest proto.InternalMessageInfo

func (m *GetContainerTypesRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

//Response message for `MruVItemsService.GetContainers`.
type GetContainerTypesResponse struct {
	//List of container types.
	ContainerTypes       []*ContainerType `protobuf:"bytes,1,rep,name=container_types,json=containerTypes,proto3" json:"container_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetContainerTypesResponse) Reset()         { *m = GetContainerTypesResponse{} }
func (m *GetContainerTypesResponse) String() string { return proto.CompactTextString(m) }
func (*GetContainerTypesResponse) ProtoMessage()    {}
func (*GetContainerTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{7}
}

func (m *GetContainerTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerTypesResponse.Unmarshal(m, b)
}
func (m *GetContainerTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerTypesResponse.Marshal(b, m, deterministic)
}
func (m *GetContainerTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerTypesResponse.Merge(m, src)
}
func (m *GetContainerTypesResponse) XXX_Size() int {
	return xxx_messageInfo_GetContainerTypesResponse.Size(m)
}
func (m *GetContainerTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerTypesResponse proto.InternalMessageInfo

func (m *GetContainerTypesResponse) GetContainerTypes() []*ContainerType {
	if m != nil {
		return m.ContainerTypes
	}
	return nil
}

//Request message for `MruVItemsService.PutItem`.
type PutItemRequest struct {
	//ID of container where to put item.
	ContainerId uint32 `protobuf:"varint,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	//ID of item we wan to put in.
	ItemId uint32 `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Types that are valid to be assigned to Where:
	//	*PutItemRequest_Slot
	Where                isPutItemRequest_Where `protobuf_oneof:"where"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PutItemRequest) Reset()         { *m = PutItemRequest{} }
func (m *PutItemRequest) String() string { return proto.CompactTextString(m) }
func (*PutItemRequest) ProtoMessage()    {}
func (*PutItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{8}
}

func (m *PutItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutItemRequest.Unmarshal(m, b)
}
func (m *PutItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutItemRequest.Marshal(b, m, deterministic)
}
func (m *PutItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutItemRequest.Merge(m, src)
}
func (m *PutItemRequest) XXX_Size() int {
	return xxx_messageInfo_PutItemRequest.Size(m)
}
func (m *PutItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutItemRequest proto.InternalMessageInfo

func (m *PutItemRequest) GetContainerId() uint32 {
	if m != nil {
		return m.ContainerId
	}
	return 0
}

func (m *PutItemRequest) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

type isPutItemRequest_Where interface {
	isPutItemRequest_Where()
}

type PutItemRequest_Slot struct {
	Slot int32 `protobuf:"varint,3,opt,name=slot,proto3,oneof"`
}

func (*PutItemRequest_Slot) isPutItemRequest_Where() {}

func (m *PutItemRequest) GetWhere() isPutItemRequest_Where {
	if m != nil {
		return m.Where
	}
	return nil
}

func (m *PutItemRequest) GetSlot() int32 {
	if x, ok := m.GetWhere().(*PutItemRequest_Slot); ok {
		return x.Slot
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PutItemRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PutItemRequest_Slot)(nil),
	}
}

//Response message for `MruVItemsService.PutItem`
type PutItemResponse struct {
	//Container with items inside.
	InsideItem           *InsideItem `protobuf:"bytes,1,opt,name=inside_item,json=insideItem,proto3" json:"inside_item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *PutItemResponse) Reset()         { *m = PutItemResponse{} }
func (m *PutItemResponse) String() string { return proto.CompactTextString(m) }
func (*PutItemResponse) ProtoMessage()    {}
func (*PutItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{9}
}

func (m *PutItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutItemResponse.Unmarshal(m, b)
}
func (m *PutItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutItemResponse.Marshal(b, m, deterministic)
}
func (m *PutItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutItemResponse.Merge(m, src)
}
func (m *PutItemResponse) XXX_Size() int {
	return xxx_messageInfo_PutItemResponse.Size(m)
}
func (m *PutItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutItemResponse proto.InternalMessageInfo

func (m *PutItemResponse) GetInsideItem() *InsideItem {
	if m != nil {
		return m.InsideItem
	}
	return nil
}

//Request message for `MruVItemsService.GetContainerItems`.
type GetContainerItemsRequest struct {
	//ID of container with items.
	ContainerId uint32 `protobuf:"varint,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	//Limit of the returned items.
	Limit                uint32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainerItemsRequest) Reset()         { *m = GetContainerItemsRequest{} }
func (m *GetContainerItemsRequest) String() string { return proto.CompactTextString(m) }
func (*GetContainerItemsRequest) ProtoMessage()    {}
func (*GetContainerItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{10}
}

func (m *GetContainerItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerItemsRequest.Unmarshal(m, b)
}
func (m *GetContainerItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerItemsRequest.Marshal(b, m, deterministic)
}
func (m *GetContainerItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerItemsRequest.Merge(m, src)
}
func (m *GetContainerItemsRequest) XXX_Size() int {
	return xxx_messageInfo_GetContainerItemsRequest.Size(m)
}
func (m *GetContainerItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerItemsRequest proto.InternalMessageInfo

func (m *GetContainerItemsRequest) GetContainerId() uint32 {
	if m != nil {
		return m.ContainerId
	}
	return 0
}

func (m *GetContainerItemsRequest) GetLimit() uint32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

//Request message for `MruVItemsService.GetContainerItems`.
type GetContainerItemsResponse struct {
	//List of items inside containers.
	Items                []*InsideItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetContainerItemsResponse) Reset()         { *m = GetContainerItemsResponse{} }
func (m *GetContainerItemsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContainerItemsResponse) ProtoMessage()    {}
func (*GetContainerItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{11}
}

func (m *GetContainerItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerItemsResponse.Unmarshal(m, b)
}
func (m *GetContainerItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerItemsResponse.Marshal(b, m, deterministic)
}
func (m *GetContainerItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerItemsResponse.Merge(m, src)
}
func (m *GetContainerItemsResponse) XXX_Size() int {
	return xxx_messageInfo_GetContainerItemsResponse.Size(m)
}
func (m *GetContainerItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerItemsResponse proto.InternalMessageInfo

func (m *GetContainerItemsResponse) GetItems() []*InsideItem {
	if m != nil {
		return m.Items
	}
	return nil
}

//Request message for `MruVItemsService.PullItem`.
type PullItemRequest struct {
	//ID of the container from which we pull out a item.
	ContainerId uint32 `protobuf:"varint,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	//ID of the item we want to pull out.
	//That item must be inside the container.
	ItemId               uint32   `protobuf:"varint,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PullItemRequest) Reset()         { *m = PullItemRequest{} }
func (m *PullItemRequest) String() string { return proto.CompactTextString(m) }
func (*PullItemRequest) ProtoMessage()    {}
func (*PullItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{12}
}

func (m *PullItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PullItemRequest.Unmarshal(m, b)
}
func (m *PullItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PullItemRequest.Marshal(b, m, deterministic)
}
func (m *PullItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PullItemRequest.Merge(m, src)
}
func (m *PullItemRequest) XXX_Size() int {
	return xxx_messageInfo_PullItemRequest.Size(m)
}
func (m *PullItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PullItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PullItemRequest proto.InternalMessageInfo

func (m *PullItemRequest) GetContainerId() uint32 {
	if m != nil {
		return m.ContainerId
	}
	return 0
}

func (m *PullItemRequest) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

//Request message for `MruVItemsService.SortItems`.
type SortItemsRequest struct {
	//ID of the container which contain items.
	ContainerId uint32 `protobuf:"varint,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	//Sorting mode.
	SortBy               SortingMode `protobuf:"varint,2,opt,name=sort_by,json=sortBy,proto3,enum=mruv.SortingMode" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SortItemsRequest) Reset()         { *m = SortItemsRequest{} }
func (m *SortItemsRequest) String() string { return proto.CompactTextString(m) }
func (*SortItemsRequest) ProtoMessage()    {}
func (*SortItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{13}
}

func (m *SortItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortItemsRequest.Unmarshal(m, b)
}
func (m *SortItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortItemsRequest.Marshal(b, m, deterministic)
}
func (m *SortItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortItemsRequest.Merge(m, src)
}
func (m *SortItemsRequest) XXX_Size() int {
	return xxx_messageInfo_SortItemsRequest.Size(m)
}
func (m *SortItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SortItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SortItemsRequest proto.InternalMessageInfo

func (m *SortItemsRequest) GetContainerId() uint32 {
	if m != nil {
		return m.ContainerId
	}
	return 0
}

func (m *SortItemsRequest) GetSortBy() SortingMode {
	if m != nil {
		return m.SortBy
	}
	return SortingMode_UNKNOWN
}

//Response message for `MruVItemsService.SortItems`.
type SortItemsResponse struct {
	//Container with sorted items inside.
	Container            *Container `protobuf:"bytes,1,opt,name=container,proto3" json:"container,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SortItemsResponse) Reset()         { *m = SortItemsResponse{} }
func (m *SortItemsResponse) String() string { return proto.CompactTextString(m) }
func (*SortItemsResponse) ProtoMessage()    {}
func (*SortItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{14}
}

func (m *SortItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortItemsResponse.Unmarshal(m, b)
}
func (m *SortItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortItemsResponse.Marshal(b, m, deterministic)
}
func (m *SortItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortItemsResponse.Merge(m, src)
}
func (m *SortItemsResponse) XXX_Size() int {
	return xxx_messageInfo_SortItemsResponse.Size(m)
}
func (m *SortItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SortItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SortItemsResponse proto.InternalMessageInfo

func (m *SortItemsResponse) GetContainer() *Container {
	if m != nil {
		return m.Container
	}
	return nil
}

//Request message for `MruVItemsService.GetNearestItems`.
type GetNearestItemsRequest struct {
	//Position from which to calculate the distance
	Position *common.Position `protobuf:"bytes,1,opt,name=position,proto3" json:"position,omitempty"`
	//ID of container that contains items.
	ContainerId uint32 `protobuf:"varint,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	//The distance over which the items are ignored.
	DistanceLimit        float64  `protobuf:"fixed64,3,opt,name=distance_limit,json=distanceLimit,proto3" json:"distance_limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNearestItemsRequest) Reset()         { *m = GetNearestItemsRequest{} }
func (m *GetNearestItemsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNearestItemsRequest) ProtoMessage()    {}
func (*GetNearestItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{15}
}

func (m *GetNearestItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestItemsRequest.Unmarshal(m, b)
}
func (m *GetNearestItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestItemsRequest.Marshal(b, m, deterministic)
}
func (m *GetNearestItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestItemsRequest.Merge(m, src)
}
func (m *GetNearestItemsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNearestItemsRequest.Size(m)
}
func (m *GetNearestItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestItemsRequest proto.InternalMessageInfo

func (m *GetNearestItemsRequest) GetPosition() *common.Position {
	if m != nil {
		return m.Position
	}
	return nil
}

func (m *GetNearestItemsRequest) GetContainerId() uint32 {
	if m != nil {
		return m.ContainerId
	}
	return 0
}

func (m *GetNearestItemsRequest) GetDistanceLimit() float64 {
	if m != nil {
		return m.DistanceLimit
	}
	return 0
}

//Response message for `MruVItemsService.GetNearestItems`.
type GetNearestItemsResponse struct {
	//List of items sorted from nearest to farthest.
	Item                 []*InsideItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetNearestItemsResponse) Reset()         { *m = GetNearestItemsResponse{} }
func (m *GetNearestItemsResponse) String() string { return proto.CompactTextString(m) }
func (*GetNearestItemsResponse) ProtoMessage()    {}
func (*GetNearestItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{16}
}

func (m *GetNearestItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestItemsResponse.Unmarshal(m, b)
}
func (m *GetNearestItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestItemsResponse.Marshal(b, m, deterministic)
}
func (m *GetNearestItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestItemsResponse.Merge(m, src)
}
func (m *GetNearestItemsResponse) XXX_Size() int {
	return xxx_messageInfo_GetNearestItemsResponse.Size(m)
}
func (m *GetNearestItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestItemsResponse proto.InternalMessageInfo

func (m *GetNearestItemsResponse) GetItem() []*InsideItem {
	if m != nil {
		return m.Item
	}
	return nil
}

//Request message for `MruVItemsService.UseItem`.
type UseItemRequest struct {
	ItemId               uint32   `protobuf:"varint,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseItemRequest) Reset()         { *m = UseItemRequest{} }
func (m *UseItemRequest) String() string { return proto.CompactTextString(m) }
func (*UseItemRequest) ProtoMessage()    {}
func (*UseItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{17}
}

func (m *UseItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseItemRequest.Unmarshal(m, b)
}
func (m *UseItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseItemRequest.Marshal(b, m, deterministic)
}
func (m *UseItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseItemRequest.Merge(m, src)
}
func (m *UseItemRequest) XXX_Size() int {
	return xxx_messageInfo_UseItemRequest.Size(m)
}
func (m *UseItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UseItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UseItemRequest proto.InternalMessageInfo

func (m *UseItemRequest) GetItemId() uint32 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

//Response message for `MruVItemsService.UseItem`.
type UseItemResponse struct {
	//Is item usage was successful.
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseItemResponse) Reset()         { *m = UseItemResponse{} }
func (m *UseItemResponse) String() string { return proto.CompactTextString(m) }
func (*UseItemResponse) ProtoMessage()    {}
func (*UseItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{18}
}

func (m *UseItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseItemResponse.Unmarshal(m, b)
}
func (m *UseItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseItemResponse.Marshal(b, m, deterministic)
}
func (m *UseItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseItemResponse.Merge(m, src)
}
func (m *UseItemResponse) XXX_Size() int {
	return xxx_messageInfo_UseItemResponse.Size(m)
}
func (m *UseItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UseItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UseItemResponse proto.InternalMessageInfo

func (m *UseItemResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*GetItemsRequest)(nil), "mruv.GetItemsRequest")
	proto.RegisterType((*GetItemsResponse)(nil), "mruv.GetItemsResponse")
	proto.RegisterType((*GetItemTypesRequest)(nil), "mruv.GetItemTypesRequest")
	proto.RegisterType((*GetItemTypesResponse)(nil), "mruv.GetItemTypesResponse")
	proto.RegisterType((*GetContainersRequest)(nil), "mruv.GetContainersRequest")
	proto.RegisterType((*GetContainersResponse)(nil), "mruv.GetContainersResponse")
	proto.RegisterType((*GetContainerTypesRequest)(nil), "mruv.GetContainerTypesRequest")
	proto.RegisterType((*GetContainerTypesResponse)(nil), "mruv.GetContainerTypesResponse")
	proto.RegisterType((*PutItemRequest)(nil), "mruv.PutItemRequest")
	proto.RegisterType((*PutItemResponse)(nil), "mruv.PutItemResponse")
	proto.RegisterType((*GetContainerItemsRequest)(nil), "mruv.GetContainerItemsRequest")
	proto.RegisterType((*GetContainerItemsResponse)(nil), "mruv.GetContainerItemsResponse")
	proto.RegisterType((*PullItemRequest)(nil), "mruv.PullItemRequest")
	proto.RegisterType((*SortItemsRequest)(nil), "mruv.SortItemsRequest")
	proto.RegisterType((*SortItemsResponse)(nil), "mruv.SortItemsResponse")
	proto.RegisterType((*GetNearestItemsRequest)(nil), "mruv.GetNearestItemsRequest")
	proto.RegisterType((*GetNearestItemsResponse)(nil), "mruv.GetNearestItemsResponse")
	proto.RegisterType((*UseItemRequest)(nil), "mruv.UseItemRequest")
	proto.RegisterType((*UseItemResponse)(nil), "mruv.UseItemResponse")
}

func init() { proto.RegisterFile("items/items.proto", fileDescriptor_2532e29ffc1dd680) }

var fileDescriptor_2532e29ffc1dd680 = []byte{
	// 1210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xc6, 0x69, 0x12, 0x27, 0xc7, 0x89, 0x7f, 0xd6, 0x76, 0xe2, 0xa8, 0x85, 0x84, 0x2d, 0x81,
	0xe0, 0x90, 0x88, 0x86, 0x72, 0xc1, 0xcf, 0x0c, 0x4c, 0x12, 0xa6, 0xf5, 0xd0, 0x40, 0x46, 0x29,
	0x05, 0x0a, 0x8c, 0xab, 0x58, 0x3b, 0x89, 0x06, 0x5b, 0x32, 0xd2, 0x3a, 0xc4, 0xcd, 0xf8, 0x02,
	0x1e, 0x80, 0x1b, 0x5e, 0x84, 0x77, 0xe1, 0x15, 0x78, 0x04, 0x1e, 0x80, 0xd1, 0xea, 0xe8, 0x67,
	0x57, 0x72, 0xeb, 0xce, 0x70, 0xe3, 0xf1, 0x9e, 0x3d, 0xfb, 0x7d, 0xe7, 0x67, 0xf7, 0x9c, 0x23,
	0xa8, 0xd9, 0x9c, 0x0d, 0x7c, 0x5d, 0xfc, 0xee, 0x0f, 0x3d, 0x97, 0xbb, 0x64, 0x7e, 0xe0, 0x8d,
	0xae, 0xb4, 0x3b, 0x17, 0xae, 0x7b, 0xd1, 0x67, 0xba, 0x39, 0xb4, 0x75, 0xd3, 0x71, 0x5c, 0x6e,
	0x72, 0xdb, 0x75, 0x50, 0x47, 0xab, 0xf7, 0xdc, 0xc1, 0xc0, 0x75, 0xf4, 0x4b, 0x66, 0xf6, 0xf9,
	0x25, 0x0a, 0xd7, 0x53, 0x58, 0xdd, 0x81, 0x6b, 0xb1, 0x3e, 0x6e, 0x34, 0x50, 0xdb, 0x1f, 0x9a,
	0xdc, 0x36, 0x51, 0x4a, 0xdf, 0x81, 0xca, 0x03, 0xc6, 0x3b, 0x81, 0xb6, 0xc1, 0x7e, 0x19, 0x31,
	0x9f, 0x93, 0x06, 0x2c, 0xf4, 0xed, 0x81, 0xcd, 0x5b, 0x85, 0xad, 0xc2, 0xce, 0xaa, 0x11, 0x2e,
	0xe8, 0x7d, 0xa8, 0x26, 0x8a, 0xfe, 0xd0, 0x75, 0x7c, 0x46, 0xb6, 0x60, 0x41, 0xf0, 0xb4, 0x0a,
	0x5b, 0xb7, 0x76, 0x4a, 0x07, 0xb0, 0x1f, 0x18, 0xbd, 0x1f, 0xe8, 0x18, 0xe1, 0x06, 0xdd, 0x85,
	0x3a, 0x9e, 0x7a, 0x3c, 0x1e, 0xb2, 0x97, 0x50, 0x7c, 0x01, 0x0d, 0x59, 0x19, 0x69, 0xf6, 0x00,
	0x02, 0xb4, 0x2e, 0x0f, 0xa4, 0xc8, 0x55, 0x4e, 0xb8, 0x02, 0x65, 0x63, 0xd9, 0x8e, 0x8e, 0xd1,
	0xf7, 0x04, 0xcc, 0x91, 0xeb, 0x70, 0xd3, 0x76, 0x98, 0xf7, 0x12, 0xd2, 0x87, 0xd0, 0x54, 0xb4,
	0x91, 0x55, 0x07, 0xe8, 0xc5, 0x52, 0x64, 0xad, 0x84, 0xac, 0xb1, 0xb6, 0x91, 0x52, 0xa1, 0xef,
	0x43, 0x2b, 0x8d, 0x34, 0x83, 0xc3, 0xdf, 0xc3, 0x46, 0xce, 0x09, 0xe4, 0xff, 0x14, 0x2a, 0x31,
	0xb8, 0xe4, 0x7a, 0x5d, 0x31, 0x42, 0xf8, 0x5f, 0xee, 0x49, 0x28, 0xf4, 0x67, 0x28, 0x9f, 0x8e,
	0x44, 0x2c, 0x23, 0x13, 0xde, 0x84, 0x95, 0x04, 0xcf, 0xb6, 0xd0, 0x92, 0x52, 0x2c, 0xeb, 0x58,
	0x64, 0x1d, 0x8a, 0x22, 0xd0, 0xb6, 0xd5, 0x9a, 0x13, 0xbb, 0x8b, 0xc1, 0xb2, 0x63, 0x91, 0x06,
	0xcc, 0xfb, 0x7d, 0x97, 0xb7, 0x6e, 0x6d, 0x15, 0x76, 0x16, 0x1e, 0xbe, 0x66, 0x88, 0xd5, 0x61,
	0x11, 0x16, 0x7e, 0xbd, 0x64, 0x1e, 0xa3, 0xc7, 0x50, 0x89, 0xc9, 0xd0, 0xfa, 0x7b, 0x50, 0xb2,
	0x1d, 0xdf, 0xb6, 0x58, 0x37, 0x80, 0x10, 0x64, 0xa5, 0x83, 0x2a, 0x26, 0x4d, 0x6c, 0x08, 0x75,
	0xb0, 0xe3, 0xff, 0xf4, 0x4c, 0x8e, 0x9f, 0x74, 0x27, 0x67, 0x30, 0x3e, 0x0e, 0xf1, 0x5c, 0x3a,
	0xc4, 0x47, 0x72, 0x88, 0xe5, 0xfb, 0xfb, 0xb6, 0x7c, 0x7f, 0xb3, 0xe6, 0xe1, 0x2d, 0x3e, 0x09,
	0xfc, 0xeb, 0xf7, 0xff, 0xa7, 0x68, 0x52, 0x13, 0xaa, 0x67, 0xae, 0xc7, 0x5f, 0xd5, 0xc1, 0x36,
	0x14, 0x7d, 0xd7, 0xe3, 0xdd, 0xf3, 0xb1, 0xc0, 0x2b, 0x1f, 0xd4, 0x42, 0x7b, 0x03, 0x2c, 0xdb,
	0xb9, 0x38, 0x71, 0x2d, 0x66, 0x2c, 0x06, 0x1a, 0x87, 0x63, 0x7a, 0x08, 0xb5, 0x14, 0x45, 0xfc,
	0x8e, 0x96, 0x63, 0x3c, 0xcc, 0x48, 0xe6, 0x42, 0x27, 0x1a, 0xf4, 0x8f, 0x02, 0xac, 0x3d, 0x60,
	0xfc, 0x2b, 0x66, 0x7a, 0xcc, 0x97, 0xad, 0x6d, 0xc3, 0xd2, 0xd0, 0xf5, 0xed, 0xa0, 0x18, 0x21,
	0x10, 0xbe, 0xc7, 0x53, 0x94, 0x1a, 0xf1, 0x7e, 0xc6, 0xb3, 0xb9, 0xac, 0x67, 0xdb, 0x50, 0xb6,
	0x6c, 0x9f, 0x9b, 0x4e, 0x8f, 0x75, 0xc3, 0x1c, 0x06, 0x17, 0xad, 0x60, 0xac, 0x46, 0xd2, 0x47,
	0x22, 0x97, 0x9f, 0xc1, 0x7a, 0xc6, 0x1e, 0x74, 0xed, 0x2d, 0x98, 0xc7, 0x7b, 0x96, 0x9f, 0x48,
	0xb1, 0x4b, 0xdf, 0x85, 0xf2, 0x37, 0x3e, 0x4b, 0xa7, 0x31, 0x95, 0xa3, 0x82, 0x94, 0xa3, 0x5d,
	0xa8, 0xc4, 0xaa, 0xc8, 0xd1, 0x82, 0xa2, 0x3f, 0xea, 0xf5, 0x98, 0xef, 0x0b, 0xdd, 0x25, 0x23,
	0x5a, 0x1e, 0xfc, 0x5b, 0x83, 0xca, 0x89, 0x37, 0x7a, 0x12, 0xa8, 0x9f, 0x31, 0xef, 0xca, 0xee,
	0x31, 0xf2, 0x11, 0xc0, 0x91, 0xc7, 0x4c, 0x2e, 0x30, 0x48, 0xaa, 0x34, 0x6a, 0x2b, 0xc9, 0xff,
	0xce, 0x31, 0xad, 0xfd, 0xfe, 0xf7, 0x3f, 0x7f, 0xce, 0x95, 0xe8, 0xb2, 0x7e, 0x75, 0x2f, 0xac,
	0xda, 0xe4, 0x13, 0x28, 0x62, 0x1d, 0x24, 0x92, 0xae, 0x96, 0x42, 0xa1, 0x6b, 0xe2, 0x5c, 0x95,
	0x94, 0xe3, 0x73, 0xfa, 0x8d, 0x6d, 0x4d, 0xc8, 0xe7, 0x00, 0xc7, 0xac, 0xcf, 0x90, 0x57, 0x3e,
	0x2f, 0x33, 0x23, 0x42, 0x5b, 0x45, 0x78, 0x04, 0x4b, 0x51, 0xa5, 0x27, 0xcd, 0xf0, 0x84, 0xd2,
	0x22, 0xb4, 0x35, 0x55, 0x1c, 0x86, 0x28, 0x72, 0x86, 0xa4, 0x9c, 0xe9, 0x40, 0x39, 0x89, 0x43,
	0x50, 0x9b, 0x88, 0x52, 0xba, 0xb5, 0xaa, 0xbc, 0xee, 0x1c, 0xd3, 0xa6, 0x80, 0xa9, 0xd0, 0xd5,
	0x08, 0x46, 0xd4, 0x34, 0xf2, 0x25, 0x94, 0x52, 0xfd, 0x81, 0x64, 0xce, 0x69, 0x0a, 0x32, 0xd5,
	0x04, 0x4e, 0x83, 0x10, 0x09, 0x27, 0xf4, 0xf2, 0x14, 0xca, 0x49, 0x9c, 0xa6, 0xe0, 0x65, 0x2d,
	0x43, 0xc4, 0x76, 0x1e, 0xe2, 0x8f, 0xb0, 0x92, 0x6e, 0x5f, 0x64, 0x43, 0x0a, 0x52, 0xba, 0x1d,
	0x68, 0x5a, 0xde, 0x16, 0xc6, 0x10, 0x9d, 0x27, 0x8a, 0xf3, 0x27, 0x50, 0x09, 0xe3, 0x18, 0xbf,
	0x55, 0xa2, 0x3e, 0x5e, 0xad, 0xa6, 0x08, 0x92, 0x24, 0x53, 0x91, 0xe4, 0xa4, 0x59, 0x91, 0xaf,
	0x85, 0xb1, 0x09, 0x56, 0xf6, 0xa8, 0xa6, 0xc2, 0xd3, 0xdb, 0x02, 0xab, 0x49, 0xea, 0x32, 0x56,
	0xe8, 0xfd, 0x63, 0xa8, 0x84, 0xf1, 0x7c, 0x21, 0x66, 0x8e, 0x85, 0x88, 0xda, 0xce, 0x45, 0x7d,
	0x06, 0xab, 0x52, 0x77, 0x26, 0x49, 0xe4, 0x32, 0x0d, 0x5e, 0xbb, 0x9d, 0xbb, 0x87, 0x61, 0x95,
	0xde, 0x4b, 0x2a, 0x10, 0x3f, 0x41, 0x5d, 0x89, 0xab, 0xb8, 0x0c, 0x79, 0x4d, 0x56, 0x6b, 0xe6,
	0x08, 0x93, 0x4b, 0x41, 0x89, 0x04, 0x1d, 0xa6, 0xad, 0x2b, 0xc6, 0x26, 0x19, 0x3b, 0x1f, 0x46,
	0xcb, 0xa3, 0xa4, 0x9b, 0x02, 0x7b, 0x83, 0xac, 0x67, 0xb1, 0xc3, 0x08, 0x59, 0x50, 0x57, 0xe2,
	0xfe, 0x22, 0x8e, 0x29, 0x1e, 0x20, 0x4b, 0x7b, 0x2a, 0xcb, 0x10, 0x6a, 0x99, 0x49, 0x85, 0xbc,
	0x91, 0x8d, 0xb7, 0x74, 0xcb, 0x37, 0xa7, 0xee, 0x63, 0x4e, 0xa4, 0xf7, 0xa9, 0x04, 0xee, 0xb7,
	0x82, 0x4c, 0x19, 0xd6, 0xa3, 0x1c, 0x4a, 0xa9, 0x30, 0x6d, 0x4e, 0xdd, 0x47, 0xca, 0x5d, 0x41,
	0xb9, 0x4d, 0xee, 0xaa, 0xb7, 0x2d, 0xdd, 0xa3, 0x26, 0x58, 0xbb, 0x2c, 0x58, 0x8a, 0xfa, 0x7e,
	0x14, 0x50, 0x65, 0x0e, 0x90, 0x4a, 0xf2, 0x87, 0x02, 0x5b, 0x6f, 0xef, 0xcd, 0x80, 0xad, 0xdf,
	0x60, 0xdf, 0x99, 0x90, 0x01, 0x14, 0x71, 0x7a, 0x22, 0x8d, 0x88, 0x24, 0x3d, 0xb9, 0x69, 0x4d,
	0x45, 0x8a, 0xae, 0x20, 0x9d, 0xf6, 0x8a, 0x74, 0xd7, 0xb0, 0x1c, 0x8f, 0x06, 0x64, 0x2d, 0x19,
	0x21, 0xa4, 0x38, 0xae, 0x67, 0xe4, 0x48, 0xfa, 0xb1, 0x20, 0xbd, 0x4f, 0x0e, 0x66, 0x21, 0x0d,
	0x86, 0x11, 0xfd, 0x06, 0x87, 0x96, 0x09, 0xf9, 0xab, 0x20, 0x3e, 0x36, 0xd2, 0x0d, 0x9c, 0xdc,
	0x89, 0x13, 0x96, 0x33, 0x67, 0x68, 0xaf, 0x4f, 0xd9, 0x45, 0x63, 0x9e, 0x09, 0x63, 0x9e, 0x92,
	0xef, 0x66, 0x31, 0xc6, 0x09, 0x11, 0xf4, 0x6b, 0xfd, 0x26, 0x9a, 0x4d, 0xf6, 0xaf, 0x27, 0xfa,
	0x38, 0xb5, 0x1c, 0x4f, 0xf4, 0xe7, 0xa9, 0xe5, 0xf3, 0x09, 0xf9, 0x16, 0x8a, 0x38, 0x06, 0x44,
	0xb9, 0x91, 0x07, 0x88, 0x28, 0x37, 0xca, 0xac, 0x20, 0x3f, 0x5b, 0x25, 0x03, 0xfa, 0xc8, 0x67,
	0x84, 0x89, 0xba, 0x80, 0xc3, 0xc2, 0x19, 0x37, 0xf9, 0x28, 0xae, 0x6d, 0x92, 0x50, 0xa9, 0x6d,
	0xca, 0x1e, 0xb2, 0xb5, 0x04, 0x1b, 0x21, 0xd5, 0x84, 0xcd, 0x0f, 0x21, 0x7f, 0x10, 0x8f, 0x08,
	0x4f, 0x3d, 0x61, 0x9e, 0x1f, 0x4c, 0x64, 0xe8, 0x09, 0x2e, 0x15, 0x4f, 0x62, 0x29, 0x62, 0x6f,
	0x08, 0xec, 0x3a, 0xa9, 0x25, 0xd8, 0x57, 0xa1, 0xca, 0xe1, 0xf6, 0xd3, 0xbb, 0x17, 0x36, 0xbf,
	0x1c, 0x9d, 0xef, 0xf7, 0xdc, 0x81, 0x1e, 0x0c, 0x40, 0x7b, 0xc6, 0xa9, 0x1e, 0xa0, 0xec, 0x0d,
	0xcf, 0xf7, 0x2e, 0xdc, 0x50, 0xfd, 0x7c, 0x51, 0x7c, 0x69, 0x7e, 0xf0, 0x5f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x2c, 0xdf, 0xf2, 0x28, 0xe6, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MruVItemServiceClient is the client API for MruVItemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVItemServiceClient interface {
	//Create new item.
	CreateItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*ItemID, error)
	//Get item by id.
	GetItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*Item, error)
	//Delete item by id.
	DeleteItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*ItemID, error)
	//Gets all items.
	GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*GetItemsResponse, error)
	//Create item type.
	CreateItemType(ctx context.Context, in *ItemType, opts ...grpc.CallOption) (*ItemTypeID, error)
	//Get item type by id.
	GetItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemType, error)
	//Delete item type by id.
	DeleteItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemTypeID, error)
	//Gets all item types.
	GetItemTypes(ctx context.Context, in *GetItemTypesRequest, opts ...grpc.CallOption) (*GetItemTypesResponse, error)
	//Create container.
	CreateContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*ContainerID, error)
	//Get container by id.
	GetContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*Container, error)
	//Delete container by id.
	DeleteContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*ContainerID, error)
	//Get all containers.
	GetContainers(ctx context.Context, in *GetContainersRequest, opts ...grpc.CallOption) (*GetContainersResponse, error)
	//Create container type.
	CreateContainerType(ctx context.Context, in *ContainerType, opts ...grpc.CallOption) (*ContainerTypeID, error)
	//Get container type by id.
	GetContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerType, error)
	//Detele container type by id.
	DeleteContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerTypeID, error)
	//Get all container types.
	GetContainerTypes(ctx context.Context, in *GetContainerTypesRequest, opts ...grpc.CallOption) (*GetContainerTypesResponse, error)
	//Get items inside a container.
	GetContainerItems(ctx context.Context, in *GetContainerItemsRequest, opts ...grpc.CallOption) (*GetContainerItemsResponse, error)
	//Pull item from container.
	PullItem(ctx context.Context, in *PullItemRequest, opts ...grpc.CallOption) (*Item, error)
	//Put item into container.
	PutItem(ctx context.Context, in *PutItemRequest, opts ...grpc.CallOption) (*PutItemResponse, error)
	//Sort items inside container.
	//This procedure change order of items inside container.
	SortItems(ctx context.Context, in *SortItemsRequest, opts ...grpc.CallOption) (*SortItemsResponse, error)
	//Retrieves from the container the list of items nearest to the given position.
	GetNearestItems(ctx context.Context, in *GetNearestItemsRequest, opts ...grpc.CallOption) (*GetNearestItemsResponse, error)
	//Trigger action associated with the item usage.
	UseItem(ctx context.Context, in *UseItemRequest, opts ...grpc.CallOption) (*UseItemResponse, error)
	//Get service health status.
	GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error)
	//Get service current version.
	GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error)
}

type mruVItemServiceClient struct {
	cc *grpc.ClientConn
}

func NewMruVItemServiceClient(cc *grpc.ClientConn) MruVItemServiceClient {
	return &mruVItemServiceClient{cc}
}

func (c *mruVItemServiceClient) CreateItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*ItemID, error) {
	out := new(ItemID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*ItemID, error) {
	out := new(ItemID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*GetItemsResponse, error) {
	out := new(GetItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) CreateItemType(ctx context.Context, in *ItemType, opts ...grpc.CallOption) (*ItemTypeID, error) {
	out := new(ItemTypeID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateItemType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemType, error) {
	out := new(ItemType)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItemType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemTypeID, error) {
	out := new(ItemTypeID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteItemType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItemTypes(ctx context.Context, in *GetItemTypesRequest, opts ...grpc.CallOption) (*GetItemTypesResponse, error) {
	out := new(GetItemTypesResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItemTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) CreateContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*ContainerID, error) {
	out := new(ContainerID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*Container, error) {
	out := new(Container)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*ContainerID, error) {
	out := new(ContainerID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainers(ctx context.Context, in *GetContainersRequest, opts ...grpc.CallOption) (*GetContainersResponse, error) {
	out := new(GetContainersResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) CreateContainerType(ctx context.Context, in *ContainerType, opts ...grpc.CallOption) (*ContainerTypeID, error) {
	out := new(ContainerTypeID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateContainerType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerType, error) {
	out := new(ContainerType)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainerType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerTypeID, error) {
	out := new(ContainerTypeID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteContainerType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainerTypes(ctx context.Context, in *GetContainerTypesRequest, opts ...grpc.CallOption) (*GetContainerTypesResponse, error) {
	out := new(GetContainerTypesResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainerTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainerItems(ctx context.Context, in *GetContainerItemsRequest, opts ...grpc.CallOption) (*GetContainerItemsResponse, error) {
	out := new(GetContainerItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainerItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) PullItem(ctx context.Context, in *PullItemRequest, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/PullItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) PutItem(ctx context.Context, in *PutItemRequest, opts ...grpc.CallOption) (*PutItemResponse, error) {
	out := new(PutItemResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/PutItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) SortItems(ctx context.Context, in *SortItemsRequest, opts ...grpc.CallOption) (*SortItemsResponse, error) {
	out := new(SortItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/SortItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetNearestItems(ctx context.Context, in *GetNearestItemsRequest, opts ...grpc.CallOption) (*GetNearestItemsResponse, error) {
	out := new(GetNearestItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetNearestItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) UseItem(ctx context.Context, in *UseItemRequest, opts ...grpc.CallOption) (*UseItemResponse, error) {
	out := new(UseItemResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/UseItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error) {
	out := new(common.ServiceStatusResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetServiceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error) {
	out := new(common.VersionResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetServiceVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MruVItemServiceServer is the server API for MruVItemService service.
type MruVItemServiceServer interface {
	//Create new item.
	CreateItem(context.Context, *Item) (*ItemID, error)
	//Get item by id.
	GetItem(context.Context, *ItemID) (*Item, error)
	//Delete item by id.
	DeleteItem(context.Context, *ItemID) (*ItemID, error)
	//Gets all items.
	GetItems(context.Context, *GetItemsRequest) (*GetItemsResponse, error)
	//Create item type.
	CreateItemType(context.Context, *ItemType) (*ItemTypeID, error)
	//Get item type by id.
	GetItemType(context.Context, *ItemTypeID) (*ItemType, error)
	//Delete item type by id.
	DeleteItemType(context.Context, *ItemTypeID) (*ItemTypeID, error)
	//Gets all item types.
	GetItemTypes(context.Context, *GetItemTypesRequest) (*GetItemTypesResponse, error)
	//Create container.
	CreateContainer(context.Context, *Container) (*ContainerID, error)
	//Get container by id.
	GetContainer(context.Context, *ContainerID) (*Container, error)
	//Delete container by id.
	DeleteContainer(context.Context, *ContainerID) (*ContainerID, error)
	//Get all containers.
	GetContainers(context.Context, *GetContainersRequest) (*GetContainersResponse, error)
	//Create container type.
	CreateContainerType(context.Context, *ContainerType) (*ContainerTypeID, error)
	//Get container type by id.
	GetContainerType(context.Context, *ContainerTypeID) (*ContainerType, error)
	//Detele container type by id.
	DeleteContainerType(context.Context, *ContainerTypeID) (*ContainerTypeID, error)
	//Get all container types.
	GetContainerTypes(context.Context, *GetContainerTypesRequest) (*GetContainerTypesResponse, error)
	//Get items inside a container.
	GetContainerItems(context.Context, *GetContainerItemsRequest) (*GetContainerItemsResponse, error)
	//Pull item from container.
	PullItem(context.Context, *PullItemRequest) (*Item, error)
	//Put item into container.
	PutItem(context.Context, *PutItemRequest) (*PutItemResponse, error)
	//Sort items inside container.
	//This procedure change order of items inside container.
	SortItems(context.Context, *SortItemsRequest) (*SortItemsResponse, error)
	//Retrieves from the container the list of items nearest to the given position.
	GetNearestItems(context.Context, *GetNearestItemsRequest) (*GetNearestItemsResponse, error)
	//Trigger action associated with the item usage.
	UseItem(context.Context, *UseItemRequest) (*UseItemResponse, error)
	//Get service health status.
	GetServiceStatus(context.Context, *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error)
	//Get service current version.
	GetServiceVersion(context.Context, *common.VersionRequest) (*common.VersionResponse, error)
}

// UnimplementedMruVItemServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVItemServiceServer struct {
}

func (*UnimplementedMruVItemServiceServer) CreateItem(ctx context.Context, req *Item) (*ItemID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItem(ctx context.Context, req *ItemID) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteItem(ctx context.Context, req *ItemID) (*ItemID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItems(ctx context.Context, req *GetItemsRequest) (*GetItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) CreateItemType(ctx context.Context, req *ItemType) (*ItemTypeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItemType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItemType(ctx context.Context, req *ItemTypeID) (*ItemType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemType not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteItemType(ctx context.Context, req *ItemTypeID) (*ItemTypeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItemType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItemTypes(ctx context.Context, req *GetItemTypesRequest) (*GetItemTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemTypes not implemented")
}
func (*UnimplementedMruVItemServiceServer) CreateContainer(ctx context.Context, req *Container) (*ContainerID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainer not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainer(ctx context.Context, req *ContainerID) (*Container, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainer not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteContainer(ctx context.Context, req *ContainerID) (*ContainerID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContainer not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainers(ctx context.Context, req *GetContainersRequest) (*GetContainersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainers not implemented")
}
func (*UnimplementedMruVItemServiceServer) CreateContainerType(ctx context.Context, req *ContainerType) (*ContainerTypeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainerType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainerType(ctx context.Context, req *ContainerTypeID) (*ContainerType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerType not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteContainerType(ctx context.Context, req *ContainerTypeID) (*ContainerTypeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContainerType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainerTypes(ctx context.Context, req *GetContainerTypesRequest) (*GetContainerTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerTypes not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainerItems(ctx context.Context, req *GetContainerItemsRequest) (*GetContainerItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) PullItem(ctx context.Context, req *PullItemRequest) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PullItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) PutItem(ctx context.Context, req *PutItemRequest) (*PutItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) SortItems(ctx context.Context, req *SortItemsRequest) (*SortItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetNearestItems(ctx context.Context, req *GetNearestItemsRequest) (*GetNearestItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNearestItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) UseItem(ctx context.Context, req *UseItemRequest) (*UseItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetServiceStatus(ctx context.Context, req *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceStatus not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetServiceVersion(ctx context.Context, req *common.VersionRequest) (*common.VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceVersion not implemented")
}

func RegisterMruVItemServiceServer(s *grpc.Server, srv MruVItemServiceServer) {
	s.RegisterService(&_MruVItemService_serviceDesc, srv)
}

func _MruVItemService_CreateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateItem(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItem(ctx, req.(*ItemID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteItem(ctx, req.(*ItemID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItems(ctx, req.(*GetItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_CreateItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateItemType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateItemType(ctx, req.(*ItemType))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItemType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItemType(ctx, req.(*ItemTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteItemType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteItemType(ctx, req.(*ItemTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItemTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItemTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItemTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItemTypes(ctx, req.(*GetItemTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Container)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateContainer(ctx, req.(*Container))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainer(ctx, req.(*ContainerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteContainer(ctx, req.(*ContainerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainers(ctx, req.(*GetContainersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_CreateContainerType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateContainerType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateContainerType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateContainerType(ctx, req.(*ContainerType))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainerType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainerType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainerType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainerType(ctx, req.(*ContainerTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteContainerType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteContainerType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteContainerType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteContainerType(ctx, req.(*ContainerTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainerTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainerTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainerTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainerTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainerTypes(ctx, req.(*GetContainerTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainerItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainerItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainerItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainerItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainerItems(ctx, req.(*GetContainerItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_PullItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PullItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).PullItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/PullItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).PullItem(ctx, req.(*PullItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_PutItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).PutItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/PutItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).PutItem(ctx, req.(*PutItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_SortItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).SortItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/SortItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).SortItems(ctx, req.(*SortItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetNearestItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNearestItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetNearestItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetNearestItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetNearestItems(ctx, req.(*GetNearestItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_UseItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UseItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).UseItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/UseItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).UseItem(ctx, req.(*UseItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetServiceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ServiceStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetServiceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetServiceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetServiceStatus(ctx, req.(*common.ServiceStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetServiceVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetServiceVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetServiceVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetServiceVersion(ctx, req.(*common.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MruVItemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.MruVItemService",
	HandlerType: (*MruVItemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateItem",
			Handler:    _MruVItemService_CreateItem_Handler,
		},
		{
			MethodName: "GetItem",
			Handler:    _MruVItemService_GetItem_Handler,
		},
		{
			MethodName: "DeleteItem",
			Handler:    _MruVItemService_DeleteItem_Handler,
		},
		{
			MethodName: "GetItems",
			Handler:    _MruVItemService_GetItems_Handler,
		},
		{
			MethodName: "CreateItemType",
			Handler:    _MruVItemService_CreateItemType_Handler,
		},
		{
			MethodName: "GetItemType",
			Handler:    _MruVItemService_GetItemType_Handler,
		},
		{
			MethodName: "DeleteItemType",
			Handler:    _MruVItemService_DeleteItemType_Handler,
		},
		{
			MethodName: "GetItemTypes",
			Handler:    _MruVItemService_GetItemTypes_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _MruVItemService_CreateContainer_Handler,
		},
		{
			MethodName: "GetContainer",
			Handler:    _MruVItemService_GetContainer_Handler,
		},
		{
			MethodName: "DeleteContainer",
			Handler:    _MruVItemService_DeleteContainer_Handler,
		},
		{
			MethodName: "GetContainers",
			Handler:    _MruVItemService_GetContainers_Handler,
		},
		{
			MethodName: "CreateContainerType",
			Handler:    _MruVItemService_CreateContainerType_Handler,
		},
		{
			MethodName: "GetContainerType",
			Handler:    _MruVItemService_GetContainerType_Handler,
		},
		{
			MethodName: "DeleteContainerType",
			Handler:    _MruVItemService_DeleteContainerType_Handler,
		},
		{
			MethodName: "GetContainerTypes",
			Handler:    _MruVItemService_GetContainerTypes_Handler,
		},
		{
			MethodName: "GetContainerItems",
			Handler:    _MruVItemService_GetContainerItems_Handler,
		},
		{
			MethodName: "PullItem",
			Handler:    _MruVItemService_PullItem_Handler,
		},
		{
			MethodName: "PutItem",
			Handler:    _MruVItemService_PutItem_Handler,
		},
		{
			MethodName: "SortItems",
			Handler:    _MruVItemService_SortItems_Handler,
		},
		{
			MethodName: "GetNearestItems",
			Handler:    _MruVItemService_GetNearestItems_Handler,
		},
		{
			MethodName: "UseItem",
			Handler:    _MruVItemService_UseItem_Handler,
		},
		{
			MethodName: "GetServiceStatus",
			Handler:    _MruVItemService_GetServiceStatus_Handler,
		},
		{
			MethodName: "GetServiceVersion",
			Handler:    _MruVItemService_GetServiceVersion_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "items/items.proto",
}
