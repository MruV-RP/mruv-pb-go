// Code generated by protoc-gen-go. DO NOT EDIT.
// source: items/items.proto

package items

import (
	context "context"
	fmt "fmt"
	common "github.com/MruV-RP/mruv-pb-go/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Requests messages
type GetItemsRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetItemsRequest) Reset()         { *m = GetItemsRequest{} }
func (m *GetItemsRequest) String() string { return proto.CompactTextString(m) }
func (*GetItemsRequest) ProtoMessage()    {}
func (*GetItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{0}
}

func (m *GetItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemsRequest.Unmarshal(m, b)
}
func (m *GetItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemsRequest.Marshal(b, m, deterministic)
}
func (m *GetItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemsRequest.Merge(m, src)
}
func (m *GetItemsRequest) XXX_Size() int {
	return xxx_messageInfo_GetItemsRequest.Size(m)
}
func (m *GetItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemsRequest proto.InternalMessageInfo

func (m *GetItemsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetItemsResponse struct {
	Items                []*Item  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetItemsResponse) Reset()         { *m = GetItemsResponse{} }
func (m *GetItemsResponse) String() string { return proto.CompactTextString(m) }
func (*GetItemsResponse) ProtoMessage()    {}
func (*GetItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{1}
}

func (m *GetItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemsResponse.Unmarshal(m, b)
}
func (m *GetItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemsResponse.Marshal(b, m, deterministic)
}
func (m *GetItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemsResponse.Merge(m, src)
}
func (m *GetItemsResponse) XXX_Size() int {
	return xxx_messageInfo_GetItemsResponse.Size(m)
}
func (m *GetItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemsResponse proto.InternalMessageInfo

func (m *GetItemsResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetItemTypesRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetItemTypesRequest) Reset()         { *m = GetItemTypesRequest{} }
func (m *GetItemTypesRequest) String() string { return proto.CompactTextString(m) }
func (*GetItemTypesRequest) ProtoMessage()    {}
func (*GetItemTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{2}
}

func (m *GetItemTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemTypesRequest.Unmarshal(m, b)
}
func (m *GetItemTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemTypesRequest.Marshal(b, m, deterministic)
}
func (m *GetItemTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemTypesRequest.Merge(m, src)
}
func (m *GetItemTypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetItemTypesRequest.Size(m)
}
func (m *GetItemTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemTypesRequest proto.InternalMessageInfo

func (m *GetItemTypesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetItemTypesResponse struct {
	ItemTypes            []*ItemType `protobuf:"bytes,1,rep,name=item_types,json=itemTypes,proto3" json:"item_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetItemTypesResponse) Reset()         { *m = GetItemTypesResponse{} }
func (m *GetItemTypesResponse) String() string { return proto.CompactTextString(m) }
func (*GetItemTypesResponse) ProtoMessage()    {}
func (*GetItemTypesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{3}
}

func (m *GetItemTypesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetItemTypesResponse.Unmarshal(m, b)
}
func (m *GetItemTypesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetItemTypesResponse.Marshal(b, m, deterministic)
}
func (m *GetItemTypesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetItemTypesResponse.Merge(m, src)
}
func (m *GetItemTypesResponse) XXX_Size() int {
	return xxx_messageInfo_GetItemTypesResponse.Size(m)
}
func (m *GetItemTypesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetItemTypesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetItemTypesResponse proto.InternalMessageInfo

func (m *GetItemTypesResponse) GetItemTypes() []*ItemType {
	if m != nil {
		return m.ItemTypes
	}
	return nil
}

type GetContainersRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainersRequest) Reset()         { *m = GetContainersRequest{} }
func (m *GetContainersRequest) String() string { return proto.CompactTextString(m) }
func (*GetContainersRequest) ProtoMessage()    {}
func (*GetContainersRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{4}
}

func (m *GetContainersRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainersRequest.Unmarshal(m, b)
}
func (m *GetContainersRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainersRequest.Marshal(b, m, deterministic)
}
func (m *GetContainersRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainersRequest.Merge(m, src)
}
func (m *GetContainersRequest) XXX_Size() int {
	return xxx_messageInfo_GetContainersRequest.Size(m)
}
func (m *GetContainersRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainersRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainersRequest proto.InternalMessageInfo

func (m *GetContainersRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetContainersResponse struct {
	Containers           []*Container `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetContainersResponse) Reset()         { *m = GetContainersResponse{} }
func (m *GetContainersResponse) String() string { return proto.CompactTextString(m) }
func (*GetContainersResponse) ProtoMessage()    {}
func (*GetContainersResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{5}
}

func (m *GetContainersResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainersResponse.Unmarshal(m, b)
}
func (m *GetContainersResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainersResponse.Marshal(b, m, deterministic)
}
func (m *GetContainersResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainersResponse.Merge(m, src)
}
func (m *GetContainersResponse) XXX_Size() int {
	return xxx_messageInfo_GetContainersResponse.Size(m)
}
func (m *GetContainersResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainersResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainersResponse proto.InternalMessageInfo

func (m *GetContainersResponse) GetContainers() []*Container {
	if m != nil {
		return m.Containers
	}
	return nil
}

type GetContainerTypesRequest struct {
	Limit                int32    `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainerTypesRequest) Reset()         { *m = GetContainerTypesRequest{} }
func (m *GetContainerTypesRequest) String() string { return proto.CompactTextString(m) }
func (*GetContainerTypesRequest) ProtoMessage()    {}
func (*GetContainerTypesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{6}
}

func (m *GetContainerTypesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerTypesRequest.Unmarshal(m, b)
}
func (m *GetContainerTypesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerTypesRequest.Marshal(b, m, deterministic)
}
func (m *GetContainerTypesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerTypesRequest.Merge(m, src)
}
func (m *GetContainerTypesRequest) XXX_Size() int {
	return xxx_messageInfo_GetContainerTypesRequest.Size(m)
}
func (m *GetContainerTypesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerTypesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerTypesRequest proto.InternalMessageInfo

func (m *GetContainerTypesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type PutItemRequest struct {
	ContainerId *ContainerID `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ItemId      *ItemID      `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// Types that are valid to be assigned to Where:
	//	*PutItemRequest_Slot
	Where                isPutItemRequest_Where `protobuf_oneof:"where"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PutItemRequest) Reset()         { *m = PutItemRequest{} }
func (m *PutItemRequest) String() string { return proto.CompactTextString(m) }
func (*PutItemRequest) ProtoMessage()    {}
func (*PutItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{7}
}

func (m *PutItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutItemRequest.Unmarshal(m, b)
}
func (m *PutItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutItemRequest.Marshal(b, m, deterministic)
}
func (m *PutItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutItemRequest.Merge(m, src)
}
func (m *PutItemRequest) XXX_Size() int {
	return xxx_messageInfo_PutItemRequest.Size(m)
}
func (m *PutItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutItemRequest proto.InternalMessageInfo

func (m *PutItemRequest) GetContainerId() *ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *PutItemRequest) GetItemId() *ItemID {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type isPutItemRequest_Where interface {
	isPutItemRequest_Where()
}

type PutItemRequest_Slot struct {
	Slot int32 `protobuf:"varint,3,opt,name=slot,proto3,oneof"`
}

func (*PutItemRequest_Slot) isPutItemRequest_Where() {}

func (m *PutItemRequest) GetWhere() isPutItemRequest_Where {
	if m != nil {
		return m.Where
	}
	return nil
}

func (m *PutItemRequest) GetSlot() int32 {
	if x, ok := m.GetWhere().(*PutItemRequest_Slot); ok {
		return x.Slot
	}
	return 0
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*PutItemRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*PutItemRequest_Slot)(nil),
	}
}

type TakeItemRequest struct {
	Id                   *ItemID  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeItemRequest) Reset()         { *m = TakeItemRequest{} }
func (m *TakeItemRequest) String() string { return proto.CompactTextString(m) }
func (*TakeItemRequest) ProtoMessage()    {}
func (*TakeItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{8}
}

func (m *TakeItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeItemRequest.Unmarshal(m, b)
}
func (m *TakeItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeItemRequest.Marshal(b, m, deterministic)
}
func (m *TakeItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeItemRequest.Merge(m, src)
}
func (m *TakeItemRequest) XXX_Size() int {
	return xxx_messageInfo_TakeItemRequest.Size(m)
}
func (m *TakeItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TakeItemRequest proto.InternalMessageInfo

func (m *TakeItemRequest) GetId() *ItemID {
	if m != nil {
		return m.Id
	}
	return nil
}

type TakeItemResponse struct {
	Item                 *Item    `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeItemResponse) Reset()         { *m = TakeItemResponse{} }
func (m *TakeItemResponse) String() string { return proto.CompactTextString(m) }
func (*TakeItemResponse) ProtoMessage()    {}
func (*TakeItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{9}
}

func (m *TakeItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeItemResponse.Unmarshal(m, b)
}
func (m *TakeItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeItemResponse.Marshal(b, m, deterministic)
}
func (m *TakeItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeItemResponse.Merge(m, src)
}
func (m *TakeItemResponse) XXX_Size() int {
	return xxx_messageInfo_TakeItemResponse.Size(m)
}
func (m *TakeItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TakeItemResponse proto.InternalMessageInfo

func (m *TakeItemResponse) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type GetContainerItemsResponse struct {
	Items                []*Item  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetContainerItemsResponse) Reset()         { *m = GetContainerItemsResponse{} }
func (m *GetContainerItemsResponse) String() string { return proto.CompactTextString(m) }
func (*GetContainerItemsResponse) ProtoMessage()    {}
func (*GetContainerItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{10}
}

func (m *GetContainerItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetContainerItemsResponse.Unmarshal(m, b)
}
func (m *GetContainerItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetContainerItemsResponse.Marshal(b, m, deterministic)
}
func (m *GetContainerItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetContainerItemsResponse.Merge(m, src)
}
func (m *GetContainerItemsResponse) XXX_Size() int {
	return xxx_messageInfo_GetContainerItemsResponse.Size(m)
}
func (m *GetContainerItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetContainerItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetContainerItemsResponse proto.InternalMessageInfo

func (m *GetContainerItemsResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type RemoveItemRequest struct {
	ContainerId          *ContainerID `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ItemId               *ItemID      `protobuf:"bytes,2,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RemoveItemRequest) Reset()         { *m = RemoveItemRequest{} }
func (m *RemoveItemRequest) String() string { return proto.CompactTextString(m) }
func (*RemoveItemRequest) ProtoMessage()    {}
func (*RemoveItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{11}
}

func (m *RemoveItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RemoveItemRequest.Unmarshal(m, b)
}
func (m *RemoveItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RemoveItemRequest.Marshal(b, m, deterministic)
}
func (m *RemoveItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RemoveItemRequest.Merge(m, src)
}
func (m *RemoveItemRequest) XXX_Size() int {
	return xxx_messageInfo_RemoveItemRequest.Size(m)
}
func (m *RemoveItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RemoveItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RemoveItemRequest proto.InternalMessageInfo

func (m *RemoveItemRequest) GetContainerId() *ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *RemoveItemRequest) GetItemId() *ItemID {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type SortItemsRequest struct {
	ContainerId          *ContainerID `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	SortBy               string       `protobuf:"bytes,2,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *SortItemsRequest) Reset()         { *m = SortItemsRequest{} }
func (m *SortItemsRequest) String() string { return proto.CompactTextString(m) }
func (*SortItemsRequest) ProtoMessage()    {}
func (*SortItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{12}
}

func (m *SortItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortItemsRequest.Unmarshal(m, b)
}
func (m *SortItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortItemsRequest.Marshal(b, m, deterministic)
}
func (m *SortItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortItemsRequest.Merge(m, src)
}
func (m *SortItemsRequest) XXX_Size() int {
	return xxx_messageInfo_SortItemsRequest.Size(m)
}
func (m *SortItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SortItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SortItemsRequest proto.InternalMessageInfo

func (m *SortItemsRequest) GetContainerId() *ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

func (m *SortItemsRequest) GetSortBy() string {
	if m != nil {
		return m.SortBy
	}
	return ""
}

type SortItemsResponse struct {
	Items                []*Item  `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SortItemsResponse) Reset()         { *m = SortItemsResponse{} }
func (m *SortItemsResponse) String() string { return proto.CompactTextString(m) }
func (*SortItemsResponse) ProtoMessage()    {}
func (*SortItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{13}
}

func (m *SortItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SortItemsResponse.Unmarshal(m, b)
}
func (m *SortItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SortItemsResponse.Marshal(b, m, deterministic)
}
func (m *SortItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SortItemsResponse.Merge(m, src)
}
func (m *SortItemsResponse) XXX_Size() int {
	return xxx_messageInfo_SortItemsResponse.Size(m)
}
func (m *SortItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SortItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SortItemsResponse proto.InternalMessageInfo

func (m *SortItemsResponse) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

type GetNearestItemsRequest struct {
	PlayerPosition       *common.Position `protobuf:"bytes,1,opt,name=player_position,json=playerPosition,proto3" json:"player_position,omitempty"`
	ContainerId          *ContainerID     `protobuf:"bytes,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetNearestItemsRequest) Reset()         { *m = GetNearestItemsRequest{} }
func (m *GetNearestItemsRequest) String() string { return proto.CompactTextString(m) }
func (*GetNearestItemsRequest) ProtoMessage()    {}
func (*GetNearestItemsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{14}
}

func (m *GetNearestItemsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestItemsRequest.Unmarshal(m, b)
}
func (m *GetNearestItemsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestItemsRequest.Marshal(b, m, deterministic)
}
func (m *GetNearestItemsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestItemsRequest.Merge(m, src)
}
func (m *GetNearestItemsRequest) XXX_Size() int {
	return xxx_messageInfo_GetNearestItemsRequest.Size(m)
}
func (m *GetNearestItemsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestItemsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestItemsRequest proto.InternalMessageInfo

func (m *GetNearestItemsRequest) GetPlayerPosition() *common.Position {
	if m != nil {
		return m.PlayerPosition
	}
	return nil
}

func (m *GetNearestItemsRequest) GetContainerId() *ContainerID {
	if m != nil {
		return m.ContainerId
	}
	return nil
}

type GetNearestItemsResponse struct {
	Item                 []*InsideItem `protobuf:"bytes,1,rep,name=item,proto3" json:"item,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GetNearestItemsResponse) Reset()         { *m = GetNearestItemsResponse{} }
func (m *GetNearestItemsResponse) String() string { return proto.CompactTextString(m) }
func (*GetNearestItemsResponse) ProtoMessage()    {}
func (*GetNearestItemsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{15}
}

func (m *GetNearestItemsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNearestItemsResponse.Unmarshal(m, b)
}
func (m *GetNearestItemsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNearestItemsResponse.Marshal(b, m, deterministic)
}
func (m *GetNearestItemsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNearestItemsResponse.Merge(m, src)
}
func (m *GetNearestItemsResponse) XXX_Size() int {
	return xxx_messageInfo_GetNearestItemsResponse.Size(m)
}
func (m *GetNearestItemsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNearestItemsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetNearestItemsResponse proto.InternalMessageInfo

func (m *GetNearestItemsResponse) GetItem() []*InsideItem {
	if m != nil {
		return m.Item
	}
	return nil
}

type UseItemRequest struct {
	ItemId               *ItemID  `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseItemRequest) Reset()         { *m = UseItemRequest{} }
func (m *UseItemRequest) String() string { return proto.CompactTextString(m) }
func (*UseItemRequest) ProtoMessage()    {}
func (*UseItemRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{16}
}

func (m *UseItemRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseItemRequest.Unmarshal(m, b)
}
func (m *UseItemRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseItemRequest.Marshal(b, m, deterministic)
}
func (m *UseItemRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseItemRequest.Merge(m, src)
}
func (m *UseItemRequest) XXX_Size() int {
	return xxx_messageInfo_UseItemRequest.Size(m)
}
func (m *UseItemRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UseItemRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UseItemRequest proto.InternalMessageInfo

func (m *UseItemRequest) GetItemId() *ItemID {
	if m != nil {
		return m.ItemId
	}
	return nil
}

type UseItemResponse struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UseItemResponse) Reset()         { *m = UseItemResponse{} }
func (m *UseItemResponse) String() string { return proto.CompactTextString(m) }
func (*UseItemResponse) ProtoMessage()    {}
func (*UseItemResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2532e29ffc1dd680, []int{17}
}

func (m *UseItemResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UseItemResponse.Unmarshal(m, b)
}
func (m *UseItemResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UseItemResponse.Marshal(b, m, deterministic)
}
func (m *UseItemResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UseItemResponse.Merge(m, src)
}
func (m *UseItemResponse) XXX_Size() int {
	return xxx_messageInfo_UseItemResponse.Size(m)
}
func (m *UseItemResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UseItemResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UseItemResponse proto.InternalMessageInfo

func (m *UseItemResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*GetItemsRequest)(nil), "mruv.GetItemsRequest")
	proto.RegisterType((*GetItemsResponse)(nil), "mruv.GetItemsResponse")
	proto.RegisterType((*GetItemTypesRequest)(nil), "mruv.GetItemTypesRequest")
	proto.RegisterType((*GetItemTypesResponse)(nil), "mruv.GetItemTypesResponse")
	proto.RegisterType((*GetContainersRequest)(nil), "mruv.GetContainersRequest")
	proto.RegisterType((*GetContainersResponse)(nil), "mruv.GetContainersResponse")
	proto.RegisterType((*GetContainerTypesRequest)(nil), "mruv.GetContainerTypesRequest")
	proto.RegisterType((*PutItemRequest)(nil), "mruv.PutItemRequest")
	proto.RegisterType((*TakeItemRequest)(nil), "mruv.TakeItemRequest")
	proto.RegisterType((*TakeItemResponse)(nil), "mruv.TakeItemResponse")
	proto.RegisterType((*GetContainerItemsResponse)(nil), "mruv.GetContainerItemsResponse")
	proto.RegisterType((*RemoveItemRequest)(nil), "mruv.RemoveItemRequest")
	proto.RegisterType((*SortItemsRequest)(nil), "mruv.SortItemsRequest")
	proto.RegisterType((*SortItemsResponse)(nil), "mruv.SortItemsResponse")
	proto.RegisterType((*GetNearestItemsRequest)(nil), "mruv.GetNearestItemsRequest")
	proto.RegisterType((*GetNearestItemsResponse)(nil), "mruv.GetNearestItemsResponse")
	proto.RegisterType((*UseItemRequest)(nil), "mruv.UseItemRequest")
	proto.RegisterType((*UseItemResponse)(nil), "mruv.UseItemResponse")
}

func init() { proto.RegisterFile("items/items.proto", fileDescriptor_2532e29ffc1dd680) }

var fileDescriptor_2532e29ffc1dd680 = []byte{
	// 1167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x57, 0xcd, 0x72, 0x1b, 0x45,
	0x10, 0x46, 0x8e, 0x6d, 0xc5, 0x6d, 0x47, 0x3f, 0x2d, 0xd9, 0x92, 0xd7, 0x26, 0x31, 0x03, 0x29,
	0x52, 0x0e, 0xd6, 0x06, 0x27, 0x2e, 0x17, 0x95, 0x4a, 0x41, 0x39, 0xa6, 0x12, 0x15, 0x04, 0x5c,
	0x6b, 0x93, 0x43, 0x80, 0x12, 0x6b, 0x69, 0xb0, 0x37, 0x48, 0xda, 0x65, 0x77, 0xe5, 0x58, 0x71,
	0xe9, 0xc2, 0x85, 0x0b, 0x37, 0x5e, 0x8a, 0x3b, 0xaf, 0xc0, 0x63, 0x70, 0xa0, 0x76, 0xb6, 0xf7,
	0x67, 0x66, 0xd7, 0x8e, 0xc8, 0x21, 0x17, 0x55, 0x6d, 0x4f, 0xf7, 0xf7, 0x75, 0x7f, 0x33, 0xd3,
	0xd3, 0x82, 0xaa, 0xe5, 0xf3, 0x81, 0xa7, 0x8b, 0xdf, 0x96, 0xe3, 0xda, 0xbe, 0x8d, 0xb3, 0x03,
	0x77, 0x74, 0xa6, 0xad, 0x9f, 0xd8, 0xf6, 0x49, 0x9f, 0xeb, 0xa6, 0x63, 0xe9, 0xe6, 0x70, 0x68,
	0xfb, 0xa6, 0x6f, 0xd9, 0x43, 0xf2, 0xd1, 0x6a, 0x5d, 0x7b, 0x30, 0xb0, 0x87, 0xfa, 0x29, 0x37,
	0xfb, 0xfe, 0x29, 0x19, 0x1b, 0x29, 0xac, 0xce, 0xc0, 0xee, 0xf1, 0x3e, 0x2d, 0xd4, 0xc9, 0xdb,
	0x73, 0x4c, 0xdf, 0x32, 0xc9, 0xca, 0x3e, 0x86, 0xf2, 0x13, 0xee, 0xb7, 0x03, 0x6f, 0x83, 0xff,
	0x3a, 0xe2, 0x9e, 0x8f, 0x75, 0x98, 0xeb, 0x5b, 0x03, 0xcb, 0x6f, 0x16, 0x36, 0x0a, 0x77, 0xe6,
	0x8c, 0xf0, 0x83, 0x3d, 0x80, 0x4a, 0xe2, 0xe8, 0x39, 0xf6, 0xd0, 0xe3, 0xb8, 0x01, 0x73, 0x82,
	0xa7, 0x59, 0xd8, 0xb8, 0x76, 0x67, 0x71, 0x1b, 0x5a, 0x41, 0xd2, 0xad, 0xc0, 0xc7, 0x08, 0x17,
	0xd8, 0x5d, 0xa8, 0x51, 0xd4, 0xd1, 0xd8, 0xe1, 0x6f, 0xa0, 0xf8, 0x12, 0xea, 0xb2, 0x33, 0xd1,
	0x6c, 0x01, 0x04, 0x68, 0x1d, 0x3f, 0xb0, 0x12, 0x57, 0x29, 0xe1, 0x0a, 0x9c, 0x8d, 0x05, 0x2b,
	0x0a, 0x63, 0x9f, 0x08, 0x98, 0xc7, 0xf6, 0xd0, 0x37, 0xad, 0x21, 0x77, 0xdf, 0x40, 0xfa, 0x14,
	0x96, 0x15, 0x6f, 0x62, 0xd5, 0x01, 0xba, 0xb1, 0x95, 0x58, 0xcb, 0x21, 0x6b, 0xec, 0x6d, 0xa4,
	0x5c, 0xd8, 0x3d, 0x68, 0xa6, 0x91, 0xa6, 0x28, 0xf8, 0x8f, 0x02, 0x94, 0x0e, 0x46, 0xa2, 0xe2,
	0xc8, 0xf1, 0x01, 0x2c, 0xc5, 0x90, 0x1d, 0xab, 0x27, 0xfc, 0x17, 0xb7, 0xab, 0x0a, 0x6f, 0x7b,
	0xdf, 0x58, 0x8c, 0xdd, 0xda, 0x3d, 0xbc, 0x0d, 0x45, 0xa1, 0x90, 0xd5, 0x6b, 0xce, 0x88, 0x80,
	0xa5, 0x44, 0x9e, 0xf6, 0xbe, 0x31, 0x1f, 0x2c, 0xb6, 0x7b, 0x58, 0x87, 0x59, 0xaf, 0x6f, 0xfb,
	0xcd, 0x6b, 0x41, 0x12, 0x4f, 0xdf, 0x33, 0xc4, 0xd7, 0x5e, 0x11, 0xe6, 0x5e, 0x9d, 0x72, 0x97,
	0x33, 0x1d, 0xca, 0x47, 0xe6, 0x2f, 0x3c, 0x9d, 0xce, 0x3a, 0xcc, 0xc4, 0x49, 0xc8, 0x98, 0x33,
	0x56, 0x8f, 0x6d, 0x43, 0x25, 0x09, 0x20, 0xd9, 0x6e, 0xc2, 0x6c, 0xc0, 0x46, 0x31, 0xe9, 0x23,
	0x21, 0xec, 0xec, 0x11, 0xac, 0xa6, 0x55, 0xfa, 0xbf, 0x07, 0xca, 0x81, 0xaa, 0xc1, 0x07, 0xf6,
	0x19, 0x7f, 0x57, 0xa2, 0x31, 0x13, 0x2a, 0x87, 0xb6, 0x2b, 0x5f, 0x91, 0xb7, 0x23, 0x6c, 0x40,
	0xd1, 0xb3, 0x5d, 0xbf, 0x73, 0x3c, 0x16, 0x84, 0x0b, 0xc6, 0x7c, 0xf0, 0xb9, 0x37, 0x66, 0x3b,
	0x50, 0x4d, 0x51, 0x4c, 0xad, 0xc5, 0xef, 0x05, 0x58, 0x79, 0xc2, 0xfd, 0x6f, 0xb8, 0xe9, 0x72,
	0x4f, 0x4e, 0x70, 0x17, 0xca, 0x4e, 0xdf, 0x1c, 0x73, 0xb7, 0xe3, 0xd8, 0x9e, 0x15, 0x34, 0x0d,
	0xca, 0x91, 0xee, 0xcd, 0x01, 0x59, 0x8d, 0x52, 0xe8, 0x16, 0x7d, 0x67, 0x2a, 0x9b, 0x99, 0xa6,
	0x32, 0xf6, 0x39, 0x34, 0x32, 0x89, 0x50, 0x19, 0x1f, 0xc5, 0xe7, 0x21, 0xa8, 0xa2, 0x42, 0x55,
	0x0c, 0x3d, 0xab, 0xc7, 0x53, 0xa7, 0x62, 0x17, 0x4a, 0xdf, 0x79, 0xd2, 0x9e, 0xa6, 0x76, 0xa7,
	0x70, 0xc5, 0xee, 0xdc, 0x85, 0x72, 0x1c, 0x48, 0x8c, 0x4d, 0x28, 0x7a, 0xa3, 0x6e, 0x97, 0x7b,
	0x9e, 0x88, 0xbc, 0x6e, 0x44, 0x9f, 0xdb, 0xff, 0x56, 0xa1, 0xfc, 0xcc, 0x1d, 0x3d, 0x0f, 0xdc,
	0x0f, 0xb9, 0x7b, 0x66, 0x75, 0x39, 0x7e, 0x06, 0xf0, 0xd8, 0xe5, 0xa6, 0x2f, 0x30, 0x30, 0xa5,
	0xb2, 0x26, 0x11, 0xb2, 0xea, 0x6f, 0x7f, 0xff, 0xf3, 0xe7, 0xcc, 0x22, 0x5b, 0xd0, 0xcf, 0x3e,
	0x0d, 0xbb, 0x2b, 0x3e, 0x84, 0x22, 0xf5, 0x2b, 0x94, 0x7c, 0xb5, 0x14, 0x0a, 0x5b, 0x11, 0x71,
	0x15, 0x2c, 0xc5, 0x71, 0xfa, 0x85, 0xd5, 0x9b, 0xe0, 0x17, 0x00, 0xfb, 0xbc, 0xcf, 0x89, 0x57,
	0x8e, 0x97, 0x99, 0x09, 0x61, 0x53, 0x45, 0xf8, 0x1a, 0xae, 0x47, 0x1d, 0x19, 0x97, 0xc3, 0x08,
	0xa5, 0x95, 0x6b, 0x2b, 0xaa, 0x39, 0x94, 0x28, 0x2a, 0x06, 0x53, 0xc5, 0xb4, 0xa1, 0x94, 0xe8,
	0x10, 0xf4, 0x2e, 0x54, 0x5a, 0xac, 0x56, 0x91, 0xbf, 0xdb, 0xfb, 0x6c, 0x59, 0xc0, 0x94, 0xd9,
	0x8d, 0x08, 0x46, 0xf4, 0x3c, 0xfc, 0x0a, 0x16, 0x53, 0x7d, 0x1c, 0x33, 0x71, 0x9a, 0x82, 0xcc,
	0x34, 0x81, 0x53, 0x47, 0x94, 0x70, 0xc2, 0x2a, 0x0f, 0xa0, 0x94, 0xe8, 0x74, 0x09, 0x5e, 0x36,
	0x33, 0x42, 0xdc, 0xcc, 0x43, 0xfc, 0x01, 0x96, 0xd2, 0xcf, 0x0c, 0xae, 0x4a, 0x22, 0xa5, 0xdb,
	0xb6, 0xa6, 0xe5, 0x2d, 0x91, 0x86, 0x54, 0x3c, 0x2a, 0xc5, 0x3f, 0x83, 0x72, 0xa8, 0x63, 0x7c,
	0x59, 0x50, 0x7d, 0x35, 0xb4, 0xec, 0x75, 0x8a, 0x36, 0x99, 0x89, 0x4d, 0x4e, 0x1e, 0x15, 0xfc,
	0x56, 0x24, 0x9b, 0x60, 0x65, 0x43, 0x35, 0x15, 0x9e, 0xad, 0x09, 0xac, 0x65, 0xac, 0xc9, 0x58,
	0x61, 0xf5, 0x47, 0x50, 0x0e, 0xf5, 0xbc, 0x12, 0x33, 0x27, 0x43, 0x42, 0xdd, 0xcc, 0x45, 0xfd,
	0x09, 0x6e, 0x48, 0xaf, 0x28, 0x26, 0xca, 0x65, 0x1e, 0x62, 0x6d, 0x2d, 0x77, 0x8d, 0x64, 0x95,
	0xee, 0x4b, 0x4a, 0x88, 0x1f, 0xa1, 0xa6, 0xe8, 0x2a, 0x0e, 0x43, 0x4d, 0x49, 0x54, 0x9c, 0xd4,
	0xe5, 0x1c, 0x63, 0x72, 0x28, 0x18, 0x4a, 0xd0, 0xe1, 0xb6, 0x75, 0xc4, 0x78, 0x23, 0x63, 0xe7,
	0xc3, 0x68, 0x79, 0x94, 0xec, 0x96, 0xc0, 0x5e, 0xc5, 0x46, 0x16, 0x3b, 0x52, 0xa8, 0xa6, 0xe8,
	0x7e, 0x15, 0x47, 0x8e, 0xfe, 0xc4, 0xb0, 0x79, 0x29, 0xc3, 0xcf, 0x50, 0xcd, 0xcc, 0x1f, 0x78,
	0x33, 0xab, 0xb5, 0x74, 0xc2, 0x73, 0x8b, 0x91, 0xee, 0xa3, 0x4c, 0x75, 0xaf, 0x80, 0x2f, 0x65,
	0x9e, 0xb0, 0x01, 0xe5, 0x9c, 0xa1, 0x5b, 0x59, 0x6a, 0xb9, 0x0b, 0x7d, 0x20, 0x68, 0xd6, 0x70,
	0x35, 0xe7, 0x44, 0x51, 0x57, 0x7a, 0x05, 0xb5, 0xf0, 0xb9, 0x97, 0x20, 0xb0, 0x11, 0x42, 0x67,
	0x26, 0x01, 0xa9, 0xf3, 0x3e, 0x14, 0xf0, 0x3b, 0x9b, 0xf7, 0x55, 0xf8, 0xf4, 0x03, 0xd7, 0x8a,
	0xb9, 0xf4, 0x0b, 0x7a, 0x6f, 0x02, 0x13, 0xbe, 0x84, 0x22, 0x4d, 0x66, 0x58, 0xa7, 0x27, 0x53,
	0x1a, 0xd4, 0x94, 0x1e, 0x4d, 0x5c, 0xda, 0x5b, 0x71, 0x5d, 0xc0, 0x42, 0xfc, 0xfc, 0x23, 0xb5,
	0x6c, 0x75, 0xe4, 0xd0, 0x1a, 0x19, 0x3b, 0xa9, 0xf8, 0x48, 0x50, 0xef, 0xe2, 0xce, 0x94, 0xd4,
	0xc1, 0xcc, 0xa1, 0x5f, 0xd0, 0x20, 0x32, 0xc1, 0xbf, 0x0a, 0xe2, 0x1f, 0x40, 0xfa, 0xed, 0xc6,
	0xf5, 0x78, 0xe7, 0x72, 0x66, 0x0b, 0xed, 0xfd, 0x4b, 0x56, 0x29, 0x9f, 0x73, 0x91, 0x8f, 0x8b,
	0xce, 0x94, 0xf9, 0x0c, 0x43, 0x10, 0xfd, 0x5c, 0xbf, 0x50, 0x46, 0x96, 0xd6, 0xf9, 0x44, 0x1f,
	0x67, 0xad, 0xe3, 0x89, 0xfe, 0x3a, 0x6b, 0x7d, 0x3d, 0xc1, 0x17, 0x50, 0xa4, 0x59, 0x20, 0xda,
	0x33, 0x79, 0xa6, 0x88, 0xfa, 0x82, 0x32, 0x30, 0x30, 0x26, 0x32, 0x5e, 0x47, 0x2d, 0xfd, 0xc0,
	0x26, 0xfb, 0xa3, 0x8f, 0x3c, 0x8e, 0x5c, 0xf4, 0x07, 0x1a, 0x1a, 0x0e, 0x7d, 0xd3, 0x1f, 0xc5,
	0x3d, 0x4e, 0x32, 0x2a, 0x3d, 0x4e, 0x59, 0x23, 0xc2, 0xa6, 0x20, 0x44, 0xac, 0x24, 0x84, 0x5e,
	0x08, 0xf9, 0xbd, 0xb8, 0x5b, 0x14, 0xf5, 0x9c, 0xbb, 0x5e, 0x30, 0x93, 0x51, 0x31, 0xf4, 0xa9,
	0x14, 0x13, 0x5b, 0x09, 0x7b, 0x55, 0x60, 0xd7, 0xb0, 0x9a, 0x60, 0x9f, 0x85, 0x2e, 0x7b, 0xb7,
	0x5f, 0x7c, 0x78, 0x62, 0xf9, 0xa7, 0xa3, 0xe3, 0x56, 0xd7, 0x1e, 0xe8, 0xc1, 0x20, 0xb4, 0x65,
	0x1c, 0xe8, 0x01, 0xca, 0x96, 0x73, 0xbc, 0x75, 0x62, 0x87, 0xee, 0xc7, 0xf3, 0xe2, 0x9f, 0xe1,
	0xfd, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x51, 0xd3, 0x42, 0x1c, 0x96, 0x0e, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MruVItemServiceClient is the client API for MruVItemService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVItemServiceClient interface {
	//CRUD items
	CreateItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*ItemID, error)
	GetItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*Item, error)
	DeleteItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*ItemID, error)
	GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*GetItemsResponse, error)
	//CRUD itemsTypes
	CreateItemType(ctx context.Context, in *ItemType, opts ...grpc.CallOption) (*ItemTypeID, error)
	GetItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemType, error)
	DeleteItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemTypeID, error)
	GetItemTypes(ctx context.Context, in *GetItemTypesRequest, opts ...grpc.CallOption) (*GetItemTypesResponse, error)
	//CRUD containers
	CreateContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*ContainerID, error)
	GetContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*Container, error)
	DeleteContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*ContainerID, error)
	GetContainers(ctx context.Context, in *GetContainersRequest, opts ...grpc.CallOption) (*GetContainersResponse, error)
	//CRUD container types
	CreateContainerType(ctx context.Context, in *ContainerType, opts ...grpc.CallOption) (*ContainerTypeID, error)
	GetContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerType, error)
	DeleteContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerID, error)
	GetContainerTypes(ctx context.Context, in *GetContainerTypesRequest, opts ...grpc.CallOption) (MruVItemService_GetContainerTypesClient, error)
	//Container Methods
	GetContainerItems(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*GetContainerItemsResponse, error)
	RemoveContainerItem(ctx context.Context, in *RemoveItemRequest, opts ...grpc.CallOption) (*Item, error)
	PutItem(ctx context.Context, in *PutItemRequest, opts ...grpc.CallOption) (*ItemID, error)
	//TODO: SortItemsStream
	SortItems(ctx context.Context, in *SortItemsRequest, opts ...grpc.CallOption) (*SortItemsResponse, error)
	//TODO: GetNearestItemsStream
	GetNearestItems(ctx context.Context, in *GetNearestItemsRequest, opts ...grpc.CallOption) (*GetNearestItemsResponse, error)
	UseItem(ctx context.Context, in *UseItemRequest, opts ...grpc.CallOption) (*UseItemResponse, error)
	//Service status
	GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error)
	GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error)
}

type mruVItemServiceClient struct {
	cc *grpc.ClientConn
}

func NewMruVItemServiceClient(cc *grpc.ClientConn) MruVItemServiceClient {
	return &mruVItemServiceClient{cc}
}

func (c *mruVItemServiceClient) CreateItem(ctx context.Context, in *Item, opts ...grpc.CallOption) (*ItemID, error) {
	out := new(ItemID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteItem(ctx context.Context, in *ItemID, opts ...grpc.CallOption) (*ItemID, error) {
	out := new(ItemID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItems(ctx context.Context, in *GetItemsRequest, opts ...grpc.CallOption) (*GetItemsResponse, error) {
	out := new(GetItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) CreateItemType(ctx context.Context, in *ItemType, opts ...grpc.CallOption) (*ItemTypeID, error) {
	out := new(ItemTypeID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateItemType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemType, error) {
	out := new(ItemType)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItemType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteItemType(ctx context.Context, in *ItemTypeID, opts ...grpc.CallOption) (*ItemTypeID, error) {
	out := new(ItemTypeID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteItemType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetItemTypes(ctx context.Context, in *GetItemTypesRequest, opts ...grpc.CallOption) (*GetItemTypesResponse, error) {
	out := new(GetItemTypesResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetItemTypes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) CreateContainer(ctx context.Context, in *Container, opts ...grpc.CallOption) (*ContainerID, error) {
	out := new(ContainerID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*Container, error) {
	out := new(Container)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteContainer(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*ContainerID, error) {
	out := new(ContainerID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteContainer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainers(ctx context.Context, in *GetContainersRequest, opts ...grpc.CallOption) (*GetContainersResponse, error) {
	out := new(GetContainersResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) CreateContainerType(ctx context.Context, in *ContainerType, opts ...grpc.CallOption) (*ContainerTypeID, error) {
	out := new(ContainerTypeID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/CreateContainerType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerType, error) {
	out := new(ContainerType)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainerType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) DeleteContainerType(ctx context.Context, in *ContainerTypeID, opts ...grpc.CallOption) (*ContainerID, error) {
	out := new(ContainerID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/DeleteContainerType", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetContainerTypes(ctx context.Context, in *GetContainerTypesRequest, opts ...grpc.CallOption) (MruVItemService_GetContainerTypesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVItemService_serviceDesc.Streams[0], "/mruv.MruVItemService/GetContainerTypes", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVItemServiceGetContainerTypesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVItemService_GetContainerTypesClient interface {
	Recv() (*ContainerType, error)
	grpc.ClientStream
}

type mruVItemServiceGetContainerTypesClient struct {
	grpc.ClientStream
}

func (x *mruVItemServiceGetContainerTypesClient) Recv() (*ContainerType, error) {
	m := new(ContainerType)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mruVItemServiceClient) GetContainerItems(ctx context.Context, in *ContainerID, opts ...grpc.CallOption) (*GetContainerItemsResponse, error) {
	out := new(GetContainerItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetContainerItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) RemoveContainerItem(ctx context.Context, in *RemoveItemRequest, opts ...grpc.CallOption) (*Item, error) {
	out := new(Item)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/RemoveContainerItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) PutItem(ctx context.Context, in *PutItemRequest, opts ...grpc.CallOption) (*ItemID, error) {
	out := new(ItemID)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/PutItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) SortItems(ctx context.Context, in *SortItemsRequest, opts ...grpc.CallOption) (*SortItemsResponse, error) {
	out := new(SortItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/SortItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetNearestItems(ctx context.Context, in *GetNearestItemsRequest, opts ...grpc.CallOption) (*GetNearestItemsResponse, error) {
	out := new(GetNearestItemsResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetNearestItems", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) UseItem(ctx context.Context, in *UseItemRequest, opts ...grpc.CallOption) (*UseItemResponse, error) {
	out := new(UseItemResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/UseItem", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error) {
	out := new(common.ServiceStatusResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetServiceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVItemServiceClient) GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error) {
	out := new(common.VersionResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVItemService/GetServiceVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MruVItemServiceServer is the server API for MruVItemService service.
type MruVItemServiceServer interface {
	//CRUD items
	CreateItem(context.Context, *Item) (*ItemID, error)
	GetItem(context.Context, *ItemID) (*Item, error)
	DeleteItem(context.Context, *ItemID) (*ItemID, error)
	GetItems(context.Context, *GetItemsRequest) (*GetItemsResponse, error)
	//CRUD itemsTypes
	CreateItemType(context.Context, *ItemType) (*ItemTypeID, error)
	GetItemType(context.Context, *ItemTypeID) (*ItemType, error)
	DeleteItemType(context.Context, *ItemTypeID) (*ItemTypeID, error)
	GetItemTypes(context.Context, *GetItemTypesRequest) (*GetItemTypesResponse, error)
	//CRUD containers
	CreateContainer(context.Context, *Container) (*ContainerID, error)
	GetContainer(context.Context, *ContainerID) (*Container, error)
	DeleteContainer(context.Context, *ContainerID) (*ContainerID, error)
	GetContainers(context.Context, *GetContainersRequest) (*GetContainersResponse, error)
	//CRUD container types
	CreateContainerType(context.Context, *ContainerType) (*ContainerTypeID, error)
	GetContainerType(context.Context, *ContainerTypeID) (*ContainerType, error)
	DeleteContainerType(context.Context, *ContainerTypeID) (*ContainerID, error)
	GetContainerTypes(*GetContainerTypesRequest, MruVItemService_GetContainerTypesServer) error
	//Container Methods
	GetContainerItems(context.Context, *ContainerID) (*GetContainerItemsResponse, error)
	RemoveContainerItem(context.Context, *RemoveItemRequest) (*Item, error)
	PutItem(context.Context, *PutItemRequest) (*ItemID, error)
	//TODO: SortItemsStream
	SortItems(context.Context, *SortItemsRequest) (*SortItemsResponse, error)
	//TODO: GetNearestItemsStream
	GetNearestItems(context.Context, *GetNearestItemsRequest) (*GetNearestItemsResponse, error)
	UseItem(context.Context, *UseItemRequest) (*UseItemResponse, error)
	//Service status
	GetServiceStatus(context.Context, *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error)
	GetServiceVersion(context.Context, *common.VersionRequest) (*common.VersionResponse, error)
}

// UnimplementedMruVItemServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVItemServiceServer struct {
}

func (*UnimplementedMruVItemServiceServer) CreateItem(ctx context.Context, req *Item) (*ItemID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItem(ctx context.Context, req *ItemID) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteItem(ctx context.Context, req *ItemID) (*ItemID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItems(ctx context.Context, req *GetItemsRequest) (*GetItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) CreateItemType(ctx context.Context, req *ItemType) (*ItemTypeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateItemType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItemType(ctx context.Context, req *ItemTypeID) (*ItemType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemType not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteItemType(ctx context.Context, req *ItemTypeID) (*ItemTypeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteItemType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetItemTypes(ctx context.Context, req *GetItemTypesRequest) (*GetItemTypesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetItemTypes not implemented")
}
func (*UnimplementedMruVItemServiceServer) CreateContainer(ctx context.Context, req *Container) (*ContainerID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainer not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainer(ctx context.Context, req *ContainerID) (*Container, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainer not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteContainer(ctx context.Context, req *ContainerID) (*ContainerID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContainer not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainers(ctx context.Context, req *GetContainersRequest) (*GetContainersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainers not implemented")
}
func (*UnimplementedMruVItemServiceServer) CreateContainerType(ctx context.Context, req *ContainerType) (*ContainerTypeID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateContainerType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainerType(ctx context.Context, req *ContainerTypeID) (*ContainerType, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerType not implemented")
}
func (*UnimplementedMruVItemServiceServer) DeleteContainerType(ctx context.Context, req *ContainerTypeID) (*ContainerID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteContainerType not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainerTypes(req *GetContainerTypesRequest, srv MruVItemService_GetContainerTypesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetContainerTypes not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetContainerItems(ctx context.Context, req *ContainerID) (*GetContainerItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetContainerItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) RemoveContainerItem(ctx context.Context, req *RemoveItemRequest) (*Item, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveContainerItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) PutItem(ctx context.Context, req *PutItemRequest) (*ItemID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PutItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) SortItems(ctx context.Context, req *SortItemsRequest) (*SortItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SortItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetNearestItems(ctx context.Context, req *GetNearestItemsRequest) (*GetNearestItemsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNearestItems not implemented")
}
func (*UnimplementedMruVItemServiceServer) UseItem(ctx context.Context, req *UseItemRequest) (*UseItemResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UseItem not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetServiceStatus(ctx context.Context, req *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceStatus not implemented")
}
func (*UnimplementedMruVItemServiceServer) GetServiceVersion(ctx context.Context, req *common.VersionRequest) (*common.VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceVersion not implemented")
}

func RegisterMruVItemServiceServer(s *grpc.Server, srv MruVItemServiceServer) {
	s.RegisterService(&_MruVItemService_serviceDesc, srv)
}

func _MruVItemService_CreateItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Item)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateItem(ctx, req.(*Item))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItem(ctx, req.(*ItemID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteItem(ctx, req.(*ItemID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItems(ctx, req.(*GetItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_CreateItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateItemType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateItemType(ctx, req.(*ItemType))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItemType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItemType(ctx, req.(*ItemTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteItemType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteItemType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteItemType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteItemType(ctx, req.(*ItemTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetItemTypes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetItemTypesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetItemTypes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetItemTypes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetItemTypes(ctx, req.(*GetItemTypesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_CreateContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Container)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateContainer(ctx, req.(*Container))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainer(ctx, req.(*ContainerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteContainer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteContainer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteContainer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteContainer(ctx, req.(*ContainerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetContainersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainers(ctx, req.(*GetContainersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_CreateContainerType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerType)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).CreateContainerType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/CreateContainerType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).CreateContainerType(ctx, req.(*ContainerType))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainerType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainerType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainerType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainerType(ctx, req.(*ContainerTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_DeleteContainerType_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerTypeID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).DeleteContainerType(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/DeleteContainerType",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).DeleteContainerType(ctx, req.(*ContainerTypeID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetContainerTypes_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetContainerTypesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVItemServiceServer).GetContainerTypes(m, &mruVItemServiceGetContainerTypesServer{stream})
}

type MruVItemService_GetContainerTypesServer interface {
	Send(*ContainerType) error
	grpc.ServerStream
}

type mruVItemServiceGetContainerTypesServer struct {
	grpc.ServerStream
}

func (x *mruVItemServiceGetContainerTypesServer) Send(m *ContainerType) error {
	return x.ServerStream.SendMsg(m)
}

func _MruVItemService_GetContainerItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainerID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetContainerItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetContainerItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetContainerItems(ctx, req.(*ContainerID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_RemoveContainerItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).RemoveContainerItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/RemoveContainerItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).RemoveContainerItem(ctx, req.(*RemoveItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_PutItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).PutItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/PutItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).PutItem(ctx, req.(*PutItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_SortItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SortItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).SortItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/SortItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).SortItems(ctx, req.(*SortItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetNearestItems_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNearestItemsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetNearestItems(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetNearestItems",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetNearestItems(ctx, req.(*GetNearestItemsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_UseItem_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UseItemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).UseItem(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/UseItem",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).UseItem(ctx, req.(*UseItemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetServiceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ServiceStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetServiceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetServiceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetServiceStatus(ctx, req.(*common.ServiceStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVItemService_GetServiceVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVItemServiceServer).GetServiceVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVItemService/GetServiceVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVItemServiceServer).GetServiceVersion(ctx, req.(*common.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MruVItemService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.MruVItemService",
	HandlerType: (*MruVItemServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateItem",
			Handler:    _MruVItemService_CreateItem_Handler,
		},
		{
			MethodName: "GetItem",
			Handler:    _MruVItemService_GetItem_Handler,
		},
		{
			MethodName: "DeleteItem",
			Handler:    _MruVItemService_DeleteItem_Handler,
		},
		{
			MethodName: "GetItems",
			Handler:    _MruVItemService_GetItems_Handler,
		},
		{
			MethodName: "CreateItemType",
			Handler:    _MruVItemService_CreateItemType_Handler,
		},
		{
			MethodName: "GetItemType",
			Handler:    _MruVItemService_GetItemType_Handler,
		},
		{
			MethodName: "DeleteItemType",
			Handler:    _MruVItemService_DeleteItemType_Handler,
		},
		{
			MethodName: "GetItemTypes",
			Handler:    _MruVItemService_GetItemTypes_Handler,
		},
		{
			MethodName: "CreateContainer",
			Handler:    _MruVItemService_CreateContainer_Handler,
		},
		{
			MethodName: "GetContainer",
			Handler:    _MruVItemService_GetContainer_Handler,
		},
		{
			MethodName: "DeleteContainer",
			Handler:    _MruVItemService_DeleteContainer_Handler,
		},
		{
			MethodName: "GetContainers",
			Handler:    _MruVItemService_GetContainers_Handler,
		},
		{
			MethodName: "CreateContainerType",
			Handler:    _MruVItemService_CreateContainerType_Handler,
		},
		{
			MethodName: "GetContainerType",
			Handler:    _MruVItemService_GetContainerType_Handler,
		},
		{
			MethodName: "DeleteContainerType",
			Handler:    _MruVItemService_DeleteContainerType_Handler,
		},
		{
			MethodName: "GetContainerItems",
			Handler:    _MruVItemService_GetContainerItems_Handler,
		},
		{
			MethodName: "RemoveContainerItem",
			Handler:    _MruVItemService_RemoveContainerItem_Handler,
		},
		{
			MethodName: "PutItem",
			Handler:    _MruVItemService_PutItem_Handler,
		},
		{
			MethodName: "SortItems",
			Handler:    _MruVItemService_SortItems_Handler,
		},
		{
			MethodName: "GetNearestItems",
			Handler:    _MruVItemService_GetNearestItems_Handler,
		},
		{
			MethodName: "UseItem",
			Handler:    _MruVItemService_UseItem_Handler,
		},
		{
			MethodName: "GetServiceStatus",
			Handler:    _MruVItemService_GetServiceStatus_Handler,
		},
		{
			MethodName: "GetServiceVersion",
			Handler:    _MruVItemService_GetServiceVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetContainerTypes",
			Handler:       _MruVItemService_GetContainerTypes_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "items/items.proto",
}
