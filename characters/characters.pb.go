// Code generated by protoc-gen-go. DO NOT EDIT.
// source: characters/characters.proto

package characters

import (
	context "context"
	fmt "fmt"
	common "github.com/MruV-RP/mruv-pb-go/common"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type DeathType int32

const (
	DeathType_DEATH_TYPE_NONE    DeathType = 0
	DeathType_DEATH_TYPE_BW      DeathType = 1
	DeathType_DEATH_TYPE_BW_KILL DeathType = 2
	DeathType_DEATH_TYPE_CK      DeathType = 3
)

var DeathType_name = map[int32]string{
	0: "DEATH_TYPE_NONE",
	1: "DEATH_TYPE_BW",
	2: "DEATH_TYPE_BW_KILL",
	3: "DEATH_TYPE_CK",
}

var DeathType_value = map[string]int32{
	"DEATH_TYPE_NONE":    0,
	"DEATH_TYPE_BW":      1,
	"DEATH_TYPE_BW_KILL": 2,
	"DEATH_TYPE_CK":      3,
}

func (x DeathType) String() string {
	return proto.EnumName(DeathType_name, int32(x))
}

func (DeathType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{0}
}

type Character struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              uint32   `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName           string   `protobuf:"bytes,4,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age                  uint32   `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Sex                  uint32   `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	ClothesId            uint32   `protobuf:"varint,7,opt,name=clothes_id,json=clothesId,proto3" json:"clothes_id,omitempty"`
	X                    float32  `protobuf:"fixed32,8,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,9,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,10,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Character) Reset()         { *m = Character{} }
func (m *Character) String() string { return proto.CompactTextString(m) }
func (*Character) ProtoMessage()    {}
func (*Character) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{0}
}

func (m *Character) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Character.Unmarshal(m, b)
}
func (m *Character) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Character.Marshal(b, m, deterministic)
}
func (m *Character) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Character.Merge(m, src)
}
func (m *Character) XXX_Size() int {
	return xxx_messageInfo_Character.Size(m)
}
func (m *Character) XXX_DiscardUnknown() {
	xxx_messageInfo_Character.DiscardUnknown(m)
}

var xxx_messageInfo_Character proto.InternalMessageInfo

func (m *Character) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Character) GetOwnerId() uint32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *Character) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Character) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *Character) GetAge() uint32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Character) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *Character) GetClothesId() uint32 {
	if m != nil {
		return m.ClothesId
	}
	return 0
}

func (m *Character) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Character) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Character) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

type CharacterID struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharacterID) Reset()         { *m = CharacterID{} }
func (m *CharacterID) String() string { return proto.CompactTextString(m) }
func (*CharacterID) ProtoMessage()    {}
func (*CharacterID) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{1}
}

func (m *CharacterID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharacterID.Unmarshal(m, b)
}
func (m *CharacterID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharacterID.Marshal(b, m, deterministic)
}
func (m *CharacterID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharacterID.Merge(m, src)
}
func (m *CharacterID) XXX_Size() int {
	return xxx_messageInfo_CharacterID.Size(m)
}
func (m *CharacterID) XXX_DiscardUnknown() {
	xxx_messageInfo_CharacterID.DiscardUnknown(m)
}

var xxx_messageInfo_CharacterID proto.InternalMessageInfo

func (m *CharacterID) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request message for rpc `CreateCharacter`.
type CreateCharacterRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              uint32   `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName           string   `protobuf:"bytes,4,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age                  uint32   `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Sex                  uint32   `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCharacterRequest) Reset()         { *m = CreateCharacterRequest{} }
func (m *CreateCharacterRequest) String() string { return proto.CompactTextString(m) }
func (*CreateCharacterRequest) ProtoMessage()    {}
func (*CreateCharacterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{2}
}

func (m *CreateCharacterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCharacterRequest.Unmarshal(m, b)
}
func (m *CreateCharacterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCharacterRequest.Marshal(b, m, deterministic)
}
func (m *CreateCharacterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCharacterRequest.Merge(m, src)
}
func (m *CreateCharacterRequest) XXX_Size() int {
	return xxx_messageInfo_CreateCharacterRequest.Size(m)
}
func (m *CreateCharacterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCharacterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCharacterRequest proto.InternalMessageInfo

func (m *CreateCharacterRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CreateCharacterRequest) GetOwnerId() uint32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *CreateCharacterRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CreateCharacterRequest) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *CreateCharacterRequest) GetAge() uint32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *CreateCharacterRequest) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

// Response message for rpc `CreateCharacter`.
type CreateCharacterResponse struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateCharacterResponse) Reset()         { *m = CreateCharacterResponse{} }
func (m *CreateCharacterResponse) String() string { return proto.CompactTextString(m) }
func (*CreateCharacterResponse) ProtoMessage()    {}
func (*CreateCharacterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{3}
}

func (m *CreateCharacterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateCharacterResponse.Unmarshal(m, b)
}
func (m *CreateCharacterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateCharacterResponse.Marshal(b, m, deterministic)
}
func (m *CreateCharacterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateCharacterResponse.Merge(m, src)
}
func (m *CreateCharacterResponse) XXX_Size() int {
	return xxx_messageInfo_CreateCharacterResponse.Size(m)
}
func (m *CreateCharacterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateCharacterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateCharacterResponse proto.InternalMessageInfo

func (m *CreateCharacterResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request message for rpc `GetCharacter`.
type GetCharacterRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCharacterRequest) Reset()         { *m = GetCharacterRequest{} }
func (m *GetCharacterRequest) String() string { return proto.CompactTextString(m) }
func (*GetCharacterRequest) ProtoMessage()    {}
func (*GetCharacterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{4}
}

func (m *GetCharacterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCharacterRequest.Unmarshal(m, b)
}
func (m *GetCharacterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCharacterRequest.Marshal(b, m, deterministic)
}
func (m *GetCharacterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCharacterRequest.Merge(m, src)
}
func (m *GetCharacterRequest) XXX_Size() int {
	return xxx_messageInfo_GetCharacterRequest.Size(m)
}
func (m *GetCharacterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCharacterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCharacterRequest proto.InternalMessageInfo

func (m *GetCharacterRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `GetCharacter`.
type GetCharacterResponse struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId              uint32   `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName           string   `protobuf:"bytes,4,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age                  uint32   `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Sex                  uint32   `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	ClothesId            uint32   `protobuf:"varint,7,opt,name=clothes_id,json=clothesId,proto3" json:"clothes_id,omitempty"`
	X                    float32  `protobuf:"fixed32,8,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,9,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,10,opt,name=z,proto3" json:"z,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCharacterResponse) Reset()         { *m = GetCharacterResponse{} }
func (m *GetCharacterResponse) String() string { return proto.CompactTextString(m) }
func (*GetCharacterResponse) ProtoMessage()    {}
func (*GetCharacterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{5}
}

func (m *GetCharacterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCharacterResponse.Unmarshal(m, b)
}
func (m *GetCharacterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCharacterResponse.Marshal(b, m, deterministic)
}
func (m *GetCharacterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCharacterResponse.Merge(m, src)
}
func (m *GetCharacterResponse) XXX_Size() int {
	return xxx_messageInfo_GetCharacterResponse.Size(m)
}
func (m *GetCharacterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCharacterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCharacterResponse proto.InternalMessageInfo

func (m *GetCharacterResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *GetCharacterResponse) GetOwnerId() uint32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *GetCharacterResponse) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *GetCharacterResponse) GetSecondName() string {
	if m != nil {
		return m.SecondName
	}
	return ""
}

func (m *GetCharacterResponse) GetAge() uint32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *GetCharacterResponse) GetSex() uint32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *GetCharacterResponse) GetClothesId() uint32 {
	if m != nil {
		return m.ClothesId
	}
	return 0
}

func (m *GetCharacterResponse) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *GetCharacterResponse) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *GetCharacterResponse) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

// Request message for rpc `UpdateCharacter`.
type UpdateCharacterRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCharacterRequest) Reset()         { *m = UpdateCharacterRequest{} }
func (m *UpdateCharacterRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateCharacterRequest) ProtoMessage()    {}
func (*UpdateCharacterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{6}
}

func (m *UpdateCharacterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCharacterRequest.Unmarshal(m, b)
}
func (m *UpdateCharacterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCharacterRequest.Marshal(b, m, deterministic)
}
func (m *UpdateCharacterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCharacterRequest.Merge(m, src)
}
func (m *UpdateCharacterRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateCharacterRequest.Size(m)
}
func (m *UpdateCharacterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCharacterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCharacterRequest proto.InternalMessageInfo

func (m *UpdateCharacterRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `UpdateCharacter`.
type UpdateCharacterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateCharacterResponse) Reset()         { *m = UpdateCharacterResponse{} }
func (m *UpdateCharacterResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateCharacterResponse) ProtoMessage()    {}
func (*UpdateCharacterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{7}
}

func (m *UpdateCharacterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateCharacterResponse.Unmarshal(m, b)
}
func (m *UpdateCharacterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateCharacterResponse.Marshal(b, m, deterministic)
}
func (m *UpdateCharacterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateCharacterResponse.Merge(m, src)
}
func (m *UpdateCharacterResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateCharacterResponse.Size(m)
}
func (m *UpdateCharacterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateCharacterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateCharacterResponse proto.InternalMessageInfo

// Request message for rpc `DeleteCharacter`.
type DeleteCharacterRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCharacterRequest) Reset()         { *m = DeleteCharacterRequest{} }
func (m *DeleteCharacterRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCharacterRequest) ProtoMessage()    {}
func (*DeleteCharacterRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{8}
}

func (m *DeleteCharacterRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCharacterRequest.Unmarshal(m, b)
}
func (m *DeleteCharacterRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCharacterRequest.Marshal(b, m, deterministic)
}
func (m *DeleteCharacterRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCharacterRequest.Merge(m, src)
}
func (m *DeleteCharacterRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCharacterRequest.Size(m)
}
func (m *DeleteCharacterRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCharacterRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCharacterRequest proto.InternalMessageInfo

func (m *DeleteCharacterRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `DeleteCharacter`.
type DeleteCharacterResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCharacterResponse) Reset()         { *m = DeleteCharacterResponse{} }
func (m *DeleteCharacterResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteCharacterResponse) ProtoMessage()    {}
func (*DeleteCharacterResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{9}
}

func (m *DeleteCharacterResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCharacterResponse.Unmarshal(m, b)
}
func (m *DeleteCharacterResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCharacterResponse.Marshal(b, m, deterministic)
}
func (m *DeleteCharacterResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCharacterResponse.Merge(m, src)
}
func (m *DeleteCharacterResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteCharacterResponse.Size(m)
}
func (m *DeleteCharacterResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCharacterResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCharacterResponse proto.InternalMessageInfo

// Request message for rpc `ChangeClothes`.
type ChangeClothesRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClothesId            uint32   `protobuf:"varint,2,opt,name=clothes_id,json=clothesId,proto3" json:"clothes_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeClothesRequest) Reset()         { *m = ChangeClothesRequest{} }
func (m *ChangeClothesRequest) String() string { return proto.CompactTextString(m) }
func (*ChangeClothesRequest) ProtoMessage()    {}
func (*ChangeClothesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{10}
}

func (m *ChangeClothesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeClothesRequest.Unmarshal(m, b)
}
func (m *ChangeClothesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeClothesRequest.Marshal(b, m, deterministic)
}
func (m *ChangeClothesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeClothesRequest.Merge(m, src)
}
func (m *ChangeClothesRequest) XXX_Size() int {
	return xxx_messageInfo_ChangeClothesRequest.Size(m)
}
func (m *ChangeClothesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeClothesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeClothesRequest proto.InternalMessageInfo

func (m *ChangeClothesRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ChangeClothesRequest) GetClothesId() uint32 {
	if m != nil {
		return m.ClothesId
	}
	return 0
}

// Response message for rpc `ChangeClothes`.
type ChangeClothesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChangeClothesResponse) Reset()         { *m = ChangeClothesResponse{} }
func (m *ChangeClothesResponse) String() string { return proto.CompactTextString(m) }
func (*ChangeClothesResponse) ProtoMessage()    {}
func (*ChangeClothesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{11}
}

func (m *ChangeClothesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChangeClothesResponse.Unmarshal(m, b)
}
func (m *ChangeClothesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChangeClothesResponse.Marshal(b, m, deterministic)
}
func (m *ChangeClothesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChangeClothesResponse.Merge(m, src)
}
func (m *ChangeClothesResponse) XXX_Size() int {
	return xxx_messageInfo_ChangeClothesResponse.Size(m)
}
func (m *ChangeClothesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ChangeClothesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ChangeClothesResponse proto.InternalMessageInfo

type DeathStreamRequest struct {
	DeathTypes           []DeathType `protobuf:"varint,1,rep,packed,name=death_types,json=deathTypes,proto3,enum=mruv.DeathType" json:"death_types,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DeathStreamRequest) Reset()         { *m = DeathStreamRequest{} }
func (m *DeathStreamRequest) String() string { return proto.CompactTextString(m) }
func (*DeathStreamRequest) ProtoMessage()    {}
func (*DeathStreamRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{12}
}

func (m *DeathStreamRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeathStreamRequest.Unmarshal(m, b)
}
func (m *DeathStreamRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeathStreamRequest.Marshal(b, m, deterministic)
}
func (m *DeathStreamRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeathStreamRequest.Merge(m, src)
}
func (m *DeathStreamRequest) XXX_Size() int {
	return xxx_messageInfo_DeathStreamRequest.Size(m)
}
func (m *DeathStreamRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeathStreamRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeathStreamRequest proto.InternalMessageInfo

func (m *DeathStreamRequest) GetDeathTypes() []DeathType {
	if m != nil {
		return m.DeathTypes
	}
	return nil
}

type DeathStreamResponse struct {
	Character            *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	DeathType            DeathType  `protobuf:"varint,2,opt,name=death_type,json=deathType,proto3,enum=mruv.DeathType" json:"death_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DeathStreamResponse) Reset()         { *m = DeathStreamResponse{} }
func (m *DeathStreamResponse) String() string { return proto.CompactTextString(m) }
func (*DeathStreamResponse) ProtoMessage()    {}
func (*DeathStreamResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8cc9875990e6028d, []int{13}
}

func (m *DeathStreamResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeathStreamResponse.Unmarshal(m, b)
}
func (m *DeathStreamResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeathStreamResponse.Marshal(b, m, deterministic)
}
func (m *DeathStreamResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeathStreamResponse.Merge(m, src)
}
func (m *DeathStreamResponse) XXX_Size() int {
	return xxx_messageInfo_DeathStreamResponse.Size(m)
}
func (m *DeathStreamResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeathStreamResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeathStreamResponse proto.InternalMessageInfo

func (m *DeathStreamResponse) GetCharacter() *Character {
	if m != nil {
		return m.Character
	}
	return nil
}

func (m *DeathStreamResponse) GetDeathType() DeathType {
	if m != nil {
		return m.DeathType
	}
	return DeathType_DEATH_TYPE_NONE
}

func init() {
	proto.RegisterEnum("mruv.DeathType", DeathType_name, DeathType_value)
	proto.RegisterType((*Character)(nil), "mruv.Character")
	proto.RegisterType((*CharacterID)(nil), "mruv.CharacterID")
	proto.RegisterType((*CreateCharacterRequest)(nil), "mruv.CreateCharacterRequest")
	proto.RegisterType((*CreateCharacterResponse)(nil), "mruv.CreateCharacterResponse")
	proto.RegisterType((*GetCharacterRequest)(nil), "mruv.GetCharacterRequest")
	proto.RegisterType((*GetCharacterResponse)(nil), "mruv.GetCharacterResponse")
	proto.RegisterType((*UpdateCharacterRequest)(nil), "mruv.UpdateCharacterRequest")
	proto.RegisterType((*UpdateCharacterResponse)(nil), "mruv.UpdateCharacterResponse")
	proto.RegisterType((*DeleteCharacterRequest)(nil), "mruv.DeleteCharacterRequest")
	proto.RegisterType((*DeleteCharacterResponse)(nil), "mruv.DeleteCharacterResponse")
	proto.RegisterType((*ChangeClothesRequest)(nil), "mruv.ChangeClothesRequest")
	proto.RegisterType((*ChangeClothesResponse)(nil), "mruv.ChangeClothesResponse")
	proto.RegisterType((*DeathStreamRequest)(nil), "mruv.DeathStreamRequest")
	proto.RegisterType((*DeathStreamResponse)(nil), "mruv.DeathStreamResponse")
}

func init() { proto.RegisterFile("characters/characters.proto", fileDescriptor_8cc9875990e6028d) }

var fileDescriptor_8cc9875990e6028d = []byte{
	// 816 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0xdd, 0x72, 0xda, 0x46,
	0x18, 0xb5, 0xc0, 0xb5, 0xad, 0x0f, 0xdb, 0xe0, 0xc5, 0x80, 0x90, 0x4d, 0x4b, 0xd5, 0xe9, 0x14,
	0x33, 0x03, 0x72, 0xdd, 0x27, 0xa8, 0x81, 0xba, 0x8c, 0x5d, 0xd7, 0x83, 0x5d, 0x77, 0xda, 0x8b,
	0x52, 0x81, 0xd6, 0xa0, 0x04, 0xfd, 0x44, 0x5a, 0x08, 0xd8, 0xe3, 0x9b, 0xbc, 0x42, 0x1e, 0x22,
	0xef, 0x90, 0xd7, 0xc8, 0x23, 0x24, 0xd7, 0x79, 0x86, 0x8c, 0x56, 0x2b, 0x81, 0x84, 0x98, 0xf8,
	0x32, 0x93, 0xbb, 0xdd, 0xf3, 0x7d, 0x9c, 0xb3, 0x67, 0xf5, 0x9d, 0x1d, 0xe0, 0xa0, 0x3f, 0x54,
	0x6c, 0xa5, 0x4f, 0xb0, 0xed, 0xc8, 0xf3, 0x65, 0xdd, 0xb2, 0x4d, 0x62, 0xa2, 0x75, 0xdd, 0x1e,
	0x4f, 0xc4, 0xc3, 0x81, 0x69, 0x0e, 0x46, 0x58, 0x56, 0x2c, 0x4d, 0x56, 0x0c, 0xc3, 0x24, 0x0a,
	0xd1, 0x4c, 0x83, 0xf5, 0x88, 0xd9, 0xbe, 0xa9, 0xeb, 0xa6, 0x21, 0x0f, 0xb1, 0x32, 0x22, 0x43,
	0x0f, 0x94, 0xde, 0x73, 0xc0, 0x37, 0x7c, 0x36, 0xb4, 0x0b, 0x09, 0x4d, 0x15, 0xb8, 0x32, 0x57,
	0xd9, 0xe9, 0x24, 0x34, 0x15, 0x15, 0x61, 0xcb, 0x7c, 0x69, 0x60, 0xbb, 0xab, 0xa9, 0x42, 0x82,
	0xa2, 0x9b, 0x74, 0xdf, 0x56, 0x51, 0x09, 0xe0, 0x4e, 0xb3, 0x1d, 0xd2, 0x35, 0x14, 0x1d, 0x0b,
	0xc9, 0x32, 0x57, 0xe1, 0x3b, 0x3c, 0x45, 0x2e, 0x15, 0x1d, 0xa3, 0xef, 0x20, 0xe5, 0xe0, 0xbe,
	0x69, 0xa8, 0x5e, 0x7d, 0x9d, 0xd6, 0xc1, 0x83, 0x68, 0x43, 0x06, 0x92, 0xca, 0x00, 0x0b, 0xdf,
	0x50, 0x56, 0x77, 0xe9, 0x22, 0x0e, 0x9e, 0x0a, 0x1b, 0x1e, 0xe2, 0xe0, 0xa9, 0xab, 0xd1, 0x1f,
	0x99, 0x64, 0x88, 0x1d, 0xf7, 0x00, 0x9b, 0xb4, 0xc0, 0x33, 0xa4, 0xad, 0xa2, 0x6d, 0xe0, 0xa6,
	0xc2, 0x56, 0x99, 0xab, 0x24, 0x3a, 0xdc, 0xd4, 0xdd, 0xcd, 0x04, 0xde, 0xdb, 0xcd, 0xdc, 0xdd,
	0xbd, 0x00, 0xde, 0xee, 0x5e, 0x2a, 0x41, 0x2a, 0x30, 0xd9, 0x6e, 0x46, 0x6d, 0x4a, 0x6f, 0x38,
	0xc8, 0x37, 0x6c, 0xac, 0x10, 0x1c, 0x74, 0x75, 0xf0, 0x8b, 0x31, 0x76, 0xc8, 0x17, 0x76, 0x23,
	0xd2, 0x11, 0x14, 0x96, 0x0e, 0xea, 0x58, 0xa6, 0xe1, 0xe0, 0x25, 0x53, 0x3f, 0x42, 0xf6, 0x0c,
	0x93, 0xcf, 0x19, 0x92, 0x3e, 0x72, 0xb0, 0x1f, 0xee, 0x8b, 0xe7, 0xfb, 0x6a, 0x66, 0xa1, 0x02,
	0xf9, 0xbf, 0x2c, 0xf5, 0x09, 0xdf, 0x5a, 0x2a, 0x42, 0x61, 0xa9, 0xd3, 0xbb, 0x1c, 0x97, 0xa4,
	0x89, 0x47, 0xf8, 0x69, 0x24, 0x4b, 0x9d, 0x8c, 0xa4, 0x05, 0xfb, 0x8d, 0xa1, 0x62, 0x0c, 0x70,
	0xc3, 0xb3, 0xb1, 0x6a, 0xe6, 0xc2, 0xd6, 0x13, 0x11, 0xeb, 0x52, 0x01, 0x72, 0x11, 0x1a, 0xc6,
	0xff, 0x1b, 0xa0, 0x26, 0x56, 0xc8, 0xf0, 0x9a, 0xd8, 0x58, 0xd1, 0x7d, 0xf6, 0x63, 0x48, 0xa9,
	0x2e, 0xda, 0x25, 0x33, 0x0b, 0x3b, 0x02, 0x57, 0x4e, 0x56, 0x76, 0x4f, 0xd2, 0x75, 0xf7, 0x01,
	0xa9, 0xd3, 0xf6, 0x9b, 0x99, 0x85, 0x3b, 0xa0, 0xfa, 0x4b, 0x47, 0x22, 0x90, 0x0d, 0xf1, 0xb0,
	0x01, 0xa9, 0x01, 0x1f, 0xbc, 0x43, 0xf4, 0xb4, 0x29, 0x9f, 0x66, 0x6e, 0x75, 0xde, 0x81, 0xea,
	0x00, 0x73, 0x5d, 0xea, 0x22, 0x46, 0x96, 0x0f, 0x64, 0xab, 0xff, 0x01, 0x1f, 0xe0, 0x28, 0x0b,
	0xe9, 0x66, 0xeb, 0xd7, 0x9b, 0xdf, 0xbb, 0x37, 0xff, 0x5c, 0xb5, 0xba, 0x97, 0x7f, 0x5e, 0xb6,
	0x32, 0x6b, 0x68, 0x0f, 0x76, 0x16, 0xc0, 0xd3, 0xbf, 0x33, 0x1c, 0xca, 0x03, 0x0a, 0x41, 0xdd,
	0xf3, 0xf6, 0xc5, 0x45, 0x26, 0x11, 0x69, 0x6d, 0x9c, 0x67, 0x92, 0x27, 0x6f, 0x37, 0x21, 0xf7,
	0x87, 0x3d, 0xbe, 0x0d, 0x0e, 0xeb, 0x5c, 0x63, 0x7b, 0xa2, 0xf5, 0x31, 0xba, 0x83, 0x74, 0x24,
	0x64, 0xe8, 0x90, 0x19, 0x8b, 0x7d, 0x24, 0xc4, 0xd2, 0x8a, 0x2a, 0xfb, 0x0e, 0xf9, 0x57, 0xef,
	0x3e, 0xbc, 0x4e, 0x64, 0xa4, 0x5d, 0x79, 0xf2, 0xf3, 0xc2, 0xd3, 0x8d, 0x7a, 0xb0, 0xbd, 0x98,
	0x3c, 0x54, 0xf4, 0x68, 0x62, 0x52, 0x2b, 0x8a, 0x71, 0x25, 0x46, 0x7f, 0x40, 0xe9, 0x73, 0x28,
	0x1b, 0xa6, 0x97, 0x1f, 0x34, 0xf5, 0x11, 0x3d, 0x87, 0x74, 0x64, 0x86, 0x7d, 0x2f, 0xf1, 0x21,
	0xf0, 0xbd, 0xac, 0x1a, 0x7c, 0x26, 0x76, 0xb2, 0x4a, 0x2c, 0x32, 0xeb, 0xbe, 0x58, 0x7c, 0x58,
	0x7c, 0xb1, 0x55, 0x01, 0x61, 0x62, 0xd5, 0x58, 0x31, 0x0d, 0xf2, 0x57, 0xd8, 0xd6, 0x15, 0x03,
	0x1b, 0xf3, 0x4b, 0x39, 0xd7, 0x46, 0x23, 0xb4, 0x17, 0x99, 0xc2, 0x76, 0x53, 0x5c, 0x86, 0xa4,
	0x23, 0x4a, 0xfe, 0x43, 0xf5, 0xfb, 0x08, 0xb9, 0xe5, 0x93, 0xba, 0x5c, 0x9e, 0xd4, 0x0c, 0x76,
	0x42, 0x09, 0x43, 0x62, 0x40, 0xb7, 0x94, 0x5e, 0xf1, 0x20, 0xb6, 0xc6, 0x1c, 0xc9, 0x54, 0xf4,
	0x48, 0xfc, 0x29, 0x24, 0x4a, 0x55, 0x64, 0x96, 0x68, 0xf9, 0x61, 0x1e, 0xf6, 0x47, 0x74, 0x06,
	0xdb, 0x34, 0x05, 0x8e, 0x17, 0x3e, 0x24, 0x2c, 0x24, 0x26, 0x94, 0x6b, 0xb1, 0x18, 0x53, 0x61,
	0xaa, 0x6b, 0xc7, 0x1c, 0x7a, 0x06, 0x99, 0x33, 0x4c, 0xd8, 0x88, 0x5f, 0x13, 0x85, 0x8c, 0x03,
	0x1b, 0x21, 0x30, 0x62, 0x23, 0x52, 0x63, 0x84, 0x25, 0x6a, 0xa3, 0x80, 0x72, 0x91, 0xbb, 0x73,
	0x3c, 0xde, 0xff, 0x61, 0x6f, 0xae, 0x75, 0x8b, 0x6d, 0x47, 0x33, 0x0d, 0xb4, 0xef, 0x11, 0xb2,
	0xad, 0x2f, 0x93, 0x8b, 0xa0, 0x4c, 0xe0, 0x5b, 0x2a, 0x20, 0xa0, 0x7c, 0x44, 0x60, 0xe2, 0xf5,
	0x9d, 0x56, 0xff, 0xad, 0x0c, 0x34, 0x32, 0x1c, 0xf7, 0xea, 0x7d, 0x53, 0x97, 0xdd, 0x18, 0xd7,
	0x3a, 0x57, 0xb2, 0x4b, 0x55, 0xb3, 0x7a, 0xb5, 0x81, 0xb9, 0xf0, 0x9b, 0xde, 0x06, 0xfd, 0xa7,
	0xf3, 0xcb, 0xa7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xdf, 0xee, 0xc2, 0x3a, 0x41, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MruVCharactersServiceClient is the client API for MruVCharactersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVCharactersServiceClient interface {
	// Create a character.
	CreateCharacter(ctx context.Context, in *CreateCharacterRequest, opts ...grpc.CallOption) (*CreateCharacterResponse, error)
	// Get a character.
	GetCharacter(ctx context.Context, in *GetCharacterRequest, opts ...grpc.CallOption) (*GetCharacterResponse, error)
	// Update a character.
	UpdateCharacter(ctx context.Context, in *UpdateCharacterRequest, opts ...grpc.CallOption) (*UpdateCharacterResponse, error)
	// Delete a character.
	DeleteCharacter(ctx context.Context, in *DeleteCharacterRequest, opts ...grpc.CallOption) (*DeleteCharacterResponse, error)
	// Kill a character. A character that is killed cannot be played anymore.
	PermanentCharacterKill(ctx context.Context, in *CharacterID, opts ...grpc.CallOption) (*CharacterID, error)
	// Change player clothes.
	ChangeClothes(ctx context.Context, in *ChangeClothesRequest, opts ...grpc.CallOption) (*ChangeClothesResponse, error)
	// Stream of deaths.
	DeathsStream(ctx context.Context, in *DeathStreamRequest, opts ...grpc.CallOption) (MruVCharactersService_DeathsStreamClient, error)
	//Service status
	GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error)
	GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error)
}

type mruVCharactersServiceClient struct {
	cc *grpc.ClientConn
}

func NewMruVCharactersServiceClient(cc *grpc.ClientConn) MruVCharactersServiceClient {
	return &mruVCharactersServiceClient{cc}
}

func (c *mruVCharactersServiceClient) CreateCharacter(ctx context.Context, in *CreateCharacterRequest, opts ...grpc.CallOption) (*CreateCharacterResponse, error) {
	out := new(CreateCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/CreateCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) GetCharacter(ctx context.Context, in *GetCharacterRequest, opts ...grpc.CallOption) (*GetCharacterResponse, error) {
	out := new(GetCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/GetCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) UpdateCharacter(ctx context.Context, in *UpdateCharacterRequest, opts ...grpc.CallOption) (*UpdateCharacterResponse, error) {
	out := new(UpdateCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/UpdateCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) DeleteCharacter(ctx context.Context, in *DeleteCharacterRequest, opts ...grpc.CallOption) (*DeleteCharacterResponse, error) {
	out := new(DeleteCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/DeleteCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) PermanentCharacterKill(ctx context.Context, in *CharacterID, opts ...grpc.CallOption) (*CharacterID, error) {
	out := new(CharacterID)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/PermanentCharacterKill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) ChangeClothes(ctx context.Context, in *ChangeClothesRequest, opts ...grpc.CallOption) (*ChangeClothesResponse, error) {
	out := new(ChangeClothesResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/ChangeClothes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) DeathsStream(ctx context.Context, in *DeathStreamRequest, opts ...grpc.CallOption) (MruVCharactersService_DeathsStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVCharactersService_serviceDesc.Streams[0], "/mruv.MruVCharactersService/DeathsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVCharactersServiceDeathsStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVCharactersService_DeathsStreamClient interface {
	Recv() (*DeathStreamResponse, error)
	grpc.ClientStream
}

type mruVCharactersServiceDeathsStreamClient struct {
	grpc.ClientStream
}

func (x *mruVCharactersServiceDeathsStreamClient) Recv() (*DeathStreamResponse, error) {
	m := new(DeathStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mruVCharactersServiceClient) GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error) {
	out := new(common.ServiceStatusResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/GetServiceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error) {
	out := new(common.VersionResponse)
	err := c.cc.Invoke(ctx, "/mruv.MruVCharactersService/GetServiceVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MruVCharactersServiceServer is the server API for MruVCharactersService service.
type MruVCharactersServiceServer interface {
	// Create a character.
	CreateCharacter(context.Context, *CreateCharacterRequest) (*CreateCharacterResponse, error)
	// Get a character.
	GetCharacter(context.Context, *GetCharacterRequest) (*GetCharacterResponse, error)
	// Update a character.
	UpdateCharacter(context.Context, *UpdateCharacterRequest) (*UpdateCharacterResponse, error)
	// Delete a character.
	DeleteCharacter(context.Context, *DeleteCharacterRequest) (*DeleteCharacterResponse, error)
	// Kill a character. A character that is killed cannot be played anymore.
	PermanentCharacterKill(context.Context, *CharacterID) (*CharacterID, error)
	// Change player clothes.
	ChangeClothes(context.Context, *ChangeClothesRequest) (*ChangeClothesResponse, error)
	// Stream of deaths.
	DeathsStream(*DeathStreamRequest, MruVCharactersService_DeathsStreamServer) error
	//Service status
	GetServiceStatus(context.Context, *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error)
	GetServiceVersion(context.Context, *common.VersionRequest) (*common.VersionResponse, error)
}

// UnimplementedMruVCharactersServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVCharactersServiceServer struct {
}

func (*UnimplementedMruVCharactersServiceServer) CreateCharacter(ctx context.Context, req *CreateCharacterRequest) (*CreateCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) GetCharacter(ctx context.Context, req *GetCharacterRequest) (*GetCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) UpdateCharacter(ctx context.Context, req *UpdateCharacterRequest) (*UpdateCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) DeleteCharacter(ctx context.Context, req *DeleteCharacterRequest) (*DeleteCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) PermanentCharacterKill(ctx context.Context, req *CharacterID) (*CharacterID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermanentCharacterKill not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) ChangeClothes(ctx context.Context, req *ChangeClothesRequest) (*ChangeClothesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeClothes not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) DeathsStream(req *DeathStreamRequest, srv MruVCharactersService_DeathsStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method DeathsStream not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) GetServiceStatus(ctx context.Context, req *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceStatus not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) GetServiceVersion(ctx context.Context, req *common.VersionRequest) (*common.VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceVersion not implemented")
}

func RegisterMruVCharactersServiceServer(s *grpc.Server, srv MruVCharactersServiceServer) {
	s.RegisterService(&_MruVCharactersService_serviceDesc, srv)
}

func _MruVCharactersService_CreateCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).CreateCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/CreateCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).CreateCharacter(ctx, req.(*CreateCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_GetCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).GetCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/GetCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).GetCharacter(ctx, req.(*GetCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_UpdateCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).UpdateCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/UpdateCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).UpdateCharacter(ctx, req.(*UpdateCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_DeleteCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).DeleteCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/DeleteCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).DeleteCharacter(ctx, req.(*DeleteCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_PermanentCharacterKill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CharacterID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).PermanentCharacterKill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/PermanentCharacterKill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).PermanentCharacterKill(ctx, req.(*CharacterID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_ChangeClothes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeClothesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).ChangeClothes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/ChangeClothes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).ChangeClothes(ctx, req.(*ChangeClothesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_DeathsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeathStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVCharactersServiceServer).DeathsStream(m, &mruVCharactersServiceDeathsStreamServer{stream})
}

type MruVCharactersService_DeathsStreamServer interface {
	Send(*DeathStreamResponse) error
	grpc.ServerStream
}

type mruVCharactersServiceDeathsStreamServer struct {
	grpc.ServerStream
}

func (x *mruVCharactersServiceDeathsStreamServer) Send(m *DeathStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MruVCharactersService_GetServiceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ServiceStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).GetServiceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/GetServiceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).GetServiceStatus(ctx, req.(*common.ServiceStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_GetServiceVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).GetServiceVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.MruVCharactersService/GetServiceVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).GetServiceVersion(ctx, req.(*common.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MruVCharactersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.MruVCharactersService",
	HandlerType: (*MruVCharactersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCharacter",
			Handler:    _MruVCharactersService_CreateCharacter_Handler,
		},
		{
			MethodName: "GetCharacter",
			Handler:    _MruVCharactersService_GetCharacter_Handler,
		},
		{
			MethodName: "UpdateCharacter",
			Handler:    _MruVCharactersService_UpdateCharacter_Handler,
		},
		{
			MethodName: "DeleteCharacter",
			Handler:    _MruVCharactersService_DeleteCharacter_Handler,
		},
		{
			MethodName: "PermanentCharacterKill",
			Handler:    _MruVCharactersService_PermanentCharacterKill_Handler,
		},
		{
			MethodName: "ChangeClothes",
			Handler:    _MruVCharactersService_ChangeClothes_Handler,
		},
		{
			MethodName: "GetServiceStatus",
			Handler:    _MruVCharactersService_GetServiceStatus_Handler,
		},
		{
			MethodName: "GetServiceVersion",
			Handler:    _MruVCharactersService_GetServiceVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DeathsStream",
			Handler:       _MruVCharactersService_DeathsStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "characters/characters.proto",
}
