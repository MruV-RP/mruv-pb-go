// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: characters/characters.proto

package characters

import (
	context "context"
	common "github.com/MruV-RP/mruv-pb-go/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeathType int32

const (
	DeathType_DEATH_TYPE_NONE    DeathType = 0
	DeathType_DEATH_TYPE_BW      DeathType = 1
	DeathType_DEATH_TYPE_BW_KILL DeathType = 2
	DeathType_DEATH_TYPE_CK      DeathType = 3
)

// Enum value maps for DeathType.
var (
	DeathType_name = map[int32]string{
		0: "DEATH_TYPE_NONE",
		1: "DEATH_TYPE_BW",
		2: "DEATH_TYPE_BW_KILL",
		3: "DEATH_TYPE_CK",
	}
	DeathType_value = map[string]int32{
		"DEATH_TYPE_NONE":    0,
		"DEATH_TYPE_BW":      1,
		"DEATH_TYPE_BW_KILL": 2,
		"DEATH_TYPE_CK":      3,
	}
)

func (x DeathType) Enum() *DeathType {
	p := new(DeathType)
	*p = x
	return p
}

func (x DeathType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeathType) Descriptor() protoreflect.EnumDescriptor {
	return file_characters_characters_proto_enumTypes[0].Descriptor()
}

func (DeathType) Type() protoreflect.EnumType {
	return &file_characters_characters_proto_enumTypes[0]
}

func (x DeathType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeathType.Descriptor instead.
func (DeathType) EnumDescriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{0}
}

type Character struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId    uint32  `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	FirstName  string  `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName string  `protobuf:"bytes,4,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age        uint32  `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Sex        uint32  `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	ClothesId  uint32  `protobuf:"varint,7,opt,name=clothes_id,json=clothesId,proto3" json:"clothes_id,omitempty"` //TODO: create clothes api
	X          float32 `protobuf:"fixed32,8,opt,name=x,proto3" json:"x,omitempty"`
	Y          float32 `protobuf:"fixed32,9,opt,name=y,proto3" json:"y,omitempty"`
	Z          float32 `protobuf:"fixed32,10,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *Character) Reset() {
	*x = Character{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Character) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Character) ProtoMessage() {}

func (x *Character) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Character.ProtoReflect.Descriptor instead.
func (*Character) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{0}
}

func (x *Character) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Character) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Character) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Character) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *Character) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Character) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *Character) GetClothesId() uint32 {
	if x != nil {
		return x.ClothesId
	}
	return 0
}

func (x *Character) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Character) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Character) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

type CharacterID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CharacterID) Reset() {
	*x = CharacterID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacterID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterID) ProtoMessage() {}

func (x *CharacterID) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterID.ProtoReflect.Descriptor instead.
func (*CharacterID) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{1}
}

func (x *CharacterID) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `CreateCharacter`.
type CreateCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId    uint32 `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	FirstName  string `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName string `protobuf:"bytes,4,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age        uint32 `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Sex        uint32 `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
}

func (x *CreateCharacterRequest) Reset() {
	*x = CreateCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterRequest) ProtoMessage() {}

func (x *CreateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterRequest.ProtoReflect.Descriptor instead.
func (*CreateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCharacterRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CreateCharacterRequest) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *CreateCharacterRequest) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *CreateCharacterRequest) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *CreateCharacterRequest) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *CreateCharacterRequest) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

// Response message for rpc `CreateCharacter`.
type CreateCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCharacterResponse) Reset() {
	*x = CreateCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacterResponse) ProtoMessage() {}

func (x *CreateCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacterResponse.ProtoReflect.Descriptor instead.
func (*CreateCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{3}
}

func (x *CreateCharacterResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `GetCharacter`.
type GetCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCharacterRequest) Reset() {
	*x = GetCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterRequest) ProtoMessage() {}

func (x *GetCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterRequest.ProtoReflect.Descriptor instead.
func (*GetCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{4}
}

func (x *GetCharacterRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `GetCharacter`.
type GetCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId    uint32  `protobuf:"varint,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	FirstName  string  `protobuf:"bytes,3,opt,name=first_name,json=firstName,proto3" json:"first_name,omitempty"`
	SecondName string  `protobuf:"bytes,4,opt,name=second_name,json=secondName,proto3" json:"second_name,omitempty"`
	Age        uint32  `protobuf:"varint,5,opt,name=age,proto3" json:"age,omitempty"`
	Sex        uint32  `protobuf:"varint,6,opt,name=sex,proto3" json:"sex,omitempty"`
	ClothesId  uint32  `protobuf:"varint,7,opt,name=clothes_id,json=clothesId,proto3" json:"clothes_id,omitempty"`
	X          float32 `protobuf:"fixed32,8,opt,name=x,proto3" json:"x,omitempty"`
	Y          float32 `protobuf:"fixed32,9,opt,name=y,proto3" json:"y,omitempty"`
	Z          float32 `protobuf:"fixed32,10,opt,name=z,proto3" json:"z,omitempty"`
}

func (x *GetCharacterResponse) Reset() {
	*x = GetCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCharacterResponse) ProtoMessage() {}

func (x *GetCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCharacterResponse.ProtoReflect.Descriptor instead.
func (*GetCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{5}
}

func (x *GetCharacterResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCharacterResponse) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *GetCharacterResponse) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *GetCharacterResponse) GetSecondName() string {
	if x != nil {
		return x.SecondName
	}
	return ""
}

func (x *GetCharacterResponse) GetAge() uint32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *GetCharacterResponse) GetSex() uint32 {
	if x != nil {
		return x.Sex
	}
	return 0
}

func (x *GetCharacterResponse) GetClothesId() uint32 {
	if x != nil {
		return x.ClothesId
	}
	return 0
}

func (x *GetCharacterResponse) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GetCharacterResponse) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GetCharacterResponse) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

// Request message for rpc `UpdateCharacter`.
type UpdateCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCharacterRequest) Reset() {
	*x = UpdateCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacterRequest) ProtoMessage() {}

func (x *UpdateCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacterRequest.ProtoReflect.Descriptor instead.
func (*UpdateCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateCharacterRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `UpdateCharacter`.
type UpdateCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateCharacterResponse) Reset() {
	*x = UpdateCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacterResponse) ProtoMessage() {}

func (x *UpdateCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacterResponse.ProtoReflect.Descriptor instead.
func (*UpdateCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{7}
}

// Request message for rpc `DeleteCharacter`.
type DeleteCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCharacterRequest) Reset() {
	*x = DeleteCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterRequest) ProtoMessage() {}

func (x *DeleteCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterRequest.ProtoReflect.Descriptor instead.
func (*DeleteCharacterRequest) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteCharacterRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `DeleteCharacter`.
type DeleteCharacterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteCharacterResponse) Reset() {
	*x = DeleteCharacterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCharacterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacterResponse) ProtoMessage() {}

func (x *DeleteCharacterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacterResponse.ProtoReflect.Descriptor instead.
func (*DeleteCharacterResponse) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{9}
}

// Request message for rpc `ChangeClothes`.
type ChangeClothesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ClothesId uint32 `protobuf:"varint,2,opt,name=clothes_id,json=clothesId,proto3" json:"clothes_id,omitempty"`
}

func (x *ChangeClothesRequest) Reset() {
	*x = ChangeClothesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeClothesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeClothesRequest) ProtoMessage() {}

func (x *ChangeClothesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeClothesRequest.ProtoReflect.Descriptor instead.
func (*ChangeClothesRequest) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{10}
}

func (x *ChangeClothesRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChangeClothesRequest) GetClothesId() uint32 {
	if x != nil {
		return x.ClothesId
	}
	return 0
}

// Response message for rpc `ChangeClothes`.
type ChangeClothesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChangeClothesResponse) Reset() {
	*x = ChangeClothesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChangeClothesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChangeClothesResponse) ProtoMessage() {}

func (x *ChangeClothesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChangeClothesResponse.ProtoReflect.Descriptor instead.
func (*ChangeClothesResponse) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{11}
}

type DeathStreamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeathTypes []DeathType `protobuf:"varint,1,rep,packed,name=death_types,json=deathTypes,proto3,enum=mruv.characters.DeathType" json:"death_types,omitempty"`
}

func (x *DeathStreamRequest) Reset() {
	*x = DeathStreamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeathStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeathStreamRequest) ProtoMessage() {}

func (x *DeathStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeathStreamRequest.ProtoReflect.Descriptor instead.
func (*DeathStreamRequest) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{12}
}

func (x *DeathStreamRequest) GetDeathTypes() []DeathType {
	if x != nil {
		return x.DeathTypes
	}
	return nil
}

type DeathStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Character *Character `protobuf:"bytes,1,opt,name=character,proto3" json:"character,omitempty"`
	DeathType DeathType  `protobuf:"varint,2,opt,name=death_type,json=deathType,proto3,enum=mruv.characters.DeathType" json:"death_type,omitempty"`
}

func (x *DeathStreamResponse) Reset() {
	*x = DeathStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_characters_characters_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeathStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeathStreamResponse) ProtoMessage() {}

func (x *DeathStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_characters_characters_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeathStreamResponse.ProtoReflect.Descriptor instead.
func (*DeathStreamResponse) Descriptor() ([]byte, []int) {
	return file_characters_characters_proto_rawDescGZIP(), []int{13}
}

func (x *DeathStreamResponse) GetCharacter() *Character {
	if x != nil {
		return x.Character
	}
	return nil
}

func (x *DeathStreamResponse) GetDeathType() DeathType {
	if x != nil {
		return x.DeathType
	}
	return DeathType_DEATH_TYPE_NONE
}

var File_characters_characters_proto protoreflect.FileDescriptor

var file_characters_characters_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x1c,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x49, 0x64, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x22, 0x1d, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x49, 0x44, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78,
	0x22, 0x29, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x47,
	0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x63, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x49, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x01, 0x7a, 0x22, 0x28, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x19, 0x0a,
	0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x45, 0x0a,
	0x14, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x74, 0x68,
	0x65, 0x73, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c,
	0x6f, 0x74, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a,
	0x12, 0x44, 0x65, 0x61, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0b, 0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x61, 0x74, 0x68,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73,
	0x22, 0x8a, 0x01, 0x0a, 0x13, 0x44, 0x65, 0x61, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x09, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x12, 0x39, 0x0a, 0x0a, 0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x61, 0x74, 0x68, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x09, 0x64, 0x65, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x5e, 0x0a,
	0x09, 0x44, 0x65, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x12, 0x13, 0x0a, 0x0f, 0x44, 0x45,
	0x41, 0x54, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x44, 0x45, 0x41, 0x54, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x57,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x45, 0x41, 0x54, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x42, 0x57, 0x5f, 0x4b, 0x49, 0x4c, 0x4c, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45,
	0x41, 0x54, 0x48, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4b, 0x10, 0x03, 0x32, 0xf3, 0x08,
	0x0a, 0x15, 0x4d, 0x72, 0x75, 0x56, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x78, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x24, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12,
	0x81, 0x01, 0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x32, 0x13,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x81, 0x01, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x28, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x15, 0x2a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7f, 0x0a, 0x16, 0x50, 0x65, 0x72, 0x6d, 0x61,
	0x6e, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x4b, 0x69, 0x6c,
	0x6c, 0x12, 0x1c, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x44, 0x1a,
	0x1c, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x49, 0x44, 0x22, 0x29, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x23, 0x2a, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x4b,
	0x69, 0x6c, 0x6c, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x73, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x43, 0x6c, 0x6f, 0x74, 0x68, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x29, 0x1a, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x63, 0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x2f, 0x7b, 0x63,
	0x6c, 0x6f, 0x74, 0x68, 0x65, 0x73, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x5d, 0x0a, 0x0c, 0x44, 0x65,
	0x61, 0x74, 0x68, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x12, 0x23, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x44, 0x65, 0x61,
	0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x73, 0x2e, 0x44, 0x65, 0x61, 0x74, 0x68, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x78, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x6e, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x42, 0x2a, 0x5a, 0x28, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x4d, 0x72, 0x75, 0x56, 0x2d, 0x52, 0x50, 0x2f, 0x6d, 0x72, 0x75, 0x76, 0x2d, 0x70,
	0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_characters_characters_proto_rawDescOnce sync.Once
	file_characters_characters_proto_rawDescData = file_characters_characters_proto_rawDesc
)

func file_characters_characters_proto_rawDescGZIP() []byte {
	file_characters_characters_proto_rawDescOnce.Do(func() {
		file_characters_characters_proto_rawDescData = protoimpl.X.CompressGZIP(file_characters_characters_proto_rawDescData)
	})
	return file_characters_characters_proto_rawDescData
}

var file_characters_characters_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_characters_characters_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_characters_characters_proto_goTypes = []interface{}{
	(DeathType)(0),                       // 0: mruv.characters.DeathType
	(*Character)(nil),                    // 1: mruv.characters.Character
	(*CharacterID)(nil),                  // 2: mruv.characters.CharacterID
	(*CreateCharacterRequest)(nil),       // 3: mruv.characters.CreateCharacterRequest
	(*CreateCharacterResponse)(nil),      // 4: mruv.characters.CreateCharacterResponse
	(*GetCharacterRequest)(nil),          // 5: mruv.characters.GetCharacterRequest
	(*GetCharacterResponse)(nil),         // 6: mruv.characters.GetCharacterResponse
	(*UpdateCharacterRequest)(nil),       // 7: mruv.characters.UpdateCharacterRequest
	(*UpdateCharacterResponse)(nil),      // 8: mruv.characters.UpdateCharacterResponse
	(*DeleteCharacterRequest)(nil),       // 9: mruv.characters.DeleteCharacterRequest
	(*DeleteCharacterResponse)(nil),      // 10: mruv.characters.DeleteCharacterResponse
	(*ChangeClothesRequest)(nil),         // 11: mruv.characters.ChangeClothesRequest
	(*ChangeClothesResponse)(nil),        // 12: mruv.characters.ChangeClothesResponse
	(*DeathStreamRequest)(nil),           // 13: mruv.characters.DeathStreamRequest
	(*DeathStreamResponse)(nil),          // 14: mruv.characters.DeathStreamResponse
	(*common.ServiceStatusRequest)(nil),  // 15: mruv.common.ServiceStatusRequest
	(*common.VersionRequest)(nil),        // 16: mruv.common.VersionRequest
	(*common.ServiceStatusResponse)(nil), // 17: mruv.common.ServiceStatusResponse
	(*common.VersionResponse)(nil),       // 18: mruv.common.VersionResponse
}
var file_characters_characters_proto_depIdxs = []int32{
	0,  // 0: mruv.characters.DeathStreamRequest.death_types:type_name -> mruv.characters.DeathType
	1,  // 1: mruv.characters.DeathStreamResponse.character:type_name -> mruv.characters.Character
	0,  // 2: mruv.characters.DeathStreamResponse.death_type:type_name -> mruv.characters.DeathType
	3,  // 3: mruv.characters.MruVCharactersService.CreateCharacter:input_type -> mruv.characters.CreateCharacterRequest
	5,  // 4: mruv.characters.MruVCharactersService.GetCharacter:input_type -> mruv.characters.GetCharacterRequest
	7,  // 5: mruv.characters.MruVCharactersService.UpdateCharacter:input_type -> mruv.characters.UpdateCharacterRequest
	9,  // 6: mruv.characters.MruVCharactersService.DeleteCharacter:input_type -> mruv.characters.DeleteCharacterRequest
	2,  // 7: mruv.characters.MruVCharactersService.PermanentCharacterKill:input_type -> mruv.characters.CharacterID
	11, // 8: mruv.characters.MruVCharactersService.ChangeClothes:input_type -> mruv.characters.ChangeClothesRequest
	13, // 9: mruv.characters.MruVCharactersService.DeathsStream:input_type -> mruv.characters.DeathStreamRequest
	15, // 10: mruv.characters.MruVCharactersService.GetServiceStatus:input_type -> mruv.common.ServiceStatusRequest
	16, // 11: mruv.characters.MruVCharactersService.GetServiceVersion:input_type -> mruv.common.VersionRequest
	4,  // 12: mruv.characters.MruVCharactersService.CreateCharacter:output_type -> mruv.characters.CreateCharacterResponse
	6,  // 13: mruv.characters.MruVCharactersService.GetCharacter:output_type -> mruv.characters.GetCharacterResponse
	8,  // 14: mruv.characters.MruVCharactersService.UpdateCharacter:output_type -> mruv.characters.UpdateCharacterResponse
	10, // 15: mruv.characters.MruVCharactersService.DeleteCharacter:output_type -> mruv.characters.DeleteCharacterResponse
	2,  // 16: mruv.characters.MruVCharactersService.PermanentCharacterKill:output_type -> mruv.characters.CharacterID
	12, // 17: mruv.characters.MruVCharactersService.ChangeClothes:output_type -> mruv.characters.ChangeClothesResponse
	14, // 18: mruv.characters.MruVCharactersService.DeathsStream:output_type -> mruv.characters.DeathStreamResponse
	17, // 19: mruv.characters.MruVCharactersService.GetServiceStatus:output_type -> mruv.common.ServiceStatusResponse
	18, // 20: mruv.characters.MruVCharactersService.GetServiceVersion:output_type -> mruv.common.VersionResponse
	12, // [12:21] is the sub-list for method output_type
	3,  // [3:12] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_characters_characters_proto_init() }
func file_characters_characters_proto_init() {
	if File_characters_characters_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_characters_characters_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Character); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacterID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCharacterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeClothesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChangeClothesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeathStreamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_characters_characters_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeathStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_characters_characters_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_characters_characters_proto_goTypes,
		DependencyIndexes: file_characters_characters_proto_depIdxs,
		EnumInfos:         file_characters_characters_proto_enumTypes,
		MessageInfos:      file_characters_characters_proto_msgTypes,
	}.Build()
	File_characters_characters_proto = out.File
	file_characters_characters_proto_rawDesc = nil
	file_characters_characters_proto_goTypes = nil
	file_characters_characters_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MruVCharactersServiceClient is the client API for MruVCharactersService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVCharactersServiceClient interface {
	// Create a character.
	CreateCharacter(ctx context.Context, in *CreateCharacterRequest, opts ...grpc.CallOption) (*CreateCharacterResponse, error)
	// Get a character.
	GetCharacter(ctx context.Context, in *GetCharacterRequest, opts ...grpc.CallOption) (*GetCharacterResponse, error)
	// Update a character.
	UpdateCharacter(ctx context.Context, in *UpdateCharacterRequest, opts ...grpc.CallOption) (*UpdateCharacterResponse, error)
	// Delete a character.
	DeleteCharacter(ctx context.Context, in *DeleteCharacterRequest, opts ...grpc.CallOption) (*DeleteCharacterResponse, error)
	// Kill a character. A character that is killed cannot be played anymore.
	PermanentCharacterKill(ctx context.Context, in *CharacterID, opts ...grpc.CallOption) (*CharacterID, error)
	// Change player clothes.
	ChangeClothes(ctx context.Context, in *ChangeClothesRequest, opts ...grpc.CallOption) (*ChangeClothesResponse, error)
	// Stream of deaths.
	DeathsStream(ctx context.Context, in *DeathStreamRequest, opts ...grpc.CallOption) (MruVCharactersService_DeathsStreamClient, error)
	//Service status
	GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error)
	GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error)
}

type mruVCharactersServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMruVCharactersServiceClient(cc grpc.ClientConnInterface) MruVCharactersServiceClient {
	return &mruVCharactersServiceClient{cc}
}

func (c *mruVCharactersServiceClient) CreateCharacter(ctx context.Context, in *CreateCharacterRequest, opts ...grpc.CallOption) (*CreateCharacterResponse, error) {
	out := new(CreateCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/CreateCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) GetCharacter(ctx context.Context, in *GetCharacterRequest, opts ...grpc.CallOption) (*GetCharacterResponse, error) {
	out := new(GetCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/GetCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) UpdateCharacter(ctx context.Context, in *UpdateCharacterRequest, opts ...grpc.CallOption) (*UpdateCharacterResponse, error) {
	out := new(UpdateCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/UpdateCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) DeleteCharacter(ctx context.Context, in *DeleteCharacterRequest, opts ...grpc.CallOption) (*DeleteCharacterResponse, error) {
	out := new(DeleteCharacterResponse)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/DeleteCharacter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) PermanentCharacterKill(ctx context.Context, in *CharacterID, opts ...grpc.CallOption) (*CharacterID, error) {
	out := new(CharacterID)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/PermanentCharacterKill", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) ChangeClothes(ctx context.Context, in *ChangeClothesRequest, opts ...grpc.CallOption) (*ChangeClothesResponse, error) {
	out := new(ChangeClothesResponse)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/ChangeClothes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) DeathsStream(ctx context.Context, in *DeathStreamRequest, opts ...grpc.CallOption) (MruVCharactersService_DeathsStreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVCharactersService_serviceDesc.Streams[0], "/mruv.characters.MruVCharactersService/DeathsStream", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVCharactersServiceDeathsStreamClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVCharactersService_DeathsStreamClient interface {
	Recv() (*DeathStreamResponse, error)
	grpc.ClientStream
}

type mruVCharactersServiceDeathsStreamClient struct {
	grpc.ClientStream
}

func (x *mruVCharactersServiceDeathsStreamClient) Recv() (*DeathStreamResponse, error) {
	m := new(DeathStreamResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mruVCharactersServiceClient) GetServiceStatus(ctx context.Context, in *common.ServiceStatusRequest, opts ...grpc.CallOption) (*common.ServiceStatusResponse, error) {
	out := new(common.ServiceStatusResponse)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/GetServiceStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVCharactersServiceClient) GetServiceVersion(ctx context.Context, in *common.VersionRequest, opts ...grpc.CallOption) (*common.VersionResponse, error) {
	out := new(common.VersionResponse)
	err := c.cc.Invoke(ctx, "/mruv.characters.MruVCharactersService/GetServiceVersion", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MruVCharactersServiceServer is the server API for MruVCharactersService service.
type MruVCharactersServiceServer interface {
	// Create a character.
	CreateCharacter(context.Context, *CreateCharacterRequest) (*CreateCharacterResponse, error)
	// Get a character.
	GetCharacter(context.Context, *GetCharacterRequest) (*GetCharacterResponse, error)
	// Update a character.
	UpdateCharacter(context.Context, *UpdateCharacterRequest) (*UpdateCharacterResponse, error)
	// Delete a character.
	DeleteCharacter(context.Context, *DeleteCharacterRequest) (*DeleteCharacterResponse, error)
	// Kill a character. A character that is killed cannot be played anymore.
	PermanentCharacterKill(context.Context, *CharacterID) (*CharacterID, error)
	// Change player clothes.
	ChangeClothes(context.Context, *ChangeClothesRequest) (*ChangeClothesResponse, error)
	// Stream of deaths.
	DeathsStream(*DeathStreamRequest, MruVCharactersService_DeathsStreamServer) error
	//Service status
	GetServiceStatus(context.Context, *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error)
	GetServiceVersion(context.Context, *common.VersionRequest) (*common.VersionResponse, error)
}

// UnimplementedMruVCharactersServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVCharactersServiceServer struct {
}

func (*UnimplementedMruVCharactersServiceServer) CreateCharacter(context.Context, *CreateCharacterRequest) (*CreateCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) GetCharacter(context.Context, *GetCharacterRequest) (*GetCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) UpdateCharacter(context.Context, *UpdateCharacterRequest) (*UpdateCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) DeleteCharacter(context.Context, *DeleteCharacterRequest) (*DeleteCharacterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCharacter not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) PermanentCharacterKill(context.Context, *CharacterID) (*CharacterID, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PermanentCharacterKill not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) ChangeClothes(context.Context, *ChangeClothesRequest) (*ChangeClothesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ChangeClothes not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) DeathsStream(*DeathStreamRequest, MruVCharactersService_DeathsStreamServer) error {
	return status.Errorf(codes.Unimplemented, "method DeathsStream not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) GetServiceStatus(context.Context, *common.ServiceStatusRequest) (*common.ServiceStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceStatus not implemented")
}
func (*UnimplementedMruVCharactersServiceServer) GetServiceVersion(context.Context, *common.VersionRequest) (*common.VersionResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetServiceVersion not implemented")
}

func RegisterMruVCharactersServiceServer(s *grpc.Server, srv MruVCharactersServiceServer) {
	s.RegisterService(&_MruVCharactersService_serviceDesc, srv)
}

func _MruVCharactersService_CreateCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).CreateCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/CreateCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).CreateCharacter(ctx, req.(*CreateCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_GetCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).GetCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/GetCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).GetCharacter(ctx, req.(*GetCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_UpdateCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).UpdateCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/UpdateCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).UpdateCharacter(ctx, req.(*UpdateCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_DeleteCharacter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCharacterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).DeleteCharacter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/DeleteCharacter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).DeleteCharacter(ctx, req.(*DeleteCharacterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_PermanentCharacterKill_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CharacterID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).PermanentCharacterKill(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/PermanentCharacterKill",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).PermanentCharacterKill(ctx, req.(*CharacterID))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_ChangeClothes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChangeClothesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).ChangeClothes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/ChangeClothes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).ChangeClothes(ctx, req.(*ChangeClothesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_DeathsStream_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DeathStreamRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVCharactersServiceServer).DeathsStream(m, &mruVCharactersServiceDeathsStreamServer{stream})
}

type MruVCharactersService_DeathsStreamServer interface {
	Send(*DeathStreamResponse) error
	grpc.ServerStream
}

type mruVCharactersServiceDeathsStreamServer struct {
	grpc.ServerStream
}

func (x *mruVCharactersServiceDeathsStreamServer) Send(m *DeathStreamResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MruVCharactersService_GetServiceStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.ServiceStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).GetServiceStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/GetServiceStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).GetServiceStatus(ctx, req.(*common.ServiceStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVCharactersService_GetServiceVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.VersionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVCharactersServiceServer).GetServiceVersion(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.characters.MruVCharactersService/GetServiceVersion",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVCharactersServiceServer).GetServiceVersion(ctx, req.(*common.VersionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MruVCharactersService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.characters.MruVCharactersService",
	HandlerType: (*MruVCharactersServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateCharacter",
			Handler:    _MruVCharactersService_CreateCharacter_Handler,
		},
		{
			MethodName: "GetCharacter",
			Handler:    _MruVCharactersService_GetCharacter_Handler,
		},
		{
			MethodName: "UpdateCharacter",
			Handler:    _MruVCharactersService_UpdateCharacter_Handler,
		},
		{
			MethodName: "DeleteCharacter",
			Handler:    _MruVCharactersService_DeleteCharacter_Handler,
		},
		{
			MethodName: "PermanentCharacterKill",
			Handler:    _MruVCharactersService_PermanentCharacterKill_Handler,
		},
		{
			MethodName: "ChangeClothes",
			Handler:    _MruVCharactersService_ChangeClothes_Handler,
		},
		{
			MethodName: "GetServiceStatus",
			Handler:    _MruVCharactersService_GetServiceStatus_Handler,
		},
		{
			MethodName: "GetServiceVersion",
			Handler:    _MruVCharactersService_GetServiceVersion_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "DeathsStream",
			Handler:       _MruVCharactersService_DeathsStream_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "characters/characters.proto",
}
