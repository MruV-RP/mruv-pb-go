// Code generated by protoc-gen-go. DO NOT EDIT.
// source: business/business.proto

package business

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Owner type.
type OwnerType int32

const (
	OwnerType_UNKNOWN OwnerType = 0
	OwnerType_PLAYER  OwnerType = 1
	OwnerType_GROUP   OwnerType = 2
	OwnerType_SYSTEM  OwnerType = 3
)

var OwnerType_name = map[int32]string{
	0: "UNKNOWN",
	1: "PLAYER",
	2: "GROUP",
	3: "SYSTEM",
}

var OwnerType_value = map[string]int32{
	"UNKNOWN": 0,
	"PLAYER":  1,
	"GROUP":   2,
	"SYSTEM":  3,
}

func (x OwnerType) String() string {
	return proto.EnumName(OwnerType_name, int32(x))
}

func (OwnerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{0}
}

// Business data structure.
type Business struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Estates that belongs to a business.
	EstateIds []int64 `protobuf:"varint,3,rep,packed,name=estate_ids,json=estateIds,proto3" json:"estate_ids,omitempty"`
	// Purchase price in economy system.
	ProductId uint32 `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// Owner type of the business.
	OwnerType OwnerType `protobuf:"varint,5,opt,name=owner_type,json=ownerType,proto3,enum=mruv.business.OwnerType" json:"owner_type,omitempty"`
	// Owner of the business.
	OwnerId uint32 `protobuf:"varint,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Items that belongs to business.
	BusinessItems []uint32 `protobuf:"varint,7,rep,packed,name=business_items,json=businessItems,proto3" json:"business_items,omitempty"`
	// Business group
	BusinessGroup        uint32   `protobuf:"varint,8,opt,name=business_group,json=businessGroup,proto3" json:"business_group,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Business) Reset()         { *m = Business{} }
func (m *Business) String() string { return proto.CompactTextString(m) }
func (*Business) ProtoMessage()    {}
func (*Business) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{0}
}

func (m *Business) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Business.Unmarshal(m, b)
}
func (m *Business) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Business.Marshal(b, m, deterministic)
}
func (m *Business) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Business.Merge(m, src)
}
func (m *Business) XXX_Size() int {
	return xxx_messageInfo_Business.Size(m)
}
func (m *Business) XXX_DiscardUnknown() {
	xxx_messageInfo_Business.DiscardUnknown(m)
}

var xxx_messageInfo_Business proto.InternalMessageInfo

func (m *Business) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Business) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Business) GetEstateIds() []int64 {
	if m != nil {
		return m.EstateIds
	}
	return nil
}

func (m *Business) GetProductId() uint32 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

func (m *Business) GetOwnerType() OwnerType {
	if m != nil {
		return m.OwnerType
	}
	return OwnerType_UNKNOWN
}

func (m *Business) GetOwnerId() uint32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

func (m *Business) GetBusinessItems() []uint32 {
	if m != nil {
		return m.BusinessItems
	}
	return nil
}

func (m *Business) GetBusinessGroup() uint32 {
	if m != nil {
		return m.BusinessGroup
	}
	return 0
}

// Request message for rpc `CreateBusiness`.
type CreateBusinessRequest struct {
	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Purchase price in economy system.
	ProductId            uint32   `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBusinessRequest) Reset()         { *m = CreateBusinessRequest{} }
func (m *CreateBusinessRequest) String() string { return proto.CompactTextString(m) }
func (*CreateBusinessRequest) ProtoMessage()    {}
func (*CreateBusinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{1}
}

func (m *CreateBusinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBusinessRequest.Unmarshal(m, b)
}
func (m *CreateBusinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBusinessRequest.Marshal(b, m, deterministic)
}
func (m *CreateBusinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBusinessRequest.Merge(m, src)
}
func (m *CreateBusinessRequest) XXX_Size() int {
	return xxx_messageInfo_CreateBusinessRequest.Size(m)
}
func (m *CreateBusinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBusinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBusinessRequest proto.InternalMessageInfo

func (m *CreateBusinessRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateBusinessRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateBusinessRequest) GetProductId() uint32 {
	if m != nil {
		return m.ProductId
	}
	return 0
}

// Response message for rpc `CreateBusiness`.
type CreateBusinessResponse struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateBusinessResponse) Reset()         { *m = CreateBusinessResponse{} }
func (m *CreateBusinessResponse) String() string { return proto.CompactTextString(m) }
func (*CreateBusinessResponse) ProtoMessage()    {}
func (*CreateBusinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{2}
}

func (m *CreateBusinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateBusinessResponse.Unmarshal(m, b)
}
func (m *CreateBusinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateBusinessResponse.Marshal(b, m, deterministic)
}
func (m *CreateBusinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateBusinessResponse.Merge(m, src)
}
func (m *CreateBusinessResponse) XXX_Size() int {
	return xxx_messageInfo_CreateBusinessResponse.Size(m)
}
func (m *CreateBusinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateBusinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateBusinessResponse proto.InternalMessageInfo

func (m *CreateBusinessResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request message for rpc `GetBusiness`.
type GetBusinessRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBusinessRequest) Reset()         { *m = GetBusinessRequest{} }
func (m *GetBusinessRequest) String() string { return proto.CompactTextString(m) }
func (*GetBusinessRequest) ProtoMessage()    {}
func (*GetBusinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{3}
}

func (m *GetBusinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBusinessRequest.Unmarshal(m, b)
}
func (m *GetBusinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBusinessRequest.Marshal(b, m, deterministic)
}
func (m *GetBusinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBusinessRequest.Merge(m, src)
}
func (m *GetBusinessRequest) XXX_Size() int {
	return xxx_messageInfo_GetBusinessRequest.Size(m)
}
func (m *GetBusinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBusinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetBusinessRequest proto.InternalMessageInfo

func (m *GetBusinessRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `GetBusiness`.
type GetBusinessResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetBusinessResponse) Reset()         { *m = GetBusinessResponse{} }
func (m *GetBusinessResponse) String() string { return proto.CompactTextString(m) }
func (*GetBusinessResponse) ProtoMessage()    {}
func (*GetBusinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{4}
}

func (m *GetBusinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetBusinessResponse.Unmarshal(m, b)
}
func (m *GetBusinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetBusinessResponse.Marshal(b, m, deterministic)
}
func (m *GetBusinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetBusinessResponse.Merge(m, src)
}
func (m *GetBusinessResponse) XXX_Size() int {
	return xxx_messageInfo_GetBusinessResponse.Size(m)
}
func (m *GetBusinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetBusinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetBusinessResponse proto.InternalMessageInfo

// Request message for rpc `UpdateBusiness`.
type UpdateBusinessRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBusinessRequest) Reset()         { *m = UpdateBusinessRequest{} }
func (m *UpdateBusinessRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateBusinessRequest) ProtoMessage()    {}
func (*UpdateBusinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{5}
}

func (m *UpdateBusinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBusinessRequest.Unmarshal(m, b)
}
func (m *UpdateBusinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBusinessRequest.Marshal(b, m, deterministic)
}
func (m *UpdateBusinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBusinessRequest.Merge(m, src)
}
func (m *UpdateBusinessRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateBusinessRequest.Size(m)
}
func (m *UpdateBusinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBusinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBusinessRequest proto.InternalMessageInfo

func (m *UpdateBusinessRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `UpdateBusiness`.
type UpdateBusinessResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateBusinessResponse) Reset()         { *m = UpdateBusinessResponse{} }
func (m *UpdateBusinessResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateBusinessResponse) ProtoMessage()    {}
func (*UpdateBusinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{6}
}

func (m *UpdateBusinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateBusinessResponse.Unmarshal(m, b)
}
func (m *UpdateBusinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateBusinessResponse.Marshal(b, m, deterministic)
}
func (m *UpdateBusinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateBusinessResponse.Merge(m, src)
}
func (m *UpdateBusinessResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateBusinessResponse.Size(m)
}
func (m *UpdateBusinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateBusinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateBusinessResponse proto.InternalMessageInfo

// Request message for rpc `DeleteBusiness`.
type DeleteBusinessRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBusinessRequest) Reset()         { *m = DeleteBusinessRequest{} }
func (m *DeleteBusinessRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteBusinessRequest) ProtoMessage()    {}
func (*DeleteBusinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{7}
}

func (m *DeleteBusinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBusinessRequest.Unmarshal(m, b)
}
func (m *DeleteBusinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBusinessRequest.Marshal(b, m, deterministic)
}
func (m *DeleteBusinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBusinessRequest.Merge(m, src)
}
func (m *DeleteBusinessRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteBusinessRequest.Size(m)
}
func (m *DeleteBusinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBusinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBusinessRequest proto.InternalMessageInfo

func (m *DeleteBusinessRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `DeleteBusiness`.
type DeleteBusinessResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteBusinessResponse) Reset()         { *m = DeleteBusinessResponse{} }
func (m *DeleteBusinessResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteBusinessResponse) ProtoMessage()    {}
func (*DeleteBusinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{8}
}

func (m *DeleteBusinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteBusinessResponse.Unmarshal(m, b)
}
func (m *DeleteBusinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteBusinessResponse.Marshal(b, m, deterministic)
}
func (m *DeleteBusinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteBusinessResponse.Merge(m, src)
}
func (m *DeleteBusinessResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteBusinessResponse.Size(m)
}
func (m *DeleteBusinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteBusinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteBusinessResponse proto.InternalMessageInfo

// Request message for rpc `AssignOwner`.
type AssignOwnerRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignOwnerRequest) Reset()         { *m = AssignOwnerRequest{} }
func (m *AssignOwnerRequest) String() string { return proto.CompactTextString(m) }
func (*AssignOwnerRequest) ProtoMessage()    {}
func (*AssignOwnerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{9}
}

func (m *AssignOwnerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignOwnerRequest.Unmarshal(m, b)
}
func (m *AssignOwnerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignOwnerRequest.Marshal(b, m, deterministic)
}
func (m *AssignOwnerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignOwnerRequest.Merge(m, src)
}
func (m *AssignOwnerRequest) XXX_Size() int {
	return xxx_messageInfo_AssignOwnerRequest.Size(m)
}
func (m *AssignOwnerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignOwnerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignOwnerRequest proto.InternalMessageInfo

func (m *AssignOwnerRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `AssignOwner`.
type AssignOwnerResponse struct {
	OwnerType            OwnerType `protobuf:"varint,5,opt,name=owner_type,json=ownerType,proto3,enum=mruv.business.OwnerType" json:"owner_type,omitempty"`
	OwnerId              uint32    `protobuf:"varint,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AssignOwnerResponse) Reset()         { *m = AssignOwnerResponse{} }
func (m *AssignOwnerResponse) String() string { return proto.CompactTextString(m) }
func (*AssignOwnerResponse) ProtoMessage()    {}
func (*AssignOwnerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{10}
}

func (m *AssignOwnerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignOwnerResponse.Unmarshal(m, b)
}
func (m *AssignOwnerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignOwnerResponse.Marshal(b, m, deterministic)
}
func (m *AssignOwnerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignOwnerResponse.Merge(m, src)
}
func (m *AssignOwnerResponse) XXX_Size() int {
	return xxx_messageInfo_AssignOwnerResponse.Size(m)
}
func (m *AssignOwnerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignOwnerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignOwnerResponse proto.InternalMessageInfo

func (m *AssignOwnerResponse) GetOwnerType() OwnerType {
	if m != nil {
		return m.OwnerType
	}
	return OwnerType_UNKNOWN
}

func (m *AssignOwnerResponse) GetOwnerId() uint32 {
	if m != nil {
		return m.OwnerId
	}
	return 0
}

// Request message for rpc `AssignEstate`.
type AssignEstateRequest struct {
	BusinessId           uint32   `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	EstateId             uint32   `protobuf:"varint,2,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignEstateRequest) Reset()         { *m = AssignEstateRequest{} }
func (m *AssignEstateRequest) String() string { return proto.CompactTextString(m) }
func (*AssignEstateRequest) ProtoMessage()    {}
func (*AssignEstateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{11}
}

func (m *AssignEstateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignEstateRequest.Unmarshal(m, b)
}
func (m *AssignEstateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignEstateRequest.Marshal(b, m, deterministic)
}
func (m *AssignEstateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignEstateRequest.Merge(m, src)
}
func (m *AssignEstateRequest) XXX_Size() int {
	return xxx_messageInfo_AssignEstateRequest.Size(m)
}
func (m *AssignEstateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignEstateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AssignEstateRequest proto.InternalMessageInfo

func (m *AssignEstateRequest) GetBusinessId() uint32 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *AssignEstateRequest) GetEstateId() uint32 {
	if m != nil {
		return m.EstateId
	}
	return 0
}

// Response message for rpc `AssignEstate`.
type AssignEstateResponse struct {
	EstateCount          uint32   `protobuf:"varint,1,opt,name=estate_count,json=estateCount,proto3" json:"estate_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AssignEstateResponse) Reset()         { *m = AssignEstateResponse{} }
func (m *AssignEstateResponse) String() string { return proto.CompactTextString(m) }
func (*AssignEstateResponse) ProtoMessage()    {}
func (*AssignEstateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{12}
}

func (m *AssignEstateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AssignEstateResponse.Unmarshal(m, b)
}
func (m *AssignEstateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AssignEstateResponse.Marshal(b, m, deterministic)
}
func (m *AssignEstateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AssignEstateResponse.Merge(m, src)
}
func (m *AssignEstateResponse) XXX_Size() int {
	return xxx_messageInfo_AssignEstateResponse.Size(m)
}
func (m *AssignEstateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AssignEstateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AssignEstateResponse proto.InternalMessageInfo

func (m *AssignEstateResponse) GetEstateCount() uint32 {
	if m != nil {
		return m.EstateCount
	}
	return 0
}

// Request message for rpc `UnassignEstate`.
type UnassignEstateRequest struct {
	BusinessId           uint32   `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	EstateId             uint32   `protobuf:"varint,2,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnassignEstateRequest) Reset()         { *m = UnassignEstateRequest{} }
func (m *UnassignEstateRequest) String() string { return proto.CompactTextString(m) }
func (*UnassignEstateRequest) ProtoMessage()    {}
func (*UnassignEstateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{13}
}

func (m *UnassignEstateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnassignEstateRequest.Unmarshal(m, b)
}
func (m *UnassignEstateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnassignEstateRequest.Marshal(b, m, deterministic)
}
func (m *UnassignEstateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnassignEstateRequest.Merge(m, src)
}
func (m *UnassignEstateRequest) XXX_Size() int {
	return xxx_messageInfo_UnassignEstateRequest.Size(m)
}
func (m *UnassignEstateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnassignEstateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnassignEstateRequest proto.InternalMessageInfo

func (m *UnassignEstateRequest) GetBusinessId() uint32 {
	if m != nil {
		return m.BusinessId
	}
	return 0
}

func (m *UnassignEstateRequest) GetEstateId() uint32 {
	if m != nil {
		return m.EstateId
	}
	return 0
}

// Response message for rpc `UnassignEstate`.
type UnassignEstateResponse struct {
	EstateCount          uint32   `protobuf:"varint,1,opt,name=estate_count,json=estateCount,proto3" json:"estate_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnassignEstateResponse) Reset()         { *m = UnassignEstateResponse{} }
func (m *UnassignEstateResponse) String() string { return proto.CompactTextString(m) }
func (*UnassignEstateResponse) ProtoMessage()    {}
func (*UnassignEstateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{14}
}

func (m *UnassignEstateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnassignEstateResponse.Unmarshal(m, b)
}
func (m *UnassignEstateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnassignEstateResponse.Marshal(b, m, deterministic)
}
func (m *UnassignEstateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnassignEstateResponse.Merge(m, src)
}
func (m *UnassignEstateResponse) XXX_Size() int {
	return xxx_messageInfo_UnassignEstateResponse.Size(m)
}
func (m *UnassignEstateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnassignEstateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnassignEstateResponse proto.InternalMessageInfo

func (m *UnassignEstateResponse) GetEstateCount() uint32 {
	if m != nil {
		return m.EstateCount
	}
	return 0
}

// Request message for rpc `BuyBusiness`.
type BuyBusinessRequest struct {
	Id                   uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BuyerType            OwnerType `protobuf:"varint,5,opt,name=buyer_type,json=buyerType,proto3,enum=mruv.business.OwnerType" json:"buyer_type,omitempty"`
	BuyerId              uint32    `protobuf:"varint,6,opt,name=buyer_id,json=buyerId,proto3" json:"buyer_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *BuyBusinessRequest) Reset()         { *m = BuyBusinessRequest{} }
func (m *BuyBusinessRequest) String() string { return proto.CompactTextString(m) }
func (*BuyBusinessRequest) ProtoMessage()    {}
func (*BuyBusinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{15}
}

func (m *BuyBusinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyBusinessRequest.Unmarshal(m, b)
}
func (m *BuyBusinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyBusinessRequest.Marshal(b, m, deterministic)
}
func (m *BuyBusinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyBusinessRequest.Merge(m, src)
}
func (m *BuyBusinessRequest) XXX_Size() int {
	return xxx_messageInfo_BuyBusinessRequest.Size(m)
}
func (m *BuyBusinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyBusinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BuyBusinessRequest proto.InternalMessageInfo

func (m *BuyBusinessRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *BuyBusinessRequest) GetBuyerType() OwnerType {
	if m != nil {
		return m.BuyerType
	}
	return OwnerType_UNKNOWN
}

func (m *BuyBusinessRequest) GetBuyerId() uint32 {
	if m != nil {
		return m.BuyerId
	}
	return 0
}

// Response message for rpc `BuyBusiness`.
type BuyBusinessResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyBusinessResponse) Reset()         { *m = BuyBusinessResponse{} }
func (m *BuyBusinessResponse) String() string { return proto.CompactTextString(m) }
func (*BuyBusinessResponse) ProtoMessage()    {}
func (*BuyBusinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{16}
}

func (m *BuyBusinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyBusinessResponse.Unmarshal(m, b)
}
func (m *BuyBusinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyBusinessResponse.Marshal(b, m, deterministic)
}
func (m *BuyBusinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyBusinessResponse.Merge(m, src)
}
func (m *BuyBusinessResponse) XXX_Size() int {
	return xxx_messageInfo_BuyBusinessResponse.Size(m)
}
func (m *BuyBusinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyBusinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BuyBusinessResponse proto.InternalMessageInfo

// Request message for rpc `WatchBusiness`.
type WatchBusinessRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchBusinessRequest) Reset()         { *m = WatchBusinessRequest{} }
func (m *WatchBusinessRequest) String() string { return proto.CompactTextString(m) }
func (*WatchBusinessRequest) ProtoMessage()    {}
func (*WatchBusinessRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{17}
}

func (m *WatchBusinessRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchBusinessRequest.Unmarshal(m, b)
}
func (m *WatchBusinessRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchBusinessRequest.Marshal(b, m, deterministic)
}
func (m *WatchBusinessRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchBusinessRequest.Merge(m, src)
}
func (m *WatchBusinessRequest) XXX_Size() int {
	return xxx_messageInfo_WatchBusinessRequest.Size(m)
}
func (m *WatchBusinessRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchBusinessRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchBusinessRequest proto.InternalMessageInfo

// Response message for rpc `WatchBusiness`.
type WatchBusinessResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchBusinessResponse) Reset()         { *m = WatchBusinessResponse{} }
func (m *WatchBusinessResponse) String() string { return proto.CompactTextString(m) }
func (*WatchBusinessResponse) ProtoMessage()    {}
func (*WatchBusinessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{18}
}

func (m *WatchBusinessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchBusinessResponse.Unmarshal(m, b)
}
func (m *WatchBusinessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchBusinessResponse.Marshal(b, m, deterministic)
}
func (m *WatchBusinessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchBusinessResponse.Merge(m, src)
}
func (m *WatchBusinessResponse) XXX_Size() int {
	return xxx_messageInfo_WatchBusinessResponse.Size(m)
}
func (m *WatchBusinessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchBusinessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchBusinessResponse proto.InternalMessageInfo

// Request message for rpc `WatchBusinesses`.
type WatchBusinessesRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchBusinessesRequest) Reset()         { *m = WatchBusinessesRequest{} }
func (m *WatchBusinessesRequest) String() string { return proto.CompactTextString(m) }
func (*WatchBusinessesRequest) ProtoMessage()    {}
func (*WatchBusinessesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{19}
}

func (m *WatchBusinessesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchBusinessesRequest.Unmarshal(m, b)
}
func (m *WatchBusinessesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchBusinessesRequest.Marshal(b, m, deterministic)
}
func (m *WatchBusinessesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchBusinessesRequest.Merge(m, src)
}
func (m *WatchBusinessesRequest) XXX_Size() int {
	return xxx_messageInfo_WatchBusinessesRequest.Size(m)
}
func (m *WatchBusinessesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchBusinessesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WatchBusinessesRequest proto.InternalMessageInfo

// Response message for rpc `WatchBusinesses`.
type WatchBusinessesResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WatchBusinessesResponse) Reset()         { *m = WatchBusinessesResponse{} }
func (m *WatchBusinessesResponse) String() string { return proto.CompactTextString(m) }
func (*WatchBusinessesResponse) ProtoMessage()    {}
func (*WatchBusinessesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd80bc8ec7cfd0f4, []int{20}
}

func (m *WatchBusinessesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WatchBusinessesResponse.Unmarshal(m, b)
}
func (m *WatchBusinessesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WatchBusinessesResponse.Marshal(b, m, deterministic)
}
func (m *WatchBusinessesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WatchBusinessesResponse.Merge(m, src)
}
func (m *WatchBusinessesResponse) XXX_Size() int {
	return xxx_messageInfo_WatchBusinessesResponse.Size(m)
}
func (m *WatchBusinessesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WatchBusinessesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WatchBusinessesResponse proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("mruv.business.OwnerType", OwnerType_name, OwnerType_value)
	proto.RegisterType((*Business)(nil), "mruv.business.Business")
	proto.RegisterType((*CreateBusinessRequest)(nil), "mruv.business.CreateBusinessRequest")
	proto.RegisterType((*CreateBusinessResponse)(nil), "mruv.business.CreateBusinessResponse")
	proto.RegisterType((*GetBusinessRequest)(nil), "mruv.business.GetBusinessRequest")
	proto.RegisterType((*GetBusinessResponse)(nil), "mruv.business.GetBusinessResponse")
	proto.RegisterType((*UpdateBusinessRequest)(nil), "mruv.business.UpdateBusinessRequest")
	proto.RegisterType((*UpdateBusinessResponse)(nil), "mruv.business.UpdateBusinessResponse")
	proto.RegisterType((*DeleteBusinessRequest)(nil), "mruv.business.DeleteBusinessRequest")
	proto.RegisterType((*DeleteBusinessResponse)(nil), "mruv.business.DeleteBusinessResponse")
	proto.RegisterType((*AssignOwnerRequest)(nil), "mruv.business.AssignOwnerRequest")
	proto.RegisterType((*AssignOwnerResponse)(nil), "mruv.business.AssignOwnerResponse")
	proto.RegisterType((*AssignEstateRequest)(nil), "mruv.business.AssignEstateRequest")
	proto.RegisterType((*AssignEstateResponse)(nil), "mruv.business.AssignEstateResponse")
	proto.RegisterType((*UnassignEstateRequest)(nil), "mruv.business.UnassignEstateRequest")
	proto.RegisterType((*UnassignEstateResponse)(nil), "mruv.business.UnassignEstateResponse")
	proto.RegisterType((*BuyBusinessRequest)(nil), "mruv.business.BuyBusinessRequest")
	proto.RegisterType((*BuyBusinessResponse)(nil), "mruv.business.BuyBusinessResponse")
	proto.RegisterType((*WatchBusinessRequest)(nil), "mruv.business.WatchBusinessRequest")
	proto.RegisterType((*WatchBusinessResponse)(nil), "mruv.business.WatchBusinessResponse")
	proto.RegisterType((*WatchBusinessesRequest)(nil), "mruv.business.WatchBusinessesRequest")
	proto.RegisterType((*WatchBusinessesResponse)(nil), "mruv.business.WatchBusinessesResponse")
}

func init() { proto.RegisterFile("business/business.proto", fileDescriptor_cd80bc8ec7cfd0f4) }

var fileDescriptor_cd80bc8ec7cfd0f4 = []byte{
	// 863 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x96, 0x6d, 0x4f, 0xc3, 0x54,
	0x14, 0xc7, 0xe9, 0xc6, 0xc3, 0x7a, 0xc6, 0xea, 0xbc, 0x63, 0x5b, 0x37, 0x25, 0x8c, 0xeb, 0xc0,
	0x65, 0x09, 0x2b, 0x62, 0xa2, 0x31, 0xbc, 0x02, 0x24, 0x64, 0x51, 0x1e, 0xd2, 0x31, 0x09, 0xbe,
	0x70, 0xe9, 0xd6, 0x9b, 0x51, 0xc3, 0xda, 0xda, 0xdb, 0x22, 0x0b, 0xe1, 0x8d, 0x7e, 0x04, 0xe3,
	0x7b, 0x5f, 0xf9, 0x85, 0xfc, 0x0a, 0x7e, 0x10, 0xd3, 0xbb, 0xb6, 0xeb, 0x13, 0x1b, 0x31, 0xfa,
	0xae, 0x3b, 0xfd, 0x9f, 0xf3, 0x3f, 0xf7, 0x9c, 0xdb, 0x1f, 0x40, 0x75, 0xe8, 0x50, 0x4d, 0x27,
	0x94, 0x4a, 0xfe, 0x43, 0xc7, 0xb4, 0x0c, 0xdb, 0x40, 0x85, 0x89, 0xe5, 0x3c, 0x75, 0xfc, 0x60,
	0xfd, 0xe3, 0xb1, 0x61, 0x8c, 0x1f, 0x89, 0xa4, 0x98, 0x9a, 0xa4, 0xe8, 0xba, 0x61, 0x2b, 0xb6,
	0x66, 0xe8, 0x9e, 0x18, 0xff, 0x91, 0x81, 0xdc, 0xa9, 0x27, 0x45, 0x08, 0x56, 0x75, 0x65, 0x42,
	0x44, 0xae, 0xc1, 0xb5, 0x78, 0x99, 0x3d, 0xa3, 0x06, 0xe4, 0x55, 0x42, 0x47, 0x96, 0x66, 0xba,
	0x69, 0x62, 0x86, 0xbd, 0x0a, 0x87, 0xd0, 0x36, 0x00, 0xa1, 0xb6, 0x62, 0x93, 0x81, 0xa6, 0x52,
	0x31, 0xdb, 0xc8, 0xb6, 0xb2, 0x32, 0x3f, 0x8b, 0x74, 0x55, 0xea, 0xbe, 0x36, 0x2d, 0x43, 0x75,
	0x46, 0xf6, 0x40, 0x53, 0xc5, 0xd5, 0x06, 0xd7, 0x2a, 0xc8, 0xbc, 0x17, 0xe9, 0xaa, 0xe8, 0x4b,
	0x00, 0xe3, 0x67, 0x9d, 0x58, 0x03, 0x7b, 0x6a, 0x12, 0x71, 0xad, 0xc1, 0xb5, 0x84, 0x23, 0xb1,
	0x13, 0x39, 0x42, 0xe7, 0xda, 0x15, 0xdc, 0x4e, 0x4d, 0x22, 0xf3, 0x86, 0xff, 0x88, 0x6a, 0x90,
	0x9b, 0x25, 0x6a, 0xaa, 0xb8, 0xce, 0xaa, 0x6e, 0xb0, 0xdf, 0x5d, 0x15, 0xed, 0x81, 0xe0, 0xe7,
	0x0e, 0x34, 0x9b, 0x4c, 0xa8, 0xb8, 0xd1, 0xc8, 0xb6, 0x0a, 0x72, 0xc1, 0x8f, 0x76, 0xdd, 0x60,
	0x44, 0x36, 0xb6, 0x0c, 0xc7, 0x14, 0x73, 0xac, 0x4e, 0x20, 0xbb, 0x70, 0x83, 0xf8, 0x11, 0xca,
	0x67, 0x16, 0x51, 0x6c, 0xe2, 0xcf, 0x49, 0x26, 0x3f, 0x39, 0x84, 0xda, 0xff, 0x7e, 0x5c, 0xa1,
	0x79, 0x64, 0x63, 0xf3, 0xc0, 0x2d, 0xa8, 0xc4, 0xdd, 0xa8, 0x69, 0xe8, 0x94, 0x20, 0x01, 0x32,
	0x9a, 0xca, 0xcc, 0x0a, 0x72, 0x46, 0x53, 0x71, 0x13, 0xd0, 0x05, 0xb1, 0xe3, 0x4d, 0xc5, 0x55,
	0x65, 0x28, 0x45, 0x54, 0xb3, 0x62, 0xf8, 0x53, 0x28, 0xf7, 0x4d, 0x35, 0xe5, 0x50, 0xf1, 0x7c,
	0x11, 0x2a, 0x71, 0xe1, 0xbc, 0xc4, 0xd7, 0xe4, 0x91, 0xbc, 0xab, 0x44, 0x5c, 0xe8, 0x95, 0x68,
	0x02, 0x3a, 0xa1, 0x54, 0x1b, 0xeb, 0x6c, 0xc3, 0x6f, 0xe5, 0x6b, 0x50, 0x8a, 0xa8, 0xbc, 0x79,
	0xfc, 0x0f, 0x37, 0x07, 0xf7, 0x7c, 0xab, 0x73, 0x76, 0x7f, 0xfd, 0x8e, 0x76, 0x20, 0x3f, 0xbf,
	0x50, 0x7e, 0x6b, 0x10, 0xdc, 0x26, 0x15, 0x7d, 0x04, 0x7c, 0xf0, 0x0d, 0xb0, 0xa5, 0x17, 0xe4,
	0x9c, 0xff, 0x09, 0xe0, 0xaf, 0x60, 0x2b, 0x5a, 0xd4, 0x3b, 0xc0, 0x2e, 0x6c, 0x7a, 0x49, 0x23,
	0xc3, 0xd1, 0x6d, 0xaf, 0x6c, 0x7e, 0x16, 0x3b, 0x73, 0x43, 0xb8, 0x0f, 0xe5, 0xbe, 0xae, 0xfc,
	0xe7, 0x1d, 0x1d, 0x43, 0x25, 0x5e, 0xf6, 0xfd, 0x3d, 0x3d, 0x03, 0x3a, 0x75, 0xa6, 0x4b, 0x96,
	0xee, 0x6e, 0x67, 0xe8, 0x4c, 0xdf, 0xbd, 0x1d, 0xa6, 0xf5, 0xb7, 0x33, 0x4b, 0x9c, 0x6f, 0x87,
	0xfd, 0xee, 0xb2, 0xbb, 0x1c, 0x71, 0xf6, 0x6e, 0x51, 0x05, 0xb6, 0xee, 0x14, 0x7b, 0xf4, 0x10,
	0x6b, 0x09, 0x57, 0xa1, 0x1c, 0x8b, 0x7b, 0x09, 0x22, 0x54, 0x22, 0x2f, 0x48, 0x90, 0x52, 0x83,
	0x6a, 0xe2, 0xcd, 0x2c, 0xa9, 0x7d, 0x0c, 0x7c, 0xd0, 0x2f, 0xca, 0xc3, 0x46, 0xff, 0xea, 0x9b,
	0xab, 0xeb, 0xbb, 0xab, 0xe2, 0x0a, 0x02, 0x58, 0xbf, 0xf9, 0xf6, 0xe4, 0xfe, 0x5c, 0x2e, 0x72,
	0x88, 0x87, 0xb5, 0x0b, 0xf9, 0xba, 0x7f, 0x53, 0xcc, 0xb8, 0xe1, 0xde, 0x7d, 0xef, 0xf6, 0xfc,
	0xb2, 0x98, 0x3d, 0xfa, 0x93, 0x87, 0xd2, 0xa5, 0xe5, 0x7c, 0xe7, 0xd7, 0xed, 0x11, 0xeb, 0x49,
	0x1b, 0x11, 0x44, 0x41, 0x88, 0x7e, 0xed, 0xa8, 0x19, 0x9b, 0x51, 0x2a, 0x7a, 0xea, 0x7b, 0x4b,
	0x54, 0xde, 0x41, 0xb7, 0x7e, 0xf9, 0xeb, 0xef, 0xdf, 0x32, 0x02, 0xde, 0x94, 0x9e, 0x3e, 0x0b,
	0xfe, 0x4c, 0x20, 0x15, 0xf2, 0x21, 0x24, 0xa0, 0xdd, 0x58, 0xad, 0x24, 0x54, 0xea, 0xd5, 0x98,
	0xc4, 0x7f, 0x8f, 0x6b, 0xcc, 0xa0, 0x84, 0x3e, 0x0c, 0x1b, 0x48, 0x2f, 0x9a, 0xfa, 0x8a, 0x7e,
	0x04, 0x21, 0x0a, 0x8e, 0xc4, 0xd1, 0x52, 0x01, 0xb4, 0xd4, 0xeb, 0x28, 0xc5, 0xeb, 0x19, 0x84,
	0x28, 0x61, 0x12, 0x5e, 0xa9, 0xa4, 0x4a, 0x8c, 0xf1, 0x0d, 0x4c, 0x79, 0xce, 0xed, 0x14, 0x67,
	0x07, 0xf2, 0x21, 0x36, 0x25, 0x66, 0x99, 0xa4, 0x5b, 0x1d, 0x2f, 0x92, 0x78, 0x86, 0x3b, 0xcc,
	0xb0, 0x86, 0xab, 0x09, 0x43, 0x89, 0x91, 0x0a, 0xfd, 0xca, 0xc1, 0x66, 0x98, 0x29, 0x28, 0xbd,
	0x6a, 0x84, 0x19, 0xf5, 0x4f, 0x16, 0x6a, 0x3c, 0xeb, 0x36, 0xb3, 0x6e, 0x62, 0x1c, 0xb5, 0x0e,
	0xc1, 0xe6, 0x55, 0x9a, 0xd1, 0x80, 0xa2, 0xdf, 0x39, 0x10, 0xa2, 0x1c, 0x49, 0xee, 0x38, 0x8d,
	0x5e, 0x89, 0xb9, 0xa7, 0xc3, 0x08, 0x7f, 0xc1, 0x7a, 0x39, 0x6c, 0x77, 0x96, 0xf7, 0x22, 0xbd,
	0x04, 0xb4, 0x7b, 0x45, 0x14, 0xf2, 0x21, 0x4e, 0x24, 0x96, 0x92, 0xa4, 0x57, 0x62, 0x29, 0x69,
	0x98, 0xd9, 0x66, 0xdd, 0x54, 0x71, 0x39, 0xb9, 0x94, 0xa1, 0x33, 0x45, 0x3f, 0x40, 0x21, 0x82,
	0x0e, 0x14, 0x1f, 0x77, 0x1a, 0xa3, 0xea, 0xcd, 0xc5, 0x22, 0xcf, 0x7a, 0xe5, 0x90, 0x43, 0x2a,
	0x7c, 0x10, 0x43, 0x13, 0xda, 0x5b, 0x94, 0x1c, 0x40, 0xad, 0xbe, 0xbf, 0x4c, 0x36, 0x77, 0x39,
	0x6d, 0x7d, 0xbf, 0x3f, 0xd6, 0xec, 0x07, 0x67, 0xd8, 0x19, 0x19, 0x13, 0xc9, 0x45, 0xd6, 0x81,
	0x7c, 0x23, 0xb9, 0xf9, 0x07, 0xe6, 0xf0, 0x60, 0x6c, 0x04, 0x07, 0x1f, 0xae, 0xb3, 0x7f, 0x20,
	0x3f, 0xff, 0x27, 0x00, 0x00, 0xff, 0xff, 0x6f, 0x42, 0x5f, 0x73, 0x88, 0x0a, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MruVBusinessServiceClient is the client API for MruVBusinessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVBusinessServiceClient interface {
	// Create a business.
	CreateBusiness(ctx context.Context, in *CreateBusinessRequest, opts ...grpc.CallOption) (*CreateBusinessResponse, error)
	// Get a business.
	GetBusiness(ctx context.Context, in *GetBusinessRequest, opts ...grpc.CallOption) (*Business, error)
	// Update a business.
	UpdateBusiness(ctx context.Context, in *UpdateBusinessRequest, opts ...grpc.CallOption) (*Business, error)
	// Delete a business.
	DeleteBusiness(ctx context.Context, in *DeleteBusinessRequest, opts ...grpc.CallOption) (*DeleteBusinessResponse, error)
	// Assign a business owner.
	AssignOwner(ctx context.Context, in *AssignOwnerRequest, opts ...grpc.CallOption) (*AssignOwnerResponse, error)
	// Assign an estate to a business.
	AssignEstate(ctx context.Context, in *AssignEstateRequest, opts ...grpc.CallOption) (*AssignEstateResponse, error)
	//
	UnassignEstate(ctx context.Context, in *UnassignEstateRequest, opts ...grpc.CallOption) (*UnassignEstateResponse, error)
	// Buy a business.
	BuyBusiness(ctx context.Context, in *BuyBusinessRequest, opts ...grpc.CallOption) (*BuyBusinessResponse, error)
	// Subscribe to business events.
	WatchBusiness(ctx context.Context, in *WatchBusinessRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessClient, error)
	// Subscribe to all businesses events.
	WatchBusinesses(ctx context.Context, in *WatchBusinessesRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessesClient, error)
}

type mruVBusinessServiceClient struct {
	cc *grpc.ClientConn
}

func NewMruVBusinessServiceClient(cc *grpc.ClientConn) MruVBusinessServiceClient {
	return &mruVBusinessServiceClient{cc}
}

func (c *mruVBusinessServiceClient) CreateBusiness(ctx context.Context, in *CreateBusinessRequest, opts ...grpc.CallOption) (*CreateBusinessResponse, error) {
	out := new(CreateBusinessResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/CreateBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) GetBusiness(ctx context.Context, in *GetBusinessRequest, opts ...grpc.CallOption) (*Business, error) {
	out := new(Business)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/GetBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) UpdateBusiness(ctx context.Context, in *UpdateBusinessRequest, opts ...grpc.CallOption) (*Business, error) {
	out := new(Business)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/UpdateBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) DeleteBusiness(ctx context.Context, in *DeleteBusinessRequest, opts ...grpc.CallOption) (*DeleteBusinessResponse, error) {
	out := new(DeleteBusinessResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/DeleteBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) AssignOwner(ctx context.Context, in *AssignOwnerRequest, opts ...grpc.CallOption) (*AssignOwnerResponse, error) {
	out := new(AssignOwnerResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/AssignOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) AssignEstate(ctx context.Context, in *AssignEstateRequest, opts ...grpc.CallOption) (*AssignEstateResponse, error) {
	out := new(AssignEstateResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/AssignEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) UnassignEstate(ctx context.Context, in *UnassignEstateRequest, opts ...grpc.CallOption) (*UnassignEstateResponse, error) {
	out := new(UnassignEstateResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/UnassignEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) BuyBusiness(ctx context.Context, in *BuyBusinessRequest, opts ...grpc.CallOption) (*BuyBusinessResponse, error) {
	out := new(BuyBusinessResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/BuyBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) WatchBusiness(ctx context.Context, in *WatchBusinessRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVBusinessService_serviceDesc.Streams[0], "/mruv.business.MruVBusinessService/WatchBusiness", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVBusinessServiceWatchBusinessClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVBusinessService_WatchBusinessClient interface {
	Recv() (*WatchBusinessResponse, error)
	grpc.ClientStream
}

type mruVBusinessServiceWatchBusinessClient struct {
	grpc.ClientStream
}

func (x *mruVBusinessServiceWatchBusinessClient) Recv() (*WatchBusinessResponse, error) {
	m := new(WatchBusinessResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mruVBusinessServiceClient) WatchBusinesses(ctx context.Context, in *WatchBusinessesRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVBusinessService_serviceDesc.Streams[1], "/mruv.business.MruVBusinessService/WatchBusinesses", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVBusinessServiceWatchBusinessesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVBusinessService_WatchBusinessesClient interface {
	Recv() (*WatchBusinessesResponse, error)
	grpc.ClientStream
}

type mruVBusinessServiceWatchBusinessesClient struct {
	grpc.ClientStream
}

func (x *mruVBusinessServiceWatchBusinessesClient) Recv() (*WatchBusinessesResponse, error) {
	m := new(WatchBusinessesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVBusinessServiceServer is the server API for MruVBusinessService service.
type MruVBusinessServiceServer interface {
	// Create a business.
	CreateBusiness(context.Context, *CreateBusinessRequest) (*CreateBusinessResponse, error)
	// Get a business.
	GetBusiness(context.Context, *GetBusinessRequest) (*Business, error)
	// Update a business.
	UpdateBusiness(context.Context, *UpdateBusinessRequest) (*Business, error)
	// Delete a business.
	DeleteBusiness(context.Context, *DeleteBusinessRequest) (*DeleteBusinessResponse, error)
	// Assign a business owner.
	AssignOwner(context.Context, *AssignOwnerRequest) (*AssignOwnerResponse, error)
	// Assign an estate to a business.
	AssignEstate(context.Context, *AssignEstateRequest) (*AssignEstateResponse, error)
	//
	UnassignEstate(context.Context, *UnassignEstateRequest) (*UnassignEstateResponse, error)
	// Buy a business.
	BuyBusiness(context.Context, *BuyBusinessRequest) (*BuyBusinessResponse, error)
	// Subscribe to business events.
	WatchBusiness(*WatchBusinessRequest, MruVBusinessService_WatchBusinessServer) error
	// Subscribe to all businesses events.
	WatchBusinesses(*WatchBusinessesRequest, MruVBusinessService_WatchBusinessesServer) error
}

// UnimplementedMruVBusinessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVBusinessServiceServer struct {
}

func (*UnimplementedMruVBusinessServiceServer) CreateBusiness(ctx context.Context, req *CreateBusinessRequest) (*CreateBusinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) GetBusiness(ctx context.Context, req *GetBusinessRequest) (*Business, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) UpdateBusiness(ctx context.Context, req *UpdateBusinessRequest) (*Business, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) DeleteBusiness(ctx context.Context, req *DeleteBusinessRequest) (*DeleteBusinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) AssignOwner(ctx context.Context, req *AssignOwnerRequest) (*AssignOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignOwner not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) AssignEstate(ctx context.Context, req *AssignEstateRequest) (*AssignEstateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignEstate not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) UnassignEstate(ctx context.Context, req *UnassignEstateRequest) (*UnassignEstateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnassignEstate not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) BuyBusiness(ctx context.Context, req *BuyBusinessRequest) (*BuyBusinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) WatchBusiness(req *WatchBusinessRequest, srv MruVBusinessService_WatchBusinessServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) WatchBusinesses(req *WatchBusinessesRequest, srv MruVBusinessService_WatchBusinessesServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchBusinesses not implemented")
}

func RegisterMruVBusinessServiceServer(s *grpc.Server, srv MruVBusinessServiceServer) {
	s.RegisterService(&_MruVBusinessService_serviceDesc, srv)
}

func _MruVBusinessService_CreateBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).CreateBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/CreateBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).CreateBusiness(ctx, req.(*CreateBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_GetBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).GetBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/GetBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).GetBusiness(ctx, req.(*GetBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_UpdateBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).UpdateBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/UpdateBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).UpdateBusiness(ctx, req.(*UpdateBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_DeleteBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).DeleteBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/DeleteBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).DeleteBusiness(ctx, req.(*DeleteBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_AssignOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).AssignOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/AssignOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).AssignOwner(ctx, req.(*AssignOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_AssignEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).AssignEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/AssignEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).AssignEstate(ctx, req.(*AssignEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_UnassignEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnassignEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).UnassignEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/UnassignEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).UnassignEstate(ctx, req.(*UnassignEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_BuyBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).BuyBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/BuyBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).BuyBusiness(ctx, req.(*BuyBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_WatchBusiness_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchBusinessRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVBusinessServiceServer).WatchBusiness(m, &mruVBusinessServiceWatchBusinessServer{stream})
}

type MruVBusinessService_WatchBusinessServer interface {
	Send(*WatchBusinessResponse) error
	grpc.ServerStream
}

type mruVBusinessServiceWatchBusinessServer struct {
	grpc.ServerStream
}

func (x *mruVBusinessServiceWatchBusinessServer) Send(m *WatchBusinessResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MruVBusinessService_WatchBusinesses_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchBusinessesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVBusinessServiceServer).WatchBusinesses(m, &mruVBusinessServiceWatchBusinessesServer{stream})
}

type MruVBusinessService_WatchBusinessesServer interface {
	Send(*WatchBusinessesResponse) error
	grpc.ServerStream
}

type mruVBusinessServiceWatchBusinessesServer struct {
	grpc.ServerStream
}

func (x *mruVBusinessServiceWatchBusinessesServer) Send(m *WatchBusinessesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVBusinessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.business.MruVBusinessService",
	HandlerType: (*MruVBusinessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBusiness",
			Handler:    _MruVBusinessService_CreateBusiness_Handler,
		},
		{
			MethodName: "GetBusiness",
			Handler:    _MruVBusinessService_GetBusiness_Handler,
		},
		{
			MethodName: "UpdateBusiness",
			Handler:    _MruVBusinessService_UpdateBusiness_Handler,
		},
		{
			MethodName: "DeleteBusiness",
			Handler:    _MruVBusinessService_DeleteBusiness_Handler,
		},
		{
			MethodName: "AssignOwner",
			Handler:    _MruVBusinessService_AssignOwner_Handler,
		},
		{
			MethodName: "AssignEstate",
			Handler:    _MruVBusinessService_AssignEstate_Handler,
		},
		{
			MethodName: "UnassignEstate",
			Handler:    _MruVBusinessService_UnassignEstate_Handler,
		},
		{
			MethodName: "BuyBusiness",
			Handler:    _MruVBusinessService_BuyBusiness_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchBusiness",
			Handler:       _MruVBusinessService_WatchBusiness_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchBusinesses",
			Handler:       _MruVBusinessService_WatchBusinesses_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "business/business.proto",
}
