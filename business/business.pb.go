// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: business/business.proto

package business

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Owner type.
type OwnerType int32

const (
	OwnerType_UNKNOWN OwnerType = 0
	OwnerType_PLAYER  OwnerType = 1
	OwnerType_GROUP   OwnerType = 2
	OwnerType_SYSTEM  OwnerType = 3
)

// Enum value maps for OwnerType.
var (
	OwnerType_name = map[int32]string{
		0: "UNKNOWN",
		1: "PLAYER",
		2: "GROUP",
		3: "SYSTEM",
	}
	OwnerType_value = map[string]int32{
		"UNKNOWN": 0,
		"PLAYER":  1,
		"GROUP":   2,
		"SYSTEM":  3,
	}
)

func (x OwnerType) Enum() *OwnerType {
	p := new(OwnerType)
	*p = x
	return p
}

func (x OwnerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OwnerType) Descriptor() protoreflect.EnumDescriptor {
	return file_business_business_proto_enumTypes[0].Descriptor()
}

func (OwnerType) Type() protoreflect.EnumType {
	return &file_business_business_proto_enumTypes[0]
}

func (x OwnerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OwnerType.Descriptor instead.
func (OwnerType) EnumDescriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{0}
}

// Business data structure.
type Business struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Estates that belongs to a business.
	EstateIds []int64 `protobuf:"varint,3,rep,packed,name=estate_ids,json=estateIds,proto3" json:"estate_ids,omitempty"`
	// Purchase price in economy system.
	ProductId uint32 `protobuf:"varint,4,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	// Owner type of the business.
	OwnerType OwnerType `protobuf:"varint,5,opt,name=owner_type,json=ownerType,proto3,enum=mruv.business.OwnerType" json:"owner_type,omitempty"`
	// Owner of the business.
	OwnerId uint32 `protobuf:"varint,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	// Items that belongs to business.
	BusinessItems []uint32 `protobuf:"varint,7,rep,packed,name=business_items,json=businessItems,proto3" json:"business_items,omitempty"`
	// Business group
	BusinessGroup uint32 `protobuf:"varint,8,opt,name=business_group,json=businessGroup,proto3" json:"business_group,omitempty"`
}

func (x *Business) Reset() {
	*x = Business{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Business) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Business) ProtoMessage() {}

func (x *Business) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Business.ProtoReflect.Descriptor instead.
func (*Business) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{0}
}

func (x *Business) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Business) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Business) GetEstateIds() []int64 {
	if x != nil {
		return x.EstateIds
	}
	return nil
}

func (x *Business) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Business) GetOwnerType() OwnerType {
	if x != nil {
		return x.OwnerType
	}
	return OwnerType_UNKNOWN
}

func (x *Business) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

func (x *Business) GetBusinessItems() []uint32 {
	if x != nil {
		return x.BusinessItems
	}
	return nil
}

func (x *Business) GetBusinessGroup() uint32 {
	if x != nil {
		return x.BusinessGroup
	}
	return 0
}

// Request message for rpc `CreateBusiness`.
type CreateBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Purchase price in economy system.
	ProductId uint32 `protobuf:"varint,3,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *CreateBusinessRequest) Reset() {
	*x = CreateBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessRequest) ProtoMessage() {}

func (x *CreateBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessRequest.ProtoReflect.Descriptor instead.
func (*CreateBusinessRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{1}
}

func (x *CreateBusinessRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateBusinessRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateBusinessRequest) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

// Response message for rpc `CreateBusiness`.
type CreateBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateBusinessResponse) Reset() {
	*x = CreateBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateBusinessResponse) ProtoMessage() {}

func (x *CreateBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateBusinessResponse.ProtoReflect.Descriptor instead.
func (*CreateBusinessResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{2}
}

func (x *CreateBusinessResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `GetBusiness`.
type GetBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetBusinessRequest) Reset() {
	*x = GetBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessRequest) ProtoMessage() {}

func (x *GetBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessRequest.ProtoReflect.Descriptor instead.
func (*GetBusinessRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{3}
}

func (x *GetBusinessRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `GetBusiness`.
type GetBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBusinessResponse) Reset() {
	*x = GetBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBusinessResponse) ProtoMessage() {}

func (x *GetBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBusinessResponse.ProtoReflect.Descriptor instead.
func (*GetBusinessResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{4}
}

// Request message for rpc `UpdateBusiness`.
type UpdateBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateBusinessRequest) Reset() {
	*x = UpdateBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessRequest) ProtoMessage() {}

func (x *UpdateBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessRequest.ProtoReflect.Descriptor instead.
func (*UpdateBusinessRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateBusinessRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `UpdateBusiness`.
type UpdateBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateBusinessResponse) Reset() {
	*x = UpdateBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateBusinessResponse) ProtoMessage() {}

func (x *UpdateBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateBusinessResponse.ProtoReflect.Descriptor instead.
func (*UpdateBusinessResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{6}
}

// Request message for rpc `DeleteBusiness`.
type DeleteBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteBusinessRequest) Reset() {
	*x = DeleteBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessRequest) ProtoMessage() {}

func (x *DeleteBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessRequest.ProtoReflect.Descriptor instead.
func (*DeleteBusinessRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteBusinessRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `DeleteBusiness`.
type DeleteBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteBusinessResponse) Reset() {
	*x = DeleteBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBusinessResponse) ProtoMessage() {}

func (x *DeleteBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBusinessResponse.ProtoReflect.Descriptor instead.
func (*DeleteBusinessResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{8}
}

// Request message for rpc `AssignOwner`.
type AssignOwnerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *AssignOwnerRequest) Reset() {
	*x = AssignOwnerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignOwnerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignOwnerRequest) ProtoMessage() {}

func (x *AssignOwnerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignOwnerRequest.ProtoReflect.Descriptor instead.
func (*AssignOwnerRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{9}
}

func (x *AssignOwnerRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `AssignOwner`.
type AssignOwnerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerType OwnerType `protobuf:"varint,5,opt,name=owner_type,json=ownerType,proto3,enum=mruv.business.OwnerType" json:"owner_type,omitempty"`
	OwnerId   uint32    `protobuf:"varint,6,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
}

func (x *AssignOwnerResponse) Reset() {
	*x = AssignOwnerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignOwnerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignOwnerResponse) ProtoMessage() {}

func (x *AssignOwnerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignOwnerResponse.ProtoReflect.Descriptor instead.
func (*AssignOwnerResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{10}
}

func (x *AssignOwnerResponse) GetOwnerType() OwnerType {
	if x != nil {
		return x.OwnerType
	}
	return OwnerType_UNKNOWN
}

func (x *AssignOwnerResponse) GetOwnerId() uint32 {
	if x != nil {
		return x.OwnerId
	}
	return 0
}

// Request message for rpc `AssignEstate`.
type AssignEstateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId uint32 `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	EstateId   uint32 `protobuf:"varint,2,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
}

func (x *AssignEstateRequest) Reset() {
	*x = AssignEstateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignEstateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignEstateRequest) ProtoMessage() {}

func (x *AssignEstateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignEstateRequest.ProtoReflect.Descriptor instead.
func (*AssignEstateRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{11}
}

func (x *AssignEstateRequest) GetBusinessId() uint32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *AssignEstateRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

// Response message for rpc `AssignEstate`.
type AssignEstateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateCount uint32 `protobuf:"varint,1,opt,name=estate_count,json=estateCount,proto3" json:"estate_count,omitempty"`
}

func (x *AssignEstateResponse) Reset() {
	*x = AssignEstateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignEstateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignEstateResponse) ProtoMessage() {}

func (x *AssignEstateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignEstateResponse.ProtoReflect.Descriptor instead.
func (*AssignEstateResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{12}
}

func (x *AssignEstateResponse) GetEstateCount() uint32 {
	if x != nil {
		return x.EstateCount
	}
	return 0
}

// Request message for rpc `UnassignEstate`.
type UnassignEstateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId uint32 `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`
	EstateId   uint32 `protobuf:"varint,2,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
}

func (x *UnassignEstateRequest) Reset() {
	*x = UnassignEstateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignEstateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignEstateRequest) ProtoMessage() {}

func (x *UnassignEstateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignEstateRequest.ProtoReflect.Descriptor instead.
func (*UnassignEstateRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{13}
}

func (x *UnassignEstateRequest) GetBusinessId() uint32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *UnassignEstateRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

// Response message for rpc `UnassignEstate`.
type UnassignEstateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateCount uint32 `protobuf:"varint,1,opt,name=estate_count,json=estateCount,proto3" json:"estate_count,omitempty"`
}

func (x *UnassignEstateResponse) Reset() {
	*x = UnassignEstateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnassignEstateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnassignEstateResponse) ProtoMessage() {}

func (x *UnassignEstateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnassignEstateResponse.ProtoReflect.Descriptor instead.
func (*UnassignEstateResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{14}
}

func (x *UnassignEstateResponse) GetEstateCount() uint32 {
	if x != nil {
		return x.EstateCount
	}
	return 0
}

// Request message for rpc `BuyBusiness`.
type BuyBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BuyerType OwnerType `protobuf:"varint,5,opt,name=buyer_type,json=buyerType,proto3,enum=mruv.business.OwnerType" json:"buyer_type,omitempty"`
	BuyerId   uint32    `protobuf:"varint,6,opt,name=buyer_id,json=buyerId,proto3" json:"buyer_id,omitempty"`
}

func (x *BuyBusinessRequest) Reset() {
	*x = BuyBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyBusinessRequest) ProtoMessage() {}

func (x *BuyBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyBusinessRequest.ProtoReflect.Descriptor instead.
func (*BuyBusinessRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{15}
}

func (x *BuyBusinessRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuyBusinessRequest) GetBuyerType() OwnerType {
	if x != nil {
		return x.BuyerType
	}
	return OwnerType_UNKNOWN
}

func (x *BuyBusinessRequest) GetBuyerId() uint32 {
	if x != nil {
		return x.BuyerId
	}
	return 0
}

// Response message for rpc `BuyBusiness`.
type BuyBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BuyBusinessResponse) Reset() {
	*x = BuyBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyBusinessResponse) ProtoMessage() {}

func (x *BuyBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyBusinessResponse.ProtoReflect.Descriptor instead.
func (*BuyBusinessResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{16}
}

// Request message for rpc `WatchBusiness`.
type WatchBusinessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchBusinessRequest) Reset() {
	*x = WatchBusinessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBusinessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBusinessRequest) ProtoMessage() {}

func (x *WatchBusinessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBusinessRequest.ProtoReflect.Descriptor instead.
func (*WatchBusinessRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{17}
}

// Response message for rpc `WatchBusiness`.
type WatchBusinessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchBusinessResponse) Reset() {
	*x = WatchBusinessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBusinessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBusinessResponse) ProtoMessage() {}

func (x *WatchBusinessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBusinessResponse.ProtoReflect.Descriptor instead.
func (*WatchBusinessResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{18}
}

// Request message for rpc `WatchBusinesses`.
type WatchBusinessesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchBusinessesRequest) Reset() {
	*x = WatchBusinessesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBusinessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBusinessesRequest) ProtoMessage() {}

func (x *WatchBusinessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBusinessesRequest.ProtoReflect.Descriptor instead.
func (*WatchBusinessesRequest) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{19}
}

// Response message for rpc `WatchBusinesses`.
type WatchBusinessesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WatchBusinessesResponse) Reset() {
	*x = WatchBusinessesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_business_business_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchBusinessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchBusinessesResponse) ProtoMessage() {}

func (x *WatchBusinessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_business_business_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchBusinessesResponse.ProtoReflect.Descriptor instead.
func (*WatchBusinessesResponse) Descriptor() ([]byte, []int) {
	return file_business_business_proto_rawDescGZIP(), []int{20}
}

var File_business_business_proto protoreflect.FileDescriptor

var file_business_business_proto_rawDesc = []byte{
	0x0a, 0x17, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x08, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x03, 0x52, 0x09, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x22, 0x6c, 0x0a, 0x15, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27,
	0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x77,
	0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x13, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x13, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x14, 0x41, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x55, 0x0a, 0x15, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x16,
	0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x78, 0x0a, 0x12, 0x42, 0x75, 0x79,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x37, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x62,
	0x75, 0x79, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x42, 0x75, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x0a, 0x16, 0x57,
	0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x19, 0x0a, 0x17, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2a, 0x3b, 0x0a, 0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4c,
	0x41, 0x59, 0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x47, 0x52, 0x4f, 0x55, 0x50, 0x10,
	0x02, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x59, 0x53, 0x54, 0x45, 0x4d, 0x10, 0x03, 0x32, 0xa6, 0x09,
	0x0a, 0x13, 0x4d, 0x72, 0x75, 0x56, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22, 0x0c, 0x2f, 0x76,
	0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x64, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f,
	0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x6a, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x12, 0x24, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x32, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x78, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x24,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x75, 0x0a, 0x0b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x77, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x19, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x83, 0x01,
	0x0a, 0x0c, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x22,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x41,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24, 0x22,
	0x22, 0x2f, 0x76, 0x31, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x7b, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x12, 0x95, 0x01, 0x0a, 0x0e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x24, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x6e, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x55, 0x6e, 0x61,
	0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x30, 0x2a, 0x2e, 0x2f, 0x76, 0x31,
	0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x7b, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f,
	0x7b, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x73, 0x0a, 0x0b, 0x42,
	0x75, 0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x21, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x42, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x42, 0x75,
	0x79, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x75, 0x79,
	0x12, 0x5e, 0x0a, 0x0d, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x12, 0x23, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01,
	0x12, 0x64, 0x0a, 0x0f, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x42, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x72, 0x75, 0x56, 0x2d, 0x52, 0x50, 0x2f, 0x6d, 0x72, 0x75,
	0x76, 0x2d, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_business_business_proto_rawDescOnce sync.Once
	file_business_business_proto_rawDescData = file_business_business_proto_rawDesc
)

func file_business_business_proto_rawDescGZIP() []byte {
	file_business_business_proto_rawDescOnce.Do(func() {
		file_business_business_proto_rawDescData = protoimpl.X.CompressGZIP(file_business_business_proto_rawDescData)
	})
	return file_business_business_proto_rawDescData
}

var file_business_business_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_business_business_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_business_business_proto_goTypes = []interface{}{
	(OwnerType)(0),                  // 0: mruv.business.OwnerType
	(*Business)(nil),                // 1: mruv.business.Business
	(*CreateBusinessRequest)(nil),   // 2: mruv.business.CreateBusinessRequest
	(*CreateBusinessResponse)(nil),  // 3: mruv.business.CreateBusinessResponse
	(*GetBusinessRequest)(nil),      // 4: mruv.business.GetBusinessRequest
	(*GetBusinessResponse)(nil),     // 5: mruv.business.GetBusinessResponse
	(*UpdateBusinessRequest)(nil),   // 6: mruv.business.UpdateBusinessRequest
	(*UpdateBusinessResponse)(nil),  // 7: mruv.business.UpdateBusinessResponse
	(*DeleteBusinessRequest)(nil),   // 8: mruv.business.DeleteBusinessRequest
	(*DeleteBusinessResponse)(nil),  // 9: mruv.business.DeleteBusinessResponse
	(*AssignOwnerRequest)(nil),      // 10: mruv.business.AssignOwnerRequest
	(*AssignOwnerResponse)(nil),     // 11: mruv.business.AssignOwnerResponse
	(*AssignEstateRequest)(nil),     // 12: mruv.business.AssignEstateRequest
	(*AssignEstateResponse)(nil),    // 13: mruv.business.AssignEstateResponse
	(*UnassignEstateRequest)(nil),   // 14: mruv.business.UnassignEstateRequest
	(*UnassignEstateResponse)(nil),  // 15: mruv.business.UnassignEstateResponse
	(*BuyBusinessRequest)(nil),      // 16: mruv.business.BuyBusinessRequest
	(*BuyBusinessResponse)(nil),     // 17: mruv.business.BuyBusinessResponse
	(*WatchBusinessRequest)(nil),    // 18: mruv.business.WatchBusinessRequest
	(*WatchBusinessResponse)(nil),   // 19: mruv.business.WatchBusinessResponse
	(*WatchBusinessesRequest)(nil),  // 20: mruv.business.WatchBusinessesRequest
	(*WatchBusinessesResponse)(nil), // 21: mruv.business.WatchBusinessesResponse
}
var file_business_business_proto_depIdxs = []int32{
	0,  // 0: mruv.business.Business.owner_type:type_name -> mruv.business.OwnerType
	0,  // 1: mruv.business.AssignOwnerResponse.owner_type:type_name -> mruv.business.OwnerType
	0,  // 2: mruv.business.BuyBusinessRequest.buyer_type:type_name -> mruv.business.OwnerType
	2,  // 3: mruv.business.MruVBusinessService.CreateBusiness:input_type -> mruv.business.CreateBusinessRequest
	4,  // 4: mruv.business.MruVBusinessService.GetBusiness:input_type -> mruv.business.GetBusinessRequest
	6,  // 5: mruv.business.MruVBusinessService.UpdateBusiness:input_type -> mruv.business.UpdateBusinessRequest
	8,  // 6: mruv.business.MruVBusinessService.DeleteBusiness:input_type -> mruv.business.DeleteBusinessRequest
	10, // 7: mruv.business.MruVBusinessService.AssignOwner:input_type -> mruv.business.AssignOwnerRequest
	12, // 8: mruv.business.MruVBusinessService.AssignEstate:input_type -> mruv.business.AssignEstateRequest
	14, // 9: mruv.business.MruVBusinessService.UnassignEstate:input_type -> mruv.business.UnassignEstateRequest
	16, // 10: mruv.business.MruVBusinessService.BuyBusiness:input_type -> mruv.business.BuyBusinessRequest
	18, // 11: mruv.business.MruVBusinessService.WatchBusiness:input_type -> mruv.business.WatchBusinessRequest
	20, // 12: mruv.business.MruVBusinessService.WatchBusinesses:input_type -> mruv.business.WatchBusinessesRequest
	3,  // 13: mruv.business.MruVBusinessService.CreateBusiness:output_type -> mruv.business.CreateBusinessResponse
	1,  // 14: mruv.business.MruVBusinessService.GetBusiness:output_type -> mruv.business.Business
	1,  // 15: mruv.business.MruVBusinessService.UpdateBusiness:output_type -> mruv.business.Business
	9,  // 16: mruv.business.MruVBusinessService.DeleteBusiness:output_type -> mruv.business.DeleteBusinessResponse
	11, // 17: mruv.business.MruVBusinessService.AssignOwner:output_type -> mruv.business.AssignOwnerResponse
	13, // 18: mruv.business.MruVBusinessService.AssignEstate:output_type -> mruv.business.AssignEstateResponse
	15, // 19: mruv.business.MruVBusinessService.UnassignEstate:output_type -> mruv.business.UnassignEstateResponse
	17, // 20: mruv.business.MruVBusinessService.BuyBusiness:output_type -> mruv.business.BuyBusinessResponse
	19, // 21: mruv.business.MruVBusinessService.WatchBusiness:output_type -> mruv.business.WatchBusinessResponse
	21, // 22: mruv.business.MruVBusinessService.WatchBusinesses:output_type -> mruv.business.WatchBusinessesResponse
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_business_business_proto_init() }
func file_business_business_proto_init() {
	if File_business_business_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_business_business_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Business); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignOwnerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignOwnerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignEstateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignEstateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignEstateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnassignEstateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBusinessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBusinessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBusinessesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_business_business_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchBusinessesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_business_business_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_business_business_proto_goTypes,
		DependencyIndexes: file_business_business_proto_depIdxs,
		EnumInfos:         file_business_business_proto_enumTypes,
		MessageInfos:      file_business_business_proto_msgTypes,
	}.Build()
	File_business_business_proto = out.File
	file_business_business_proto_rawDesc = nil
	file_business_business_proto_goTypes = nil
	file_business_business_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MruVBusinessServiceClient is the client API for MruVBusinessService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVBusinessServiceClient interface {
	// Create a business.
	CreateBusiness(ctx context.Context, in *CreateBusinessRequest, opts ...grpc.CallOption) (*CreateBusinessResponse, error)
	// Get a business.
	GetBusiness(ctx context.Context, in *GetBusinessRequest, opts ...grpc.CallOption) (*Business, error)
	// Update a business.
	UpdateBusiness(ctx context.Context, in *UpdateBusinessRequest, opts ...grpc.CallOption) (*Business, error)
	// Delete a business.
	DeleteBusiness(ctx context.Context, in *DeleteBusinessRequest, opts ...grpc.CallOption) (*DeleteBusinessResponse, error)
	// Assign a business owner.
	AssignOwner(ctx context.Context, in *AssignOwnerRequest, opts ...grpc.CallOption) (*AssignOwnerResponse, error)
	// Assign an estate to a business.
	AssignEstate(ctx context.Context, in *AssignEstateRequest, opts ...grpc.CallOption) (*AssignEstateResponse, error)
	//
	UnassignEstate(ctx context.Context, in *UnassignEstateRequest, opts ...grpc.CallOption) (*UnassignEstateResponse, error)
	// Buy a business.
	BuyBusiness(ctx context.Context, in *BuyBusinessRequest, opts ...grpc.CallOption) (*BuyBusinessResponse, error)
	// Subscribe to business events.
	WatchBusiness(ctx context.Context, in *WatchBusinessRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessClient, error)
	// Subscribe to all businesses events.
	WatchBusinesses(ctx context.Context, in *WatchBusinessesRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessesClient, error)
}

type mruVBusinessServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMruVBusinessServiceClient(cc grpc.ClientConnInterface) MruVBusinessServiceClient {
	return &mruVBusinessServiceClient{cc}
}

func (c *mruVBusinessServiceClient) CreateBusiness(ctx context.Context, in *CreateBusinessRequest, opts ...grpc.CallOption) (*CreateBusinessResponse, error) {
	out := new(CreateBusinessResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/CreateBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) GetBusiness(ctx context.Context, in *GetBusinessRequest, opts ...grpc.CallOption) (*Business, error) {
	out := new(Business)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/GetBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) UpdateBusiness(ctx context.Context, in *UpdateBusinessRequest, opts ...grpc.CallOption) (*Business, error) {
	out := new(Business)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/UpdateBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) DeleteBusiness(ctx context.Context, in *DeleteBusinessRequest, opts ...grpc.CallOption) (*DeleteBusinessResponse, error) {
	out := new(DeleteBusinessResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/DeleteBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) AssignOwner(ctx context.Context, in *AssignOwnerRequest, opts ...grpc.CallOption) (*AssignOwnerResponse, error) {
	out := new(AssignOwnerResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/AssignOwner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) AssignEstate(ctx context.Context, in *AssignEstateRequest, opts ...grpc.CallOption) (*AssignEstateResponse, error) {
	out := new(AssignEstateResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/AssignEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) UnassignEstate(ctx context.Context, in *UnassignEstateRequest, opts ...grpc.CallOption) (*UnassignEstateResponse, error) {
	out := new(UnassignEstateResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/UnassignEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) BuyBusiness(ctx context.Context, in *BuyBusinessRequest, opts ...grpc.CallOption) (*BuyBusinessResponse, error) {
	out := new(BuyBusinessResponse)
	err := c.cc.Invoke(ctx, "/mruv.business.MruVBusinessService/BuyBusiness", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVBusinessServiceClient) WatchBusiness(ctx context.Context, in *WatchBusinessRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVBusinessService_serviceDesc.Streams[0], "/mruv.business.MruVBusinessService/WatchBusiness", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVBusinessServiceWatchBusinessClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVBusinessService_WatchBusinessClient interface {
	Recv() (*WatchBusinessResponse, error)
	grpc.ClientStream
}

type mruVBusinessServiceWatchBusinessClient struct {
	grpc.ClientStream
}

func (x *mruVBusinessServiceWatchBusinessClient) Recv() (*WatchBusinessResponse, error) {
	m := new(WatchBusinessResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mruVBusinessServiceClient) WatchBusinesses(ctx context.Context, in *WatchBusinessesRequest, opts ...grpc.CallOption) (MruVBusinessService_WatchBusinessesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVBusinessService_serviceDesc.Streams[1], "/mruv.business.MruVBusinessService/WatchBusinesses", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVBusinessServiceWatchBusinessesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVBusinessService_WatchBusinessesClient interface {
	Recv() (*WatchBusinessesResponse, error)
	grpc.ClientStream
}

type mruVBusinessServiceWatchBusinessesClient struct {
	grpc.ClientStream
}

func (x *mruVBusinessServiceWatchBusinessesClient) Recv() (*WatchBusinessesResponse, error) {
	m := new(WatchBusinessesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVBusinessServiceServer is the server API for MruVBusinessService service.
type MruVBusinessServiceServer interface {
	// Create a business.
	CreateBusiness(context.Context, *CreateBusinessRequest) (*CreateBusinessResponse, error)
	// Get a business.
	GetBusiness(context.Context, *GetBusinessRequest) (*Business, error)
	// Update a business.
	UpdateBusiness(context.Context, *UpdateBusinessRequest) (*Business, error)
	// Delete a business.
	DeleteBusiness(context.Context, *DeleteBusinessRequest) (*DeleteBusinessResponse, error)
	// Assign a business owner.
	AssignOwner(context.Context, *AssignOwnerRequest) (*AssignOwnerResponse, error)
	// Assign an estate to a business.
	AssignEstate(context.Context, *AssignEstateRequest) (*AssignEstateResponse, error)
	//
	UnassignEstate(context.Context, *UnassignEstateRequest) (*UnassignEstateResponse, error)
	// Buy a business.
	BuyBusiness(context.Context, *BuyBusinessRequest) (*BuyBusinessResponse, error)
	// Subscribe to business events.
	WatchBusiness(*WatchBusinessRequest, MruVBusinessService_WatchBusinessServer) error
	// Subscribe to all businesses events.
	WatchBusinesses(*WatchBusinessesRequest, MruVBusinessService_WatchBusinessesServer) error
}

// UnimplementedMruVBusinessServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVBusinessServiceServer struct {
}

func (*UnimplementedMruVBusinessServiceServer) CreateBusiness(context.Context, *CreateBusinessRequest) (*CreateBusinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) GetBusiness(context.Context, *GetBusinessRequest) (*Business, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) UpdateBusiness(context.Context, *UpdateBusinessRequest) (*Business, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) DeleteBusiness(context.Context, *DeleteBusinessRequest) (*DeleteBusinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) AssignOwner(context.Context, *AssignOwnerRequest) (*AssignOwnerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignOwner not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) AssignEstate(context.Context, *AssignEstateRequest) (*AssignEstateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AssignEstate not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) UnassignEstate(context.Context, *UnassignEstateRequest) (*UnassignEstateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnassignEstate not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) BuyBusiness(context.Context, *BuyBusinessRequest) (*BuyBusinessResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) WatchBusiness(*WatchBusinessRequest, MruVBusinessService_WatchBusinessServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchBusiness not implemented")
}
func (*UnimplementedMruVBusinessServiceServer) WatchBusinesses(*WatchBusinessesRequest, MruVBusinessService_WatchBusinessesServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchBusinesses not implemented")
}

func RegisterMruVBusinessServiceServer(s *grpc.Server, srv MruVBusinessServiceServer) {
	s.RegisterService(&_MruVBusinessService_serviceDesc, srv)
}

func _MruVBusinessService_CreateBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).CreateBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/CreateBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).CreateBusiness(ctx, req.(*CreateBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_GetBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).GetBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/GetBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).GetBusiness(ctx, req.(*GetBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_UpdateBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).UpdateBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/UpdateBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).UpdateBusiness(ctx, req.(*UpdateBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_DeleteBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).DeleteBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/DeleteBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).DeleteBusiness(ctx, req.(*DeleteBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_AssignOwner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignOwnerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).AssignOwner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/AssignOwner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).AssignOwner(ctx, req.(*AssignOwnerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_AssignEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AssignEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).AssignEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/AssignEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).AssignEstate(ctx, req.(*AssignEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_UnassignEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnassignEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).UnassignEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/UnassignEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).UnassignEstate(ctx, req.(*UnassignEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_BuyBusiness_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyBusinessRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVBusinessServiceServer).BuyBusiness(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.business.MruVBusinessService/BuyBusiness",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVBusinessServiceServer).BuyBusiness(ctx, req.(*BuyBusinessRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVBusinessService_WatchBusiness_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchBusinessRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVBusinessServiceServer).WatchBusiness(m, &mruVBusinessServiceWatchBusinessServer{stream})
}

type MruVBusinessService_WatchBusinessServer interface {
	Send(*WatchBusinessResponse) error
	grpc.ServerStream
}

type mruVBusinessServiceWatchBusinessServer struct {
	grpc.ServerStream
}

func (x *mruVBusinessServiceWatchBusinessServer) Send(m *WatchBusinessResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MruVBusinessService_WatchBusinesses_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchBusinessesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVBusinessServiceServer).WatchBusinesses(m, &mruVBusinessServiceWatchBusinessesServer{stream})
}

type MruVBusinessService_WatchBusinessesServer interface {
	Send(*WatchBusinessesResponse) error
	grpc.ServerStream
}

type mruVBusinessServiceWatchBusinessesServer struct {
	grpc.ServerStream
}

func (x *mruVBusinessServiceWatchBusinessesServer) Send(m *WatchBusinessesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVBusinessService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.business.MruVBusinessService",
	HandlerType: (*MruVBusinessServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateBusiness",
			Handler:    _MruVBusinessService_CreateBusiness_Handler,
		},
		{
			MethodName: "GetBusiness",
			Handler:    _MruVBusinessService_GetBusiness_Handler,
		},
		{
			MethodName: "UpdateBusiness",
			Handler:    _MruVBusinessService_UpdateBusiness_Handler,
		},
		{
			MethodName: "DeleteBusiness",
			Handler:    _MruVBusinessService_DeleteBusiness_Handler,
		},
		{
			MethodName: "AssignOwner",
			Handler:    _MruVBusinessService_AssignOwner_Handler,
		},
		{
			MethodName: "AssignEstate",
			Handler:    _MruVBusinessService_AssignEstate_Handler,
		},
		{
			MethodName: "UnassignEstate",
			Handler:    _MruVBusinessService_UnassignEstate_Handler,
		},
		{
			MethodName: "BuyBusiness",
			Handler:    _MruVBusinessService_BuyBusiness_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchBusiness",
			Handler:       _MruVBusinessService_WatchBusiness_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchBusinesses",
			Handler:       _MruVBusinessService_WatchBusinesses_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "business/business.proto",
}
