// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: estates/estates.proto

package estates

import (
	context "context"
	entrances "github.com/MruV-RP/mruv-pb-go/entrances"
	gates "github.com/MruV-RP/mruv-pb-go/gates"
	objects "github.com/MruV-RP/mruv-pb-go/objects"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Estate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Entrances   []uint32 `protobuf:"varint,4,rep,packed,name=entrances,proto3" json:"entrances,omitempty"`
	Gates       []uint32 `protobuf:"varint,5,rep,packed,name=gates,proto3" json:"gates,omitempty"`
	Rooms       []uint32 `protobuf:"varint,6,rep,packed,name=rooms,proto3" json:"rooms,omitempty"`
	ProductId   uint32   `protobuf:"varint,7,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *Estate) Reset() {
	*x = Estate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Estate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Estate) ProtoMessage() {}

func (x *Estate) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Estate.ProtoReflect.Descriptor instead.
func (*Estate) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{0}
}

func (x *Estate) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Estate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Estate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Estate) GetEntrances() []uint32 {
	if x != nil {
		return x.Entrances
	}
	return nil
}

func (x *Estate) GetGates() []uint32 {
	if x != nil {
		return x.Gates
	}
	return nil
}

func (x *Estate) GetRooms() []uint32 {
	if x != nil {
		return x.Rooms
	}
	return nil
}

func (x *Estate) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type FullEstate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32                              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description      string                              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Objects          map[uint32]*objects.Object          `protobuf:"bytes,4,rep,name=objects,proto3" json:"objects,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RemovedBuildings map[uint32]*objects.RemovedBuilding `protobuf:"bytes,5,rep,name=removed_buildings,json=removedBuildings,proto3" json:"removed_buildings,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Entrances        map[uint32]*entrances.Entrance      `protobuf:"bytes,6,rep,name=entrances,proto3" json:"entrances,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Gates            map[uint32]*gates.Gate              `protobuf:"bytes,7,rep,name=gates,proto3" json:"gates,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // TODO: map<uint32, mruv.plots.Plot> rooms = 8;
}

func (x *FullEstate) Reset() {
	*x = FullEstate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FullEstate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullEstate) ProtoMessage() {}

func (x *FullEstate) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullEstate.ProtoReflect.Descriptor instead.
func (*FullEstate) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{1}
}

func (x *FullEstate) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FullEstate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FullEstate) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FullEstate) GetObjects() map[uint32]*objects.Object {
	if x != nil {
		return x.Objects
	}
	return nil
}

func (x *FullEstate) GetRemovedBuildings() map[uint32]*objects.RemovedBuilding {
	if x != nil {
		return x.RemovedBuildings
	}
	return nil
}

func (x *FullEstate) GetEntrances() map[uint32]*entrances.Entrance {
	if x != nil {
		return x.Entrances
	}
	return nil
}

func (x *FullEstate) GetGates() map[uint32]*gates.Gate {
	if x != nil {
		return x.Gates
	}
	return nil
}

// Request message for rpc `CreateEstate`.
type CreateEstateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *CreateEstateRequest) Reset() {
	*x = CreateEstateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEstateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEstateRequest) ProtoMessage() {}

func (x *CreateEstateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEstateRequest.ProtoReflect.Descriptor instead.
func (*CreateEstateRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEstateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEstateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Response message for rpc `CreateEstate`.
type CreateEstateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateEstateResponse) Reset() {
	*x = CreateEstateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEstateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEstateResponse) ProtoMessage() {}

func (x *CreateEstateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEstateResponse.ProtoReflect.Descriptor instead.
func (*CreateEstateResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{3}
}

func (x *CreateEstateResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `GetEstate`.
type GetEstateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEstateRequest) Reset() {
	*x = GetEstateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstateRequest) ProtoMessage() {}

func (x *GetEstateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstateRequest.ProtoReflect.Descriptor instead.
func (*GetEstateRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{4}
}

func (x *GetEstateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `UpdateEstate`.
type UpdateEstateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *UpdateEstateRequest) Reset() {
	*x = UpdateEstateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEstateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEstateRequest) ProtoMessage() {}

func (x *UpdateEstateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEstateRequest.ProtoReflect.Descriptor instead.
func (*UpdateEstateRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEstateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateEstateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateEstateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// Response message for rpc `UpdateEstate`.
type UpdateEstateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEstateResponse) Reset() {
	*x = UpdateEstateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEstateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEstateResponse) ProtoMessage() {}

func (x *UpdateEstateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEstateResponse.ProtoReflect.Descriptor instead.
func (*UpdateEstateResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{6}
}

// Request message for rpc `DeleteEstate`.
type DeleteEstateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEstateRequest) Reset() {
	*x = DeleteEstateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEstateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEstateRequest) ProtoMessage() {}

func (x *DeleteEstateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEstateRequest.ProtoReflect.Descriptor instead.
func (*DeleteEstateRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEstateRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `DeleteEstate`.
type DeleteEstateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEstateResponse) Reset() {
	*x = DeleteEstateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEstateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEstateResponse) ProtoMessage() {}

func (x *DeleteEstateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEstateResponse.ProtoReflect.Descriptor instead.
func (*DeleteEstateResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{8}
}

// Request message for rpc `GetEstates`.
type GetEstatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From  uint32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Limit uint32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetEstatesRequest) Reset() {
	*x = GetEstatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstatesRequest) ProtoMessage() {}

func (x *GetEstatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstatesRequest.ProtoReflect.Descriptor instead.
func (*GetEstatesRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{9}
}

func (x *GetEstatesRequest) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetEstatesRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Response message for rpc `GetEstates`.
type GetEstatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Estates []*Estate `protobuf:"bytes,1,rep,name=estates,proto3" json:"estates,omitempty"`
}

func (x *GetEstatesResponse) Reset() {
	*x = GetEstatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstatesResponse) ProtoMessage() {}

func (x *GetEstatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstatesResponse.ProtoReflect.Descriptor instead.
func (*GetEstatesResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{10}
}

func (x *GetEstatesResponse) GetEstates() []*Estate {
	if x != nil {
		return x.Estates
	}
	return nil
}

// Request message for rpc `AddGate`.
type AddGateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId uint32 `protobuf:"varint,1,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
	GateId   uint32 `protobuf:"varint,2,opt,name=gate_id,json=gateId,proto3" json:"gate_id,omitempty"`
}

func (x *AddGateRequest) Reset() {
	*x = AddGateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGateRequest) ProtoMessage() {}

func (x *AddGateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGateRequest.ProtoReflect.Descriptor instead.
func (*AddGateRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{11}
}

func (x *AddGateRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

func (x *AddGateRequest) GetGateId() uint32 {
	if x != nil {
		return x.GateId
	}
	return 0
}

// Response message for rpc `AddGate`.
type AddGateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddGateResponse) Reset() {
	*x = AddGateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddGateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddGateResponse) ProtoMessage() {}

func (x *AddGateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddGateResponse.ProtoReflect.Descriptor instead.
func (*AddGateResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{12}
}

// Request message for rpc `RemoveGate`.
type RemoveGateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId uint32 `protobuf:"varint,1,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
	GateId   uint32 `protobuf:"varint,2,opt,name=gate_id,json=gateId,proto3" json:"gate_id,omitempty"`
}

func (x *RemoveGateRequest) Reset() {
	*x = RemoveGateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGateRequest) ProtoMessage() {}

func (x *RemoveGateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGateRequest.ProtoReflect.Descriptor instead.
func (*RemoveGateRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveGateRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

func (x *RemoveGateRequest) GetGateId() uint32 {
	if x != nil {
		return x.GateId
	}
	return 0
}

// Response message for rpc `RemoveGate`.
type RemoveGateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveGateResponse) Reset() {
	*x = RemoveGateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveGateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveGateResponse) ProtoMessage() {}

func (x *RemoveGateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveGateResponse.ProtoReflect.Descriptor instead.
func (*RemoveGateResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{14}
}

// Request message for rpc `GetEstateGates`.
type GetEstateGatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId uint32 `protobuf:"varint,1,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
}

func (x *GetEstateGatesRequest) Reset() {
	*x = GetEstateGatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstateGatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstateGatesRequest) ProtoMessage() {}

func (x *GetEstateGatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstateGatesRequest.ProtoReflect.Descriptor instead.
func (*GetEstateGatesRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{15}
}

func (x *GetEstateGatesRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

// Response message for rpc `GetEstateGates`.
type GetEstateGatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Gates []*gates.Gate `protobuf:"bytes,1,rep,name=gates,proto3" json:"gates,omitempty"`
}

func (x *GetEstateGatesResponse) Reset() {
	*x = GetEstateGatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstateGatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstateGatesResponse) ProtoMessage() {}

func (x *GetEstateGatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstateGatesResponse.ProtoReflect.Descriptor instead.
func (*GetEstateGatesResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{16}
}

func (x *GetEstateGatesResponse) GetGates() []*gates.Gate {
	if x != nil {
		return x.Gates
	}
	return nil
}

// Request message for rpc `AddEntrance`.
type AddEntranceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId   uint32 `protobuf:"varint,1,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
	EntranceId uint32 `protobuf:"varint,2,opt,name=entrance_id,json=entranceId,proto3" json:"entrance_id,omitempty"`
}

func (x *AddEntranceRequest) Reset() {
	*x = AddEntranceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEntranceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntranceRequest) ProtoMessage() {}

func (x *AddEntranceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntranceRequest.ProtoReflect.Descriptor instead.
func (*AddEntranceRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{17}
}

func (x *AddEntranceRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

func (x *AddEntranceRequest) GetEntranceId() uint32 {
	if x != nil {
		return x.EntranceId
	}
	return 0
}

// Response message for rpc `AddEntrance`.
type AddEntranceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AddEntranceResponse) Reset() {
	*x = AddEntranceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEntranceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEntranceResponse) ProtoMessage() {}

func (x *AddEntranceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEntranceResponse.ProtoReflect.Descriptor instead.
func (*AddEntranceResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{18}
}

// Request message for rpc `RemoveEntrance`.
type RemoveEntranceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId   uint32 `protobuf:"varint,1,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
	EntranceId uint32 `protobuf:"varint,2,opt,name=entrance_id,json=entranceId,proto3" json:"entrance_id,omitempty"`
}

func (x *RemoveEntranceRequest) Reset() {
	*x = RemoveEntranceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEntranceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEntranceRequest) ProtoMessage() {}

func (x *RemoveEntranceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEntranceRequest.ProtoReflect.Descriptor instead.
func (*RemoveEntranceRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{19}
}

func (x *RemoveEntranceRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

func (x *RemoveEntranceRequest) GetEntranceId() uint32 {
	if x != nil {
		return x.EntranceId
	}
	return 0
}

// Response message for rpc `RemoveEntrance`.
type RemoveEntranceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RemoveEntranceResponse) Reset() {
	*x = RemoveEntranceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEntranceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEntranceResponse) ProtoMessage() {}

func (x *RemoveEntranceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEntranceResponse.ProtoReflect.Descriptor instead.
func (*RemoveEntranceResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{20}
}

// Request message for rpc `GetEstateEntrances`.
type GetEstateEntrancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EstateId uint32 `protobuf:"varint,1,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
}

func (x *GetEstateEntrancesRequest) Reset() {
	*x = GetEstateEntrancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstateEntrancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstateEntrancesRequest) ProtoMessage() {}

func (x *GetEstateEntrancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstateEntrancesRequest.ProtoReflect.Descriptor instead.
func (*GetEstateEntrancesRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{21}
}

func (x *GetEstateEntrancesRequest) GetEstateId() uint32 {
	if x != nil {
		return x.EstateId
	}
	return 0
}

// Response message for rpc `GetEstateEntrances`.
type GetEstateEntrancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entrances []*entrances.Entrance `protobuf:"bytes,1,rep,name=entrances,proto3" json:"entrances,omitempty"`
}

func (x *GetEstateEntrancesResponse) Reset() {
	*x = GetEstateEntrancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEstateEntrancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEstateEntrancesResponse) ProtoMessage() {}

func (x *GetEstateEntrancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEstateEntrancesResponse.ProtoReflect.Descriptor instead.
func (*GetEstateEntrancesResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{22}
}

func (x *GetEstateEntrancesResponse) GetEntrances() []*entrances.Entrance {
	if x != nil {
		return x.Entrances
	}
	return nil
}

// Request message for rpc `FetchAll`.
type FetchAllEstatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkSize uint32 `protobuf:"varint,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
}

func (x *FetchAllEstatesRequest) Reset() {
	*x = FetchAllEstatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllEstatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllEstatesRequest) ProtoMessage() {}

func (x *FetchAllEstatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllEstatesRequest.ProtoReflect.Descriptor instead.
func (*FetchAllEstatesRequest) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{23}
}

func (x *FetchAllEstatesRequest) GetChunkSize() uint32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

// Response message for rpc `FetchAll`.
type FetchAllEstatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Estates []*FullEstate `protobuf:"bytes,1,rep,name=estates,proto3" json:"estates,omitempty"`
}

func (x *FetchAllEstatesResponse) Reset() {
	*x = FetchAllEstatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_estates_estates_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllEstatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllEstatesResponse) ProtoMessage() {}

func (x *FetchAllEstatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_estates_estates_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllEstatesResponse.ProtoReflect.Descriptor instead.
func (*FetchAllEstatesResponse) Descriptor() ([]byte, []int) {
	return file_estates_estates_proto_rawDescGZIP(), []int{24}
}

func (x *FetchAllEstatesResponse) GetEstates() []*FullEstate {
	if x != nil {
		return x.Estates
	}
	return nil
}

var File_estates_estates_proto protoreflect.FileDescriptor

var file_estates_estates_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x67, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb7, 0x01, 0x0a, 0x06, 0x45, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x09, 0x65, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x61, 0x74, 0x65, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x67, 0x61, 0x74, 0x65, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x05, 0x72, 0x6f,
	0x6f, 0x6d, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x49, 0x64, 0x22, 0xcc, 0x05, 0x0a, 0x0a, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x5b, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x64, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x10, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c,
	0x64, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x05,
	0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x05, 0x67, 0x61, 0x74, 0x65, 0x73, 0x1a, 0x50, 0x0a, 0x0c, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x62, 0x0a, 0x15, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69, 0x6e, 0x67, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x69,
	0x6e, 0x67, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x56, 0x0a,
	0x0e, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4a, 0x0a, 0x0a, 0x47, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x67, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x47, 0x61, 0x74, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x4b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x26,
	0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x22, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5b, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x25, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3d,
	0x0a, 0x11, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x44, 0x0a,
	0x12, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x07, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x22, 0x46, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x41,
	0x64, 0x64, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49,
	0x0a, 0x11, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x67, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x40, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x26, 0x0a, 0x05, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x67, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x67, 0x61, 0x74, 0x65, 0x73, 0x22, 0x52, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x45, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x55, 0x0a, 0x15, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x08, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x54, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e,
	0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x16, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x45,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4d, 0x0a, 0x17,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x07, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x07, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x32, 0xae, 0x0b, 0x0a, 0x11,
	0x4d, 0x72, 0x75, 0x56, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x6d, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x22, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a,
	0x12, 0x5b, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74,
	0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x45, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x72, 0x0a,
	0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x21, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x32, 0x10, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01,
	0x2a, 0x12, 0x6f, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x21, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x2a, 0x10, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x64, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x1f, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x12, 0x70, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x47,
	0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x7d, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x80, 0x01, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x47,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x47, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x29, 0x2a, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x2f, 0x7b, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x61,
	0x74, 0x65, 0x73, 0x2f, 0x7b, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x81, 0x01,
	0x0a, 0x0e, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x73,
	0x12, 0x23, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x47, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x47, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x12, 0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f,
	0x7b, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x67, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x80, 0x01, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x20, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21,
	0x2f, 0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x65, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x3a, 0x01, 0x2a, 0x12, 0x94, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x2a, 0x2f, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x91, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x12, 0x27, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f,
	0x76, 0x31, 0x2f, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x2f, 0x7b, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x12,
	0x5b, 0x0a, 0x08, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x12, 0x24, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x45, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x25,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x72, 0x75, 0x56, 0x2d,
	0x52, 0x50, 0x2f, 0x6d, 0x72, 0x75, 0x76, 0x2d, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_estates_estates_proto_rawDescOnce sync.Once
	file_estates_estates_proto_rawDescData = file_estates_estates_proto_rawDesc
)

func file_estates_estates_proto_rawDescGZIP() []byte {
	file_estates_estates_proto_rawDescOnce.Do(func() {
		file_estates_estates_proto_rawDescData = protoimpl.X.CompressGZIP(file_estates_estates_proto_rawDescData)
	})
	return file_estates_estates_proto_rawDescData
}

var file_estates_estates_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_estates_estates_proto_goTypes = []interface{}{
	(*Estate)(nil),                     // 0: mruv.estates.Estate
	(*FullEstate)(nil),                 // 1: mruv.estates.FullEstate
	(*CreateEstateRequest)(nil),        // 2: mruv.estates.CreateEstateRequest
	(*CreateEstateResponse)(nil),       // 3: mruv.estates.CreateEstateResponse
	(*GetEstateRequest)(nil),           // 4: mruv.estates.GetEstateRequest
	(*UpdateEstateRequest)(nil),        // 5: mruv.estates.UpdateEstateRequest
	(*UpdateEstateResponse)(nil),       // 6: mruv.estates.UpdateEstateResponse
	(*DeleteEstateRequest)(nil),        // 7: mruv.estates.DeleteEstateRequest
	(*DeleteEstateResponse)(nil),       // 8: mruv.estates.DeleteEstateResponse
	(*GetEstatesRequest)(nil),          // 9: mruv.estates.GetEstatesRequest
	(*GetEstatesResponse)(nil),         // 10: mruv.estates.GetEstatesResponse
	(*AddGateRequest)(nil),             // 11: mruv.estates.AddGateRequest
	(*AddGateResponse)(nil),            // 12: mruv.estates.AddGateResponse
	(*RemoveGateRequest)(nil),          // 13: mruv.estates.RemoveGateRequest
	(*RemoveGateResponse)(nil),         // 14: mruv.estates.RemoveGateResponse
	(*GetEstateGatesRequest)(nil),      // 15: mruv.estates.GetEstateGatesRequest
	(*GetEstateGatesResponse)(nil),     // 16: mruv.estates.GetEstateGatesResponse
	(*AddEntranceRequest)(nil),         // 17: mruv.estates.AddEntranceRequest
	(*AddEntranceResponse)(nil),        // 18: mruv.estates.AddEntranceResponse
	(*RemoveEntranceRequest)(nil),      // 19: mruv.estates.RemoveEntranceRequest
	(*RemoveEntranceResponse)(nil),     // 20: mruv.estates.RemoveEntranceResponse
	(*GetEstateEntrancesRequest)(nil),  // 21: mruv.estates.GetEstateEntrancesRequest
	(*GetEstateEntrancesResponse)(nil), // 22: mruv.estates.GetEstateEntrancesResponse
	(*FetchAllEstatesRequest)(nil),     // 23: mruv.estates.FetchAllEstatesRequest
	(*FetchAllEstatesResponse)(nil),    // 24: mruv.estates.FetchAllEstatesResponse
	nil,                                // 25: mruv.estates.FullEstate.ObjectsEntry
	nil,                                // 26: mruv.estates.FullEstate.RemovedBuildingsEntry
	nil,                                // 27: mruv.estates.FullEstate.EntrancesEntry
	nil,                                // 28: mruv.estates.FullEstate.GatesEntry
	(*gates.Gate)(nil),                 // 29: mruv.gates.Gate
	(*entrances.Entrance)(nil),         // 30: mruv.entrances.Entrance
	(*objects.Object)(nil),             // 31: mruv.objects.Object
	(*objects.RemovedBuilding)(nil),    // 32: mruv.objects.RemovedBuilding
}
var file_estates_estates_proto_depIdxs = []int32{
	25, // 0: mruv.estates.FullEstate.objects:type_name -> mruv.estates.FullEstate.ObjectsEntry
	26, // 1: mruv.estates.FullEstate.removed_buildings:type_name -> mruv.estates.FullEstate.RemovedBuildingsEntry
	27, // 2: mruv.estates.FullEstate.entrances:type_name -> mruv.estates.FullEstate.EntrancesEntry
	28, // 3: mruv.estates.FullEstate.gates:type_name -> mruv.estates.FullEstate.GatesEntry
	0,  // 4: mruv.estates.GetEstatesResponse.estates:type_name -> mruv.estates.Estate
	29, // 5: mruv.estates.GetEstateGatesResponse.gates:type_name -> mruv.gates.Gate
	30, // 6: mruv.estates.GetEstateEntrancesResponse.entrances:type_name -> mruv.entrances.Entrance
	1,  // 7: mruv.estates.FetchAllEstatesResponse.estates:type_name -> mruv.estates.FullEstate
	31, // 8: mruv.estates.FullEstate.ObjectsEntry.value:type_name -> mruv.objects.Object
	32, // 9: mruv.estates.FullEstate.RemovedBuildingsEntry.value:type_name -> mruv.objects.RemovedBuilding
	30, // 10: mruv.estates.FullEstate.EntrancesEntry.value:type_name -> mruv.entrances.Entrance
	29, // 11: mruv.estates.FullEstate.GatesEntry.value:type_name -> mruv.gates.Gate
	2,  // 12: mruv.estates.MruVEstateService.CreateEstate:input_type -> mruv.estates.CreateEstateRequest
	4,  // 13: mruv.estates.MruVEstateService.GetEstate:input_type -> mruv.estates.GetEstateRequest
	5,  // 14: mruv.estates.MruVEstateService.UpdateEstate:input_type -> mruv.estates.UpdateEstateRequest
	7,  // 15: mruv.estates.MruVEstateService.DeleteEstate:input_type -> mruv.estates.DeleteEstateRequest
	9,  // 16: mruv.estates.MruVEstateService.GetEstates:input_type -> mruv.estates.GetEstatesRequest
	11, // 17: mruv.estates.MruVEstateService.AddGate:input_type -> mruv.estates.AddGateRequest
	13, // 18: mruv.estates.MruVEstateService.RemoveGate:input_type -> mruv.estates.RemoveGateRequest
	15, // 19: mruv.estates.MruVEstateService.GetEstateGates:input_type -> mruv.estates.GetEstateGatesRequest
	17, // 20: mruv.estates.MruVEstateService.AddEntrance:input_type -> mruv.estates.AddEntranceRequest
	19, // 21: mruv.estates.MruVEstateService.RemoveEntrance:input_type -> mruv.estates.RemoveEntranceRequest
	21, // 22: mruv.estates.MruVEstateService.GetEstateEntrances:input_type -> mruv.estates.GetEstateEntrancesRequest
	23, // 23: mruv.estates.MruVEstateService.FetchAll:input_type -> mruv.estates.FetchAllEstatesRequest
	3,  // 24: mruv.estates.MruVEstateService.CreateEstate:output_type -> mruv.estates.CreateEstateResponse
	0,  // 25: mruv.estates.MruVEstateService.GetEstate:output_type -> mruv.estates.Estate
	6,  // 26: mruv.estates.MruVEstateService.UpdateEstate:output_type -> mruv.estates.UpdateEstateResponse
	8,  // 27: mruv.estates.MruVEstateService.DeleteEstate:output_type -> mruv.estates.DeleteEstateResponse
	10, // 28: mruv.estates.MruVEstateService.GetEstates:output_type -> mruv.estates.GetEstatesResponse
	12, // 29: mruv.estates.MruVEstateService.AddGate:output_type -> mruv.estates.AddGateResponse
	14, // 30: mruv.estates.MruVEstateService.RemoveGate:output_type -> mruv.estates.RemoveGateResponse
	16, // 31: mruv.estates.MruVEstateService.GetEstateGates:output_type -> mruv.estates.GetEstateGatesResponse
	18, // 32: mruv.estates.MruVEstateService.AddEntrance:output_type -> mruv.estates.AddEntranceResponse
	20, // 33: mruv.estates.MruVEstateService.RemoveEntrance:output_type -> mruv.estates.RemoveEntranceResponse
	22, // 34: mruv.estates.MruVEstateService.GetEstateEntrances:output_type -> mruv.estates.GetEstateEntrancesResponse
	24, // 35: mruv.estates.MruVEstateService.FetchAll:output_type -> mruv.estates.FetchAllEstatesResponse
	24, // [24:36] is the sub-list for method output_type
	12, // [12:24] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_estates_estates_proto_init() }
func file_estates_estates_proto_init() {
	if File_estates_estates_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_estates_estates_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Estate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FullEstate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEstateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEstateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEstateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEstateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEstateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEstateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddGateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveGateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstateGatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstateGatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEntranceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEntranceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEntranceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEntranceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstateEntrancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEstateEntrancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllEstatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_estates_estates_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllEstatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_estates_estates_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_estates_estates_proto_goTypes,
		DependencyIndexes: file_estates_estates_proto_depIdxs,
		MessageInfos:      file_estates_estates_proto_msgTypes,
	}.Build()
	File_estates_estates_proto = out.File
	file_estates_estates_proto_rawDesc = nil
	file_estates_estates_proto_goTypes = nil
	file_estates_estates_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MruVEstateServiceClient is the client API for MruVEstateService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVEstateServiceClient interface {
	// Create real estate.
	CreateEstate(ctx context.Context, in *CreateEstateRequest, opts ...grpc.CallOption) (*CreateEstateResponse, error)
	// Get real estate.
	GetEstate(ctx context.Context, in *GetEstateRequest, opts ...grpc.CallOption) (*Estate, error)
	// Update real estate.
	UpdateEstate(ctx context.Context, in *UpdateEstateRequest, opts ...grpc.CallOption) (*UpdateEstateResponse, error)
	// Delete real estate.
	DeleteEstate(ctx context.Context, in *DeleteEstateRequest, opts ...grpc.CallOption) (*DeleteEstateResponse, error)
	// Get all created real estates.
	GetEstates(ctx context.Context, in *GetEstatesRequest, opts ...grpc.CallOption) (*GetEstatesResponse, error)
	// Add a gate to an estate.
	AddGate(ctx context.Context, in *AddGateRequest, opts ...grpc.CallOption) (*AddGateResponse, error)
	// Delete a gate from estate.
	RemoveGate(ctx context.Context, in *RemoveGateRequest, opts ...grpc.CallOption) (*RemoveGateResponse, error)
	// Get all estate gates.
	GetEstateGates(ctx context.Context, in *GetEstateGatesRequest, opts ...grpc.CallOption) (*GetEstateGatesResponse, error)
	// Add an entrance to estate.
	AddEntrance(ctx context.Context, in *AddEntranceRequest, opts ...grpc.CallOption) (*AddEntranceResponse, error)
	// Remove an entrance from estate.
	RemoveEntrance(ctx context.Context, in *RemoveEntranceRequest, opts ...grpc.CallOption) (*RemoveEntranceResponse, error)
	// Get all estate entrances.
	GetEstateEntrances(ctx context.Context, in *GetEstateEntrancesRequest, opts ...grpc.CallOption) (*GetEstateEntrancesResponse, error)
	// Get full estates data
	FetchAll(ctx context.Context, in *FetchAllEstatesRequest, opts ...grpc.CallOption) (MruVEstateService_FetchAllClient, error)
}

type mruVEstateServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMruVEstateServiceClient(cc grpc.ClientConnInterface) MruVEstateServiceClient {
	return &mruVEstateServiceClient{cc}
}

func (c *mruVEstateServiceClient) CreateEstate(ctx context.Context, in *CreateEstateRequest, opts ...grpc.CallOption) (*CreateEstateResponse, error) {
	out := new(CreateEstateResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/CreateEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) GetEstate(ctx context.Context, in *GetEstateRequest, opts ...grpc.CallOption) (*Estate, error) {
	out := new(Estate)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/GetEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) UpdateEstate(ctx context.Context, in *UpdateEstateRequest, opts ...grpc.CallOption) (*UpdateEstateResponse, error) {
	out := new(UpdateEstateResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/UpdateEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) DeleteEstate(ctx context.Context, in *DeleteEstateRequest, opts ...grpc.CallOption) (*DeleteEstateResponse, error) {
	out := new(DeleteEstateResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/DeleteEstate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) GetEstates(ctx context.Context, in *GetEstatesRequest, opts ...grpc.CallOption) (*GetEstatesResponse, error) {
	out := new(GetEstatesResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/GetEstates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) AddGate(ctx context.Context, in *AddGateRequest, opts ...grpc.CallOption) (*AddGateResponse, error) {
	out := new(AddGateResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/AddGate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) RemoveGate(ctx context.Context, in *RemoveGateRequest, opts ...grpc.CallOption) (*RemoveGateResponse, error) {
	out := new(RemoveGateResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/RemoveGate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) GetEstateGates(ctx context.Context, in *GetEstateGatesRequest, opts ...grpc.CallOption) (*GetEstateGatesResponse, error) {
	out := new(GetEstateGatesResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/GetEstateGates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) AddEntrance(ctx context.Context, in *AddEntranceRequest, opts ...grpc.CallOption) (*AddEntranceResponse, error) {
	out := new(AddEntranceResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/AddEntrance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) RemoveEntrance(ctx context.Context, in *RemoveEntranceRequest, opts ...grpc.CallOption) (*RemoveEntranceResponse, error) {
	out := new(RemoveEntranceResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/RemoveEntrance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) GetEstateEntrances(ctx context.Context, in *GetEstateEntrancesRequest, opts ...grpc.CallOption) (*GetEstateEntrancesResponse, error) {
	out := new(GetEstateEntrancesResponse)
	err := c.cc.Invoke(ctx, "/mruv.estates.MruVEstateService/GetEstateEntrances", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEstateServiceClient) FetchAll(ctx context.Context, in *FetchAllEstatesRequest, opts ...grpc.CallOption) (MruVEstateService_FetchAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVEstateService_serviceDesc.Streams[0], "/mruv.estates.MruVEstateService/FetchAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVEstateServiceFetchAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVEstateService_FetchAllClient interface {
	Recv() (*FetchAllEstatesResponse, error)
	grpc.ClientStream
}

type mruVEstateServiceFetchAllClient struct {
	grpc.ClientStream
}

func (x *mruVEstateServiceFetchAllClient) Recv() (*FetchAllEstatesResponse, error) {
	m := new(FetchAllEstatesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVEstateServiceServer is the server API for MruVEstateService service.
type MruVEstateServiceServer interface {
	// Create real estate.
	CreateEstate(context.Context, *CreateEstateRequest) (*CreateEstateResponse, error)
	// Get real estate.
	GetEstate(context.Context, *GetEstateRequest) (*Estate, error)
	// Update real estate.
	UpdateEstate(context.Context, *UpdateEstateRequest) (*UpdateEstateResponse, error)
	// Delete real estate.
	DeleteEstate(context.Context, *DeleteEstateRequest) (*DeleteEstateResponse, error)
	// Get all created real estates.
	GetEstates(context.Context, *GetEstatesRequest) (*GetEstatesResponse, error)
	// Add a gate to an estate.
	AddGate(context.Context, *AddGateRequest) (*AddGateResponse, error)
	// Delete a gate from estate.
	RemoveGate(context.Context, *RemoveGateRequest) (*RemoveGateResponse, error)
	// Get all estate gates.
	GetEstateGates(context.Context, *GetEstateGatesRequest) (*GetEstateGatesResponse, error)
	// Add an entrance to estate.
	AddEntrance(context.Context, *AddEntranceRequest) (*AddEntranceResponse, error)
	// Remove an entrance from estate.
	RemoveEntrance(context.Context, *RemoveEntranceRequest) (*RemoveEntranceResponse, error)
	// Get all estate entrances.
	GetEstateEntrances(context.Context, *GetEstateEntrancesRequest) (*GetEstateEntrancesResponse, error)
	// Get full estates data
	FetchAll(*FetchAllEstatesRequest, MruVEstateService_FetchAllServer) error
}

// UnimplementedMruVEstateServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVEstateServiceServer struct {
}

func (*UnimplementedMruVEstateServiceServer) CreateEstate(context.Context, *CreateEstateRequest) (*CreateEstateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEstate not implemented")
}
func (*UnimplementedMruVEstateServiceServer) GetEstate(context.Context, *GetEstateRequest) (*Estate, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEstate not implemented")
}
func (*UnimplementedMruVEstateServiceServer) UpdateEstate(context.Context, *UpdateEstateRequest) (*UpdateEstateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEstate not implemented")
}
func (*UnimplementedMruVEstateServiceServer) DeleteEstate(context.Context, *DeleteEstateRequest) (*DeleteEstateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEstate not implemented")
}
func (*UnimplementedMruVEstateServiceServer) GetEstates(context.Context, *GetEstatesRequest) (*GetEstatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEstates not implemented")
}
func (*UnimplementedMruVEstateServiceServer) AddGate(context.Context, *AddGateRequest) (*AddGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddGate not implemented")
}
func (*UnimplementedMruVEstateServiceServer) RemoveGate(context.Context, *RemoveGateRequest) (*RemoveGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveGate not implemented")
}
func (*UnimplementedMruVEstateServiceServer) GetEstateGates(context.Context, *GetEstateGatesRequest) (*GetEstateGatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEstateGates not implemented")
}
func (*UnimplementedMruVEstateServiceServer) AddEntrance(context.Context, *AddEntranceRequest) (*AddEntranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEntrance not implemented")
}
func (*UnimplementedMruVEstateServiceServer) RemoveEntrance(context.Context, *RemoveEntranceRequest) (*RemoveEntranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveEntrance not implemented")
}
func (*UnimplementedMruVEstateServiceServer) GetEstateEntrances(context.Context, *GetEstateEntrancesRequest) (*GetEstateEntrancesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEstateEntrances not implemented")
}
func (*UnimplementedMruVEstateServiceServer) FetchAll(*FetchAllEstatesRequest, MruVEstateService_FetchAllServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchAll not implemented")
}

func RegisterMruVEstateServiceServer(s *grpc.Server, srv MruVEstateServiceServer) {
	s.RegisterService(&_MruVEstateService_serviceDesc, srv)
}

func _MruVEstateService_CreateEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).CreateEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/CreateEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).CreateEstate(ctx, req.(*CreateEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_GetEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).GetEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/GetEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).GetEstate(ctx, req.(*GetEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_UpdateEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).UpdateEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/UpdateEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).UpdateEstate(ctx, req.(*UpdateEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_DeleteEstate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEstateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).DeleteEstate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/DeleteEstate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).DeleteEstate(ctx, req.(*DeleteEstateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_GetEstates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEstatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).GetEstates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/GetEstates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).GetEstates(ctx, req.(*GetEstatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_AddGate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).AddGate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/AddGate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).AddGate(ctx, req.(*AddGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_RemoveGate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).RemoveGate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/RemoveGate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).RemoveGate(ctx, req.(*RemoveGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_GetEstateGates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEstateGatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).GetEstateGates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/GetEstateGates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).GetEstateGates(ctx, req.(*GetEstateGatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_AddEntrance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEntranceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).AddEntrance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/AddEntrance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).AddEntrance(ctx, req.(*AddEntranceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_RemoveEntrance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveEntranceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).RemoveEntrance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/RemoveEntrance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).RemoveEntrance(ctx, req.(*RemoveEntranceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_GetEstateEntrances_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEstateEntrancesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEstateServiceServer).GetEstateEntrances(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.estates.MruVEstateService/GetEstateEntrances",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEstateServiceServer).GetEstateEntrances(ctx, req.(*GetEstateEntrancesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEstateService_FetchAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchAllEstatesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVEstateServiceServer).FetchAll(m, &mruVEstateServiceFetchAllServer{stream})
}

type MruVEstateService_FetchAllServer interface {
	Send(*FetchAllEstatesResponse) error
	grpc.ServerStream
}

type mruVEstateServiceFetchAllServer struct {
	grpc.ServerStream
}

func (x *mruVEstateServiceFetchAllServer) Send(m *FetchAllEstatesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVEstateService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.estates.MruVEstateService",
	HandlerType: (*MruVEstateServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEstate",
			Handler:    _MruVEstateService_CreateEstate_Handler,
		},
		{
			MethodName: "GetEstate",
			Handler:    _MruVEstateService_GetEstate_Handler,
		},
		{
			MethodName: "UpdateEstate",
			Handler:    _MruVEstateService_UpdateEstate_Handler,
		},
		{
			MethodName: "DeleteEstate",
			Handler:    _MruVEstateService_DeleteEstate_Handler,
		},
		{
			MethodName: "GetEstates",
			Handler:    _MruVEstateService_GetEstates_Handler,
		},
		{
			MethodName: "AddGate",
			Handler:    _MruVEstateService_AddGate_Handler,
		},
		{
			MethodName: "RemoveGate",
			Handler:    _MruVEstateService_RemoveGate_Handler,
		},
		{
			MethodName: "GetEstateGates",
			Handler:    _MruVEstateService_GetEstateGates_Handler,
		},
		{
			MethodName: "AddEntrance",
			Handler:    _MruVEstateService_AddEntrance_Handler,
		},
		{
			MethodName: "RemoveEntrance",
			Handler:    _MruVEstateService_RemoveEntrance_Handler,
		},
		{
			MethodName: "GetEstateEntrances",
			Handler:    _MruVEstateService_GetEstateEntrances_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchAll",
			Handler:       _MruVEstateService_FetchAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "estates/estates.proto",
}
