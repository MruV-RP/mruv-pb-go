// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: economy/economy.proto

package economy

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WatchProductResponse_ProductEvent int32

const (
	WatchProductResponse_UNKNOWN              WatchProductResponse_ProductEvent = 0
	WatchProductResponse_PRICE_CHANGED        WatchProductResponse_ProductEvent = 1
	WatchProductResponse_PRODUCT_BOUGHT       WatchProductResponse_ProductEvent = 2
	WatchProductResponse_PRODUCT_INFO_UPDATED WatchProductResponse_ProductEvent = 3
	WatchProductResponse_PRODUCT_DELETED      WatchProductResponse_ProductEvent = 4
)

// Enum value maps for WatchProductResponse_ProductEvent.
var (
	WatchProductResponse_ProductEvent_name = map[int32]string{
		0: "UNKNOWN",
		1: "PRICE_CHANGED",
		2: "PRODUCT_BOUGHT",
		3: "PRODUCT_INFO_UPDATED",
		4: "PRODUCT_DELETED",
	}
	WatchProductResponse_ProductEvent_value = map[string]int32{
		"UNKNOWN":              0,
		"PRICE_CHANGED":        1,
		"PRODUCT_BOUGHT":       2,
		"PRODUCT_INFO_UPDATED": 3,
		"PRODUCT_DELETED":      4,
	}
)

func (x WatchProductResponse_ProductEvent) Enum() *WatchProductResponse_ProductEvent {
	p := new(WatchProductResponse_ProductEvent)
	*p = x
	return p
}

func (x WatchProductResponse_ProductEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WatchProductResponse_ProductEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_economy_economy_proto_enumTypes[0].Descriptor()
}

func (WatchProductResponse_ProductEvent) Type() protoreflect.EnumType {
	return &file_economy_economy_proto_enumTypes[0]
}

func (x WatchProductResponse_ProductEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WatchProductResponse_ProductEvent.Descriptor instead.
func (WatchProductResponse_ProductEvent) EnumDescriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{15, 0}
}

// Request message for rpc `RegisterProduct`.
type RegisterProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FullName      string  `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Description   string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PriceClass    uint32  `protobuf:"varint,4,opt,name=price_class,json=priceClass,proto3" json:"price_class,omitempty"`
	PriceRatio    float32 `protobuf:"fixed32,5,opt,name=price_ratio,json=priceRatio,proto3" json:"price_ratio,omitempty"`
	StartingPrice uint32  `protobuf:"varint,6,opt,name=starting_price,json=startingPrice,proto3" json:"starting_price,omitempty"`
}

func (x *RegisterProductRequest) Reset() {
	*x = RegisterProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterProductRequest) ProtoMessage() {}

func (x *RegisterProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterProductRequest.ProtoReflect.Descriptor instead.
func (*RegisterProductRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RegisterProductRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *RegisterProductRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *RegisterProductRequest) GetPriceClass() uint32 {
	if x != nil {
		return x.PriceClass
	}
	return 0
}

func (x *RegisterProductRequest) GetPriceRatio() float32 {
	if x != nil {
		return x.PriceRatio
	}
	return 0
}

func (x *RegisterProductRequest) GetStartingPrice() uint32 {
	if x != nil {
		return x.StartingPrice
	}
	return 0
}

// Response message for rpc `RegisterProduct`.
type RegisterProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *RegisterProductResponse) Reset() {
	*x = RegisterProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterProductResponse) ProtoMessage() {}

func (x *RegisterProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterProductResponse.ProtoReflect.Descriptor instead.
func (*RegisterProductResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterProductResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `GetProduct`.
type GetProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetProductRequest) Reset() {
	*x = GetProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductRequest) ProtoMessage() {}

func (x *GetProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductRequest.ProtoReflect.Descriptor instead.
func (*GetProductRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{2}
}

func (x *GetProductRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for rpc `GetProduct`.
type GetProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name          string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FullName      string  `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Description   string  `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	PriceClass    uint32  `protobuf:"varint,4,opt,name=price_class,json=priceClass,proto3" json:"price_class,omitempty"`
	PriceRatio    float32 `protobuf:"fixed32,5,opt,name=price_ratio,json=priceRatio,proto3" json:"price_ratio,omitempty"`
	StartingPrice uint32  `protobuf:"varint,6,opt,name=starting_price,json=startingPrice,proto3" json:"starting_price,omitempty"`
	Price         uint32  `protobuf:"varint,7,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *GetProductResponse) Reset() {
	*x = GetProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductResponse) ProtoMessage() {}

func (x *GetProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductResponse.ProtoReflect.Descriptor instead.
func (*GetProductResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{3}
}

func (x *GetProductResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetProductResponse) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *GetProductResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetProductResponse) GetPriceClass() uint32 {
	if x != nil {
		return x.PriceClass
	}
	return 0
}

func (x *GetProductResponse) GetPriceRatio() float32 {
	if x != nil {
		return x.PriceRatio
	}
	return 0
}

func (x *GetProductResponse) GetStartingPrice() uint32 {
	if x != nil {
		return x.StartingPrice
	}
	return 0
}

func (x *GetProductResponse) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

// Request message for rpc `UpdateProduct`.
type UpdateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	FullName    string  `protobuf:"bytes,3,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	Description string  `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	PriceClass  uint32  `protobuf:"varint,5,opt,name=price_class,json=priceClass,proto3" json:"price_class,omitempty"`
	PriceRatio  float32 `protobuf:"fixed32,6,opt,name=price_ratio,json=priceRatio,proto3" json:"price_ratio,omitempty"`
}

func (x *UpdateProductRequest) Reset() {
	*x = UpdateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductRequest) ProtoMessage() {}

func (x *UpdateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateProductRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProductRequest) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *UpdateProductRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateProductRequest) GetPriceClass() uint32 {
	if x != nil {
		return x.PriceClass
	}
	return 0
}

func (x *UpdateProductRequest) GetPriceRatio() float32 {
	if x != nil {
		return x.PriceRatio
	}
	return 0
}

// Response message for rpc `UpdateProduct`.
type UpdateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateProductResponse) Reset() {
	*x = UpdateProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductResponse) ProtoMessage() {}

func (x *UpdateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductResponse.ProtoReflect.Descriptor instead.
func (*UpdateProductResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{5}
}

// Request message for rpc `UpdatePrice`.
type UpdatePriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	NewPrice uint32 `protobuf:"varint,3,opt,name=new_price,json=newPrice,proto3" json:"new_price,omitempty"`
}

func (x *UpdatePriceRequest) Reset() {
	*x = UpdatePriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePriceRequest) ProtoMessage() {}

func (x *UpdatePriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePriceRequest.ProtoReflect.Descriptor instead.
func (*UpdatePriceRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{6}
}

func (x *UpdatePriceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePriceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdatePriceRequest) GetNewPrice() uint32 {
	if x != nil {
		return x.NewPrice
	}
	return 0
}

// Response message for rpc `UpdatePrice`.
type UpdatePriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdatePriceResponse) Reset() {
	*x = UpdatePriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdatePriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePriceResponse) ProtoMessage() {}

func (x *UpdatePriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePriceResponse.ProtoReflect.Descriptor instead.
func (*UpdatePriceResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{7}
}

// Request message for rpc `DeleteProduct`.
type DeleteProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *DeleteProductRequest) Reset() {
	*x = DeleteProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductRequest) ProtoMessage() {}

func (x *DeleteProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{8}
}

func (x *DeleteProductRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DeleteProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for rpc `DeleteProduct`.
type DeleteProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteProductResponse) Reset() {
	*x = DeleteProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductResponse) ProtoMessage() {}

func (x *DeleteProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductResponse.ProtoReflect.Descriptor instead.
func (*DeleteProductResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{9}
}

// Request message for rpc `GetPrice`.
type GetPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetPriceRequest) Reset() {
	*x = GetPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceRequest) ProtoMessage() {}

func (x *GetPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceRequest.ProtoReflect.Descriptor instead.
func (*GetPriceRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{10}
}

func (x *GetPriceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetPriceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for rpc `GetPrice`.
type GetPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price uint32 `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *GetPriceResponse) Reset() {
	*x = GetPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPriceResponse) ProtoMessage() {}

func (x *GetPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPriceResponse.ProtoReflect.Descriptor instead.
func (*GetPriceResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{11}
}

func (x *GetPriceResponse) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

// Request message for rpc `BuyProduct`.
type BuyProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *BuyProductRequest) Reset() {
	*x = BuyProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyProductRequest) ProtoMessage() {}

func (x *BuyProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyProductRequest.ProtoReflect.Descriptor instead.
func (*BuyProductRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{12}
}

func (x *BuyProductRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BuyProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for rpc `BuyProduct`.
type BuyProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *BuyProductResponse) Reset() {
	*x = BuyProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyProductResponse) ProtoMessage() {}

func (x *BuyProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyProductResponse.ProtoReflect.Descriptor instead.
func (*BuyProductResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{13}
}

// Request message for rpc `WatchProduct`.
type WatchProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WatchProductRequest) Reset() {
	*x = WatchProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchProductRequest) ProtoMessage() {}

func (x *WatchProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchProductRequest.ProtoReflect.Descriptor instead.
func (*WatchProductRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{14}
}

func (x *WatchProductRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WatchProductRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for rpc `WatchProduct`.
type WatchProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event WatchProductResponse_ProductEvent `protobuf:"varint,1,opt,name=event,proto3,enum=mruv.economy.WatchProductResponse_ProductEvent" json:"event,omitempty"`
}

func (x *WatchProductResponse) Reset() {
	*x = WatchProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchProductResponse) ProtoMessage() {}

func (x *WatchProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchProductResponse.ProtoReflect.Descriptor instead.
func (*WatchProductResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{15}
}

func (x *WatchProductResponse) GetEvent() WatchProductResponse_ProductEvent {
	if x != nil {
		return x.Event
	}
	return WatchProductResponse_UNKNOWN
}

// Request message for rpc `WatchPrice`.
type WatchPriceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *WatchPriceRequest) Reset() {
	*x = WatchPriceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPriceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPriceRequest) ProtoMessage() {}

func (x *WatchPriceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPriceRequest.ProtoReflect.Descriptor instead.
func (*WatchPriceRequest) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{16}
}

func (x *WatchPriceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WatchPriceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Response message for rpc `WatchPrice`.
type WatchPriceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price uint32 `protobuf:"varint,1,opt,name=price,proto3" json:"price,omitempty"`
}

func (x *WatchPriceResponse) Reset() {
	*x = WatchPriceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_economy_economy_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchPriceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchPriceResponse) ProtoMessage() {}

func (x *WatchPriceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_economy_economy_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchPriceResponse.ProtoReflect.Descriptor instead.
func (*WatchPriceResponse) Descriptor() ([]byte, []int) {
	return file_economy_economy_proto_rawDescGZIP(), []int{17}
}

func (x *WatchPriceResponse) GetPrice() uint32 {
	if x != nil {
		return x.Price
	}
	return 0
}

var File_economy_economy_proto protoreflect.FileDescriptor

var file_economy_economy_proto_rawDesc = []byte{
	0x0a, 0x15, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63,
	0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x16, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61,
	0x74, 0x69, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x29, 0x0a, 0x17, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xe6,
	0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75,
	0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x5f, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x61, 0x74, 0x69, 0x6f, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x55,
	0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x65, 0x77, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6e, 0x65, 0x77,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3a, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x28, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x22, 0x37, 0x0a, 0x11, 0x42, 0x75, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x42,
	0x75, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x39, 0x0a, 0x13, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xd0, 0x01, 0x0a,
	0x14, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x2f, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x0c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x0a, 0x07,
	0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x52, 0x49,
	0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x42, 0x4f, 0x55, 0x47, 0x48, 0x54, 0x10, 0x02,
	0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x49, 0x4e, 0x46, 0x4f,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x50, 0x52,
	0x4f, 0x44, 0x55, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x22,
	0x37, 0x0a, 0x11, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63,
	0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x32, 0xa3, 0x08, 0x0a, 0x12, 0x4d, 0x72, 0x75, 0x56, 0x45, 0x63, 0x6f,
	0x6e, 0x6f, 0x6d, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x7c, 0x0a, 0x0f, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x24,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x16, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x74, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1f, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12,
	0x7d, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x12, 0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x32, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x7d,
	0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x2a, 0x1b, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x12, 0x7d, 0x0a,
	0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x29, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x23, 0x32, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x73, 0x0a, 0x08,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65,
	0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12,
	0x20, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x2f, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x77, 0x0a, 0x0a, 0x42, 0x75, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12,
	0x1f, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x42,
	0x75, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x20, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e,
	0x42, 0x75, 0x79, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x22, 0x1e, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x2f,
	0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x7d, 0x2f, 0x62, 0x75, 0x79, 0x12, 0x59, 0x0a, 0x0c, 0x57, 0x61,
	0x74, 0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x21, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x2e, 0x57, 0x61, 0x74,
	0x63, 0x68, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x53, 0x0a, 0x0a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x79, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x27, 0x5a, 0x25, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x72, 0x75, 0x56, 0x2d, 0x52, 0x50,
	0x2f, 0x6d, 0x72, 0x75, 0x76, 0x2d, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x65, 0x63, 0x6f, 0x6e,
	0x6f, 0x6d, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_economy_economy_proto_rawDescOnce sync.Once
	file_economy_economy_proto_rawDescData = file_economy_economy_proto_rawDesc
)

func file_economy_economy_proto_rawDescGZIP() []byte {
	file_economy_economy_proto_rawDescOnce.Do(func() {
		file_economy_economy_proto_rawDescData = protoimpl.X.CompressGZIP(file_economy_economy_proto_rawDescData)
	})
	return file_economy_economy_proto_rawDescData
}

var file_economy_economy_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_economy_economy_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_economy_economy_proto_goTypes = []interface{}{
	(WatchProductResponse_ProductEvent)(0), // 0: mruv.economy.WatchProductResponse.ProductEvent
	(*RegisterProductRequest)(nil),         // 1: mruv.economy.RegisterProductRequest
	(*RegisterProductResponse)(nil),        // 2: mruv.economy.RegisterProductResponse
	(*GetProductRequest)(nil),              // 3: mruv.economy.GetProductRequest
	(*GetProductResponse)(nil),             // 4: mruv.economy.GetProductResponse
	(*UpdateProductRequest)(nil),           // 5: mruv.economy.UpdateProductRequest
	(*UpdateProductResponse)(nil),          // 6: mruv.economy.UpdateProductResponse
	(*UpdatePriceRequest)(nil),             // 7: mruv.economy.UpdatePriceRequest
	(*UpdatePriceResponse)(nil),            // 8: mruv.economy.UpdatePriceResponse
	(*DeleteProductRequest)(nil),           // 9: mruv.economy.DeleteProductRequest
	(*DeleteProductResponse)(nil),          // 10: mruv.economy.DeleteProductResponse
	(*GetPriceRequest)(nil),                // 11: mruv.economy.GetPriceRequest
	(*GetPriceResponse)(nil),               // 12: mruv.economy.GetPriceResponse
	(*BuyProductRequest)(nil),              // 13: mruv.economy.BuyProductRequest
	(*BuyProductResponse)(nil),             // 14: mruv.economy.BuyProductResponse
	(*WatchProductRequest)(nil),            // 15: mruv.economy.WatchProductRequest
	(*WatchProductResponse)(nil),           // 16: mruv.economy.WatchProductResponse
	(*WatchPriceRequest)(nil),              // 17: mruv.economy.WatchPriceRequest
	(*WatchPriceResponse)(nil),             // 18: mruv.economy.WatchPriceResponse
}
var file_economy_economy_proto_depIdxs = []int32{
	0,  // 0: mruv.economy.WatchProductResponse.event:type_name -> mruv.economy.WatchProductResponse.ProductEvent
	1,  // 1: mruv.economy.MruVEconomyService.RegisterProduct:input_type -> mruv.economy.RegisterProductRequest
	3,  // 2: mruv.economy.MruVEconomyService.GetProduct:input_type -> mruv.economy.GetProductRequest
	5,  // 3: mruv.economy.MruVEconomyService.UpdateProduct:input_type -> mruv.economy.UpdateProductRequest
	9,  // 4: mruv.economy.MruVEconomyService.DeleteProduct:input_type -> mruv.economy.DeleteProductRequest
	7,  // 5: mruv.economy.MruVEconomyService.UpdatePrice:input_type -> mruv.economy.UpdatePriceRequest
	11, // 6: mruv.economy.MruVEconomyService.GetPrice:input_type -> mruv.economy.GetPriceRequest
	13, // 7: mruv.economy.MruVEconomyService.BuyProduct:input_type -> mruv.economy.BuyProductRequest
	15, // 8: mruv.economy.MruVEconomyService.WatchProduct:input_type -> mruv.economy.WatchProductRequest
	17, // 9: mruv.economy.MruVEconomyService.WatchPrice:input_type -> mruv.economy.WatchPriceRequest
	2,  // 10: mruv.economy.MruVEconomyService.RegisterProduct:output_type -> mruv.economy.RegisterProductResponse
	4,  // 11: mruv.economy.MruVEconomyService.GetProduct:output_type -> mruv.economy.GetProductResponse
	6,  // 12: mruv.economy.MruVEconomyService.UpdateProduct:output_type -> mruv.economy.UpdateProductResponse
	10, // 13: mruv.economy.MruVEconomyService.DeleteProduct:output_type -> mruv.economy.DeleteProductResponse
	8,  // 14: mruv.economy.MruVEconomyService.UpdatePrice:output_type -> mruv.economy.UpdatePriceResponse
	12, // 15: mruv.economy.MruVEconomyService.GetPrice:output_type -> mruv.economy.GetPriceResponse
	14, // 16: mruv.economy.MruVEconomyService.BuyProduct:output_type -> mruv.economy.BuyProductResponse
	16, // 17: mruv.economy.MruVEconomyService.WatchProduct:output_type -> mruv.economy.WatchProductResponse
	18, // 18: mruv.economy.MruVEconomyService.WatchPrice:output_type -> mruv.economy.WatchPriceResponse
	10, // [10:19] is the sub-list for method output_type
	1,  // [1:10] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_economy_economy_proto_init() }
func file_economy_economy_proto_init() {
	if File_economy_economy_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_economy_economy_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdatePriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPriceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_economy_economy_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchPriceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_economy_economy_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_economy_economy_proto_goTypes,
		DependencyIndexes: file_economy_economy_proto_depIdxs,
		EnumInfos:         file_economy_economy_proto_enumTypes,
		MessageInfos:      file_economy_economy_proto_msgTypes,
	}.Build()
	File_economy_economy_proto = out.File
	file_economy_economy_proto_rawDesc = nil
	file_economy_economy_proto_goTypes = nil
	file_economy_economy_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MruVEconomyServiceClient is the client API for MruVEconomyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVEconomyServiceClient interface {
	// Register price in economy system.
	RegisterProduct(ctx context.Context, in *RegisterProductRequest, opts ...grpc.CallOption) (*RegisterProductResponse, error)
	// Get product information.
	GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error)
	// Update product information.
	UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error)
	//
	DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error)
	// Update product price.
	UpdatePrice(ctx context.Context, in *UpdatePriceRequest, opts ...grpc.CallOption) (*UpdatePriceResponse, error)
	// Get current value for registered price.
	GetPrice(ctx context.Context, in *GetPriceRequest, opts ...grpc.CallOption) (*GetPriceResponse, error)
	// Send information to the system, that the product has been purchased.
	// This rpc call can affect a product price.
	BuyProduct(ctx context.Context, in *BuyProductRequest, opts ...grpc.CallOption) (*BuyProductResponse, error)
	// Subscribe to events related to a product.
	WatchProduct(ctx context.Context, in *WatchProductRequest, opts ...grpc.CallOption) (MruVEconomyService_WatchProductClient, error)
	// Subscribe to product price changes.
	WatchPrice(ctx context.Context, in *WatchPriceRequest, opts ...grpc.CallOption) (MruVEconomyService_WatchPriceClient, error)
}

type mruVEconomyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMruVEconomyServiceClient(cc grpc.ClientConnInterface) MruVEconomyServiceClient {
	return &mruVEconomyServiceClient{cc}
}

func (c *mruVEconomyServiceClient) RegisterProduct(ctx context.Context, in *RegisterProductRequest, opts ...grpc.CallOption) (*RegisterProductResponse, error) {
	out := new(RegisterProductResponse)
	err := c.cc.Invoke(ctx, "/mruv.economy.MruVEconomyService/RegisterProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEconomyServiceClient) GetProduct(ctx context.Context, in *GetProductRequest, opts ...grpc.CallOption) (*GetProductResponse, error) {
	out := new(GetProductResponse)
	err := c.cc.Invoke(ctx, "/mruv.economy.MruVEconomyService/GetProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEconomyServiceClient) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...grpc.CallOption) (*UpdateProductResponse, error) {
	out := new(UpdateProductResponse)
	err := c.cc.Invoke(ctx, "/mruv.economy.MruVEconomyService/UpdateProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEconomyServiceClient) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...grpc.CallOption) (*DeleteProductResponse, error) {
	out := new(DeleteProductResponse)
	err := c.cc.Invoke(ctx, "/mruv.economy.MruVEconomyService/DeleteProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEconomyServiceClient) UpdatePrice(ctx context.Context, in *UpdatePriceRequest, opts ...grpc.CallOption) (*UpdatePriceResponse, error) {
	out := new(UpdatePriceResponse)
	err := c.cc.Invoke(ctx, "/mruv.economy.MruVEconomyService/UpdatePrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEconomyServiceClient) GetPrice(ctx context.Context, in *GetPriceRequest, opts ...grpc.CallOption) (*GetPriceResponse, error) {
	out := new(GetPriceResponse)
	err := c.cc.Invoke(ctx, "/mruv.economy.MruVEconomyService/GetPrice", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEconomyServiceClient) BuyProduct(ctx context.Context, in *BuyProductRequest, opts ...grpc.CallOption) (*BuyProductResponse, error) {
	out := new(BuyProductResponse)
	err := c.cc.Invoke(ctx, "/mruv.economy.MruVEconomyService/BuyProduct", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEconomyServiceClient) WatchProduct(ctx context.Context, in *WatchProductRequest, opts ...grpc.CallOption) (MruVEconomyService_WatchProductClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVEconomyService_serviceDesc.Streams[0], "/mruv.economy.MruVEconomyService/WatchProduct", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVEconomyServiceWatchProductClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVEconomyService_WatchProductClient interface {
	Recv() (*WatchProductResponse, error)
	grpc.ClientStream
}

type mruVEconomyServiceWatchProductClient struct {
	grpc.ClientStream
}

func (x *mruVEconomyServiceWatchProductClient) Recv() (*WatchProductResponse, error) {
	m := new(WatchProductResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mruVEconomyServiceClient) WatchPrice(ctx context.Context, in *WatchPriceRequest, opts ...grpc.CallOption) (MruVEconomyService_WatchPriceClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVEconomyService_serviceDesc.Streams[1], "/mruv.economy.MruVEconomyService/WatchPrice", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVEconomyServiceWatchPriceClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVEconomyService_WatchPriceClient interface {
	Recv() (*WatchPriceResponse, error)
	grpc.ClientStream
}

type mruVEconomyServiceWatchPriceClient struct {
	grpc.ClientStream
}

func (x *mruVEconomyServiceWatchPriceClient) Recv() (*WatchPriceResponse, error) {
	m := new(WatchPriceResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVEconomyServiceServer is the server API for MruVEconomyService service.
type MruVEconomyServiceServer interface {
	// Register price in economy system.
	RegisterProduct(context.Context, *RegisterProductRequest) (*RegisterProductResponse, error)
	// Get product information.
	GetProduct(context.Context, *GetProductRequest) (*GetProductResponse, error)
	// Update product information.
	UpdateProduct(context.Context, *UpdateProductRequest) (*UpdateProductResponse, error)
	//
	DeleteProduct(context.Context, *DeleteProductRequest) (*DeleteProductResponse, error)
	// Update product price.
	UpdatePrice(context.Context, *UpdatePriceRequest) (*UpdatePriceResponse, error)
	// Get current value for registered price.
	GetPrice(context.Context, *GetPriceRequest) (*GetPriceResponse, error)
	// Send information to the system, that the product has been purchased.
	// This rpc call can affect a product price.
	BuyProduct(context.Context, *BuyProductRequest) (*BuyProductResponse, error)
	// Subscribe to events related to a product.
	WatchProduct(*WatchProductRequest, MruVEconomyService_WatchProductServer) error
	// Subscribe to product price changes.
	WatchPrice(*WatchPriceRequest, MruVEconomyService_WatchPriceServer) error
}

// UnimplementedMruVEconomyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVEconomyServiceServer struct {
}

func (*UnimplementedMruVEconomyServiceServer) RegisterProduct(context.Context, *RegisterProductRequest) (*RegisterProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterProduct not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) GetProduct(context.Context, *GetProductRequest) (*GetProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProduct not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) UpdateProduct(context.Context, *UpdateProductRequest) (*UpdateProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateProduct not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) DeleteProduct(context.Context, *DeleteProductRequest) (*DeleteProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteProduct not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) UpdatePrice(context.Context, *UpdatePriceRequest) (*UpdatePriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePrice not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) GetPrice(context.Context, *GetPriceRequest) (*GetPriceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrice not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) BuyProduct(context.Context, *BuyProductRequest) (*BuyProductResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BuyProduct not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) WatchProduct(*WatchProductRequest, MruVEconomyService_WatchProductServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchProduct not implemented")
}
func (*UnimplementedMruVEconomyServiceServer) WatchPrice(*WatchPriceRequest, MruVEconomyService_WatchPriceServer) error {
	return status.Errorf(codes.Unimplemented, "method WatchPrice not implemented")
}

func RegisterMruVEconomyServiceServer(s *grpc.Server, srv MruVEconomyServiceServer) {
	s.RegisterService(&_MruVEconomyService_serviceDesc, srv)
}

func _MruVEconomyService_RegisterProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEconomyServiceServer).RegisterProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.economy.MruVEconomyService/RegisterProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEconomyServiceServer).RegisterProduct(ctx, req.(*RegisterProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEconomyService_GetProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEconomyServiceServer).GetProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.economy.MruVEconomyService/GetProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEconomyServiceServer).GetProduct(ctx, req.(*GetProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEconomyService_UpdateProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEconomyServiceServer).UpdateProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.economy.MruVEconomyService/UpdateProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEconomyServiceServer).UpdateProduct(ctx, req.(*UpdateProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEconomyService_DeleteProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEconomyServiceServer).DeleteProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.economy.MruVEconomyService/DeleteProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEconomyServiceServer).DeleteProduct(ctx, req.(*DeleteProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEconomyService_UpdatePrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdatePriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEconomyServiceServer).UpdatePrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.economy.MruVEconomyService/UpdatePrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEconomyServiceServer).UpdatePrice(ctx, req.(*UpdatePriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEconomyService_GetPrice_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPriceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEconomyServiceServer).GetPrice(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.economy.MruVEconomyService/GetPrice",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEconomyServiceServer).GetPrice(ctx, req.(*GetPriceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEconomyService_BuyProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuyProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEconomyServiceServer).BuyProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.economy.MruVEconomyService/BuyProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEconomyServiceServer).BuyProduct(ctx, req.(*BuyProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEconomyService_WatchProduct_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchProductRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVEconomyServiceServer).WatchProduct(m, &mruVEconomyServiceWatchProductServer{stream})
}

type MruVEconomyService_WatchProductServer interface {
	Send(*WatchProductResponse) error
	grpc.ServerStream
}

type mruVEconomyServiceWatchProductServer struct {
	grpc.ServerStream
}

func (x *mruVEconomyServiceWatchProductServer) Send(m *WatchProductResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MruVEconomyService_WatchPrice_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(WatchPriceRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVEconomyServiceServer).WatchPrice(m, &mruVEconomyServiceWatchPriceServer{stream})
}

type MruVEconomyService_WatchPriceServer interface {
	Send(*WatchPriceResponse) error
	grpc.ServerStream
}

type mruVEconomyServiceWatchPriceServer struct {
	grpc.ServerStream
}

func (x *mruVEconomyServiceWatchPriceServer) Send(m *WatchPriceResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVEconomyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.economy.MruVEconomyService",
	HandlerType: (*MruVEconomyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterProduct",
			Handler:    _MruVEconomyService_RegisterProduct_Handler,
		},
		{
			MethodName: "GetProduct",
			Handler:    _MruVEconomyService_GetProduct_Handler,
		},
		{
			MethodName: "UpdateProduct",
			Handler:    _MruVEconomyService_UpdateProduct_Handler,
		},
		{
			MethodName: "DeleteProduct",
			Handler:    _MruVEconomyService_DeleteProduct_Handler,
		},
		{
			MethodName: "UpdatePrice",
			Handler:    _MruVEconomyService_UpdatePrice_Handler,
		},
		{
			MethodName: "GetPrice",
			Handler:    _MruVEconomyService_GetPrice_Handler,
		},
		{
			MethodName: "BuyProduct",
			Handler:    _MruVEconomyService_BuyProduct_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "WatchProduct",
			Handler:       _MruVEconomyService_WatchProduct_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "WatchPrice",
			Handler:       _MruVEconomyService_WatchPrice_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "economy/economy.proto",
}
