// Code generated by protoc-gen-go. DO NOT EDIT.
// source: texturestudio/server.proto

package texturestudio

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ServerStatus int32

const (
	ServerStatus_UNKNOWN_STATUS ServerStatus = 0
	ServerStatus_ON             ServerStatus = 1
	ServerStatus_OFF            ServerStatus = 2
)

var ServerStatus_name = map[int32]string{
	0: "UNKNOWN_STATUS",
	1: "ON",
	2: "OFF",
}

var ServerStatus_value = map[string]int32{
	"UNKNOWN_STATUS": 0,
	"ON":             1,
	"OFF":            2,
}

func (x ServerStatus) String() string {
	return proto.EnumName(ServerStatus_name, int32(x))
}

func (ServerStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{0}
}

// Request message for rpc `StartServer`.
type StartServerRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartServerRequest) Reset()         { *m = StartServerRequest{} }
func (m *StartServerRequest) String() string { return proto.CompactTextString(m) }
func (*StartServerRequest) ProtoMessage()    {}
func (*StartServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{0}
}

func (m *StartServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartServerRequest.Unmarshal(m, b)
}
func (m *StartServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartServerRequest.Marshal(b, m, deterministic)
}
func (m *StartServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartServerRequest.Merge(m, src)
}
func (m *StartServerRequest) XXX_Size() int {
	return xxx_messageInfo_StartServerRequest.Size(m)
}
func (m *StartServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StartServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StartServerRequest proto.InternalMessageInfo

func (m *StartServerRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `StartServer`.
type StartServerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StartServerResponse) Reset()         { *m = StartServerResponse{} }
func (m *StartServerResponse) String() string { return proto.CompactTextString(m) }
func (*StartServerResponse) ProtoMessage()    {}
func (*StartServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{1}
}

func (m *StartServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StartServerResponse.Unmarshal(m, b)
}
func (m *StartServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StartServerResponse.Marshal(b, m, deterministic)
}
func (m *StartServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StartServerResponse.Merge(m, src)
}
func (m *StartServerResponse) XXX_Size() int {
	return xxx_messageInfo_StartServerResponse.Size(m)
}
func (m *StartServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StartServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StartServerResponse proto.InternalMessageInfo

// Request message for rpc `StopServer`.
type StopServerRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopServerRequest) Reset()         { *m = StopServerRequest{} }
func (m *StopServerRequest) String() string { return proto.CompactTextString(m) }
func (*StopServerRequest) ProtoMessage()    {}
func (*StopServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{2}
}

func (m *StopServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopServerRequest.Unmarshal(m, b)
}
func (m *StopServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopServerRequest.Marshal(b, m, deterministic)
}
func (m *StopServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopServerRequest.Merge(m, src)
}
func (m *StopServerRequest) XXX_Size() int {
	return xxx_messageInfo_StopServerRequest.Size(m)
}
func (m *StopServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StopServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StopServerRequest proto.InternalMessageInfo

func (m *StopServerRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `StopServer`.
type StopServerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StopServerResponse) Reset()         { *m = StopServerResponse{} }
func (m *StopServerResponse) String() string { return proto.CompactTextString(m) }
func (*StopServerResponse) ProtoMessage()    {}
func (*StopServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{3}
}

func (m *StopServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StopServerResponse.Unmarshal(m, b)
}
func (m *StopServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StopServerResponse.Marshal(b, m, deterministic)
}
func (m *StopServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StopServerResponse.Merge(m, src)
}
func (m *StopServerResponse) XXX_Size() int {
	return xxx_messageInfo_StopServerResponse.Size(m)
}
func (m *StopServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StopServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StopServerResponse proto.InternalMessageInfo

// Request message for rpc `RestartServer`.
type RestartServerRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestartServerRequest) Reset()         { *m = RestartServerRequest{} }
func (m *RestartServerRequest) String() string { return proto.CompactTextString(m) }
func (*RestartServerRequest) ProtoMessage()    {}
func (*RestartServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{4}
}

func (m *RestartServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartServerRequest.Unmarshal(m, b)
}
func (m *RestartServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartServerRequest.Marshal(b, m, deterministic)
}
func (m *RestartServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartServerRequest.Merge(m, src)
}
func (m *RestartServerRequest) XXX_Size() int {
	return xxx_messageInfo_RestartServerRequest.Size(m)
}
func (m *RestartServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RestartServerRequest proto.InternalMessageInfo

func (m *RestartServerRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `RestartServer`.
type RestartServerResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RestartServerResponse) Reset()         { *m = RestartServerResponse{} }
func (m *RestartServerResponse) String() string { return proto.CompactTextString(m) }
func (*RestartServerResponse) ProtoMessage()    {}
func (*RestartServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{5}
}

func (m *RestartServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RestartServerResponse.Unmarshal(m, b)
}
func (m *RestartServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RestartServerResponse.Marshal(b, m, deterministic)
}
func (m *RestartServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RestartServerResponse.Merge(m, src)
}
func (m *RestartServerResponse) XXX_Size() int {
	return xxx_messageInfo_RestartServerResponse.Size(m)
}
func (m *RestartServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RestartServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RestartServerResponse proto.InternalMessageInfo

// Request message for rpc `ServerStatus`.
type ServerStatusRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerStatusRequest) Reset()         { *m = ServerStatusRequest{} }
func (m *ServerStatusRequest) String() string { return proto.CompactTextString(m) }
func (*ServerStatusRequest) ProtoMessage()    {}
func (*ServerStatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{6}
}

func (m *ServerStatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStatusRequest.Unmarshal(m, b)
}
func (m *ServerStatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStatusRequest.Marshal(b, m, deterministic)
}
func (m *ServerStatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStatusRequest.Merge(m, src)
}
func (m *ServerStatusRequest) XXX_Size() int {
	return xxx_messageInfo_ServerStatusRequest.Size(m)
}
func (m *ServerStatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStatusRequest proto.InternalMessageInfo

func (m *ServerStatusRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `ServerStatus`.
type ServerStatusResponse struct {
	Port                 uint32       `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Status               ServerStatus `protobuf:"varint,2,opt,name=status,proto3,enum=texture_studio.ServerStatus" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ServerStatusResponse) Reset()         { *m = ServerStatusResponse{} }
func (m *ServerStatusResponse) String() string { return proto.CompactTextString(m) }
func (*ServerStatusResponse) ProtoMessage()    {}
func (*ServerStatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{7}
}

func (m *ServerStatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerStatusResponse.Unmarshal(m, b)
}
func (m *ServerStatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerStatusResponse.Marshal(b, m, deterministic)
}
func (m *ServerStatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerStatusResponse.Merge(m, src)
}
func (m *ServerStatusResponse) XXX_Size() int {
	return xxx_messageInfo_ServerStatusResponse.Size(m)
}
func (m *ServerStatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerStatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerStatusResponse proto.InternalMessageInfo

func (m *ServerStatusResponse) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ServerStatusResponse) GetStatus() ServerStatus {
	if m != nil {
		return m.Status
	}
	return ServerStatus_UNKNOWN_STATUS
}

// Request message for rpc `UploadProject`.
type UploadProjectRequest struct {
	ServerId    uint32 `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	ProjectName string `protobuf:"bytes,2,opt,name=project_name,json=projectName,proto3" json:"project_name,omitempty"`
	// Types that are valid to be assigned to Project:
	//	*UploadProjectRequest_Code
	//	*UploadProjectRequest_File
	Project              isUploadProjectRequest_Project `protobuf_oneof:"project"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *UploadProjectRequest) Reset()         { *m = UploadProjectRequest{} }
func (m *UploadProjectRequest) String() string { return proto.CompactTextString(m) }
func (*UploadProjectRequest) ProtoMessage()    {}
func (*UploadProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{8}
}

func (m *UploadProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadProjectRequest.Unmarshal(m, b)
}
func (m *UploadProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadProjectRequest.Marshal(b, m, deterministic)
}
func (m *UploadProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadProjectRequest.Merge(m, src)
}
func (m *UploadProjectRequest) XXX_Size() int {
	return xxx_messageInfo_UploadProjectRequest.Size(m)
}
func (m *UploadProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UploadProjectRequest proto.InternalMessageInfo

func (m *UploadProjectRequest) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *UploadProjectRequest) GetProjectName() string {
	if m != nil {
		return m.ProjectName
	}
	return ""
}

type isUploadProjectRequest_Project interface {
	isUploadProjectRequest_Project()
}

type UploadProjectRequest_Code struct {
	Code string `protobuf:"bytes,4,opt,name=code,proto3,oneof"`
}

type UploadProjectRequest_File struct {
	File []byte `protobuf:"bytes,5,opt,name=file,proto3,oneof"`
}

func (*UploadProjectRequest_Code) isUploadProjectRequest_Project() {}

func (*UploadProjectRequest_File) isUploadProjectRequest_Project() {}

func (m *UploadProjectRequest) GetProject() isUploadProjectRequest_Project {
	if m != nil {
		return m.Project
	}
	return nil
}

func (m *UploadProjectRequest) GetCode() string {
	if x, ok := m.GetProject().(*UploadProjectRequest_Code); ok {
		return x.Code
	}
	return ""
}

func (m *UploadProjectRequest) GetFile() []byte {
	if x, ok := m.GetProject().(*UploadProjectRequest_File); ok {
		return x.File
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*UploadProjectRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*UploadProjectRequest_Code)(nil),
		(*UploadProjectRequest_File)(nil),
	}
}

// Response message for rpc `UploadProject`.
type UploadProjectResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UploadProjectResponse) Reset()         { *m = UploadProjectResponse{} }
func (m *UploadProjectResponse) String() string { return proto.CompactTextString(m) }
func (*UploadProjectResponse) ProtoMessage()    {}
func (*UploadProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{9}
}

func (m *UploadProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UploadProjectResponse.Unmarshal(m, b)
}
func (m *UploadProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UploadProjectResponse.Marshal(b, m, deterministic)
}
func (m *UploadProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UploadProjectResponse.Merge(m, src)
}
func (m *UploadProjectResponse) XXX_Size() int {
	return xxx_messageInfo_UploadProjectResponse.Size(m)
}
func (m *UploadProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UploadProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UploadProjectResponse proto.InternalMessageInfo

// Request message for rpc `GetProject`.
type GetProjectRequest struct {
	ServerId             uint32   `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectRequest) Reset()         { *m = GetProjectRequest{} }
func (m *GetProjectRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectRequest) ProtoMessage()    {}
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{10}
}

func (m *GetProjectRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectRequest.Unmarshal(m, b)
}
func (m *GetProjectRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectRequest.Merge(m, src)
}
func (m *GetProjectRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectRequest.Size(m)
}
func (m *GetProjectRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectRequest proto.InternalMessageInfo

func (m *GetProjectRequest) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

func (m *GetProjectRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// Response message for rpc `GetProject`.
type GetProjectResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectResponse) Reset()         { *m = GetProjectResponse{} }
func (m *GetProjectResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectResponse) ProtoMessage()    {}
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{11}
}

func (m *GetProjectResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectResponse.Unmarshal(m, b)
}
func (m *GetProjectResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectResponse.Merge(m, src)
}
func (m *GetProjectResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectResponse.Size(m)
}
func (m *GetProjectResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectResponse proto.InternalMessageInfo

func (m *GetProjectResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

// Request message for rpc `GetProjects`.
type GetProjectsRequest struct {
	ServerId             uint32   `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectsRequest) Reset()         { *m = GetProjectsRequest{} }
func (m *GetProjectsRequest) String() string { return proto.CompactTextString(m) }
func (*GetProjectsRequest) ProtoMessage()    {}
func (*GetProjectsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{12}
}

func (m *GetProjectsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsRequest.Unmarshal(m, b)
}
func (m *GetProjectsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsRequest.Marshal(b, m, deterministic)
}
func (m *GetProjectsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsRequest.Merge(m, src)
}
func (m *GetProjectsRequest) XXX_Size() int {
	return xxx_messageInfo_GetProjectsRequest.Size(m)
}
func (m *GetProjectsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsRequest proto.InternalMessageInfo

func (m *GetProjectsRequest) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// Response message for rpc `GetProjects`.
type GetProjectsResponse struct {
	Names                []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetProjectsResponse) Reset()         { *m = GetProjectsResponse{} }
func (m *GetProjectsResponse) String() string { return proto.CompactTextString(m) }
func (*GetProjectsResponse) ProtoMessage()    {}
func (*GetProjectsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{13}
}

func (m *GetProjectsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetProjectsResponse.Unmarshal(m, b)
}
func (m *GetProjectsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetProjectsResponse.Marshal(b, m, deterministic)
}
func (m *GetProjectsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetProjectsResponse.Merge(m, src)
}
func (m *GetProjectsResponse) XXX_Size() int {
	return xxx_messageInfo_GetProjectsResponse.Size(m)
}
func (m *GetProjectsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetProjectsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetProjectsResponse proto.InternalMessageInfo

func (m *GetProjectsResponse) GetNames() []string {
	if m != nil {
		return m.Names
	}
	return nil
}

// Request message for rpc `SubscribeToProjectsChanges`.
type SubscribeToProjectsChangesRequest struct {
	ServerId             uint32   `protobuf:"varint,1,opt,name=server_id,json=serverId,proto3" json:"server_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeToProjectsChangesRequest) Reset()         { *m = SubscribeToProjectsChangesRequest{} }
func (m *SubscribeToProjectsChangesRequest) String() string { return proto.CompactTextString(m) }
func (*SubscribeToProjectsChangesRequest) ProtoMessage()    {}
func (*SubscribeToProjectsChangesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{14}
}

func (m *SubscribeToProjectsChangesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeToProjectsChangesRequest.Unmarshal(m, b)
}
func (m *SubscribeToProjectsChangesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeToProjectsChangesRequest.Marshal(b, m, deterministic)
}
func (m *SubscribeToProjectsChangesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeToProjectsChangesRequest.Merge(m, src)
}
func (m *SubscribeToProjectsChangesRequest) XXX_Size() int {
	return xxx_messageInfo_SubscribeToProjectsChangesRequest.Size(m)
}
func (m *SubscribeToProjectsChangesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeToProjectsChangesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeToProjectsChangesRequest proto.InternalMessageInfo

func (m *SubscribeToProjectsChangesRequest) GetServerId() uint32 {
	if m != nil {
		return m.ServerId
	}
	return 0
}

// Response message for rpc `SubscribeToProjectsChanges`.
type SubscribeToProjectsChangesResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubscribeToProjectsChangesResponse) Reset()         { *m = SubscribeToProjectsChangesResponse{} }
func (m *SubscribeToProjectsChangesResponse) String() string { return proto.CompactTextString(m) }
func (*SubscribeToProjectsChangesResponse) ProtoMessage()    {}
func (*SubscribeToProjectsChangesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7c53cdfa8f450091, []int{15}
}

func (m *SubscribeToProjectsChangesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubscribeToProjectsChangesResponse.Unmarshal(m, b)
}
func (m *SubscribeToProjectsChangesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubscribeToProjectsChangesResponse.Marshal(b, m, deterministic)
}
func (m *SubscribeToProjectsChangesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubscribeToProjectsChangesResponse.Merge(m, src)
}
func (m *SubscribeToProjectsChangesResponse) XXX_Size() int {
	return xxx_messageInfo_SubscribeToProjectsChangesResponse.Size(m)
}
func (m *SubscribeToProjectsChangesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SubscribeToProjectsChangesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SubscribeToProjectsChangesResponse proto.InternalMessageInfo

func (m *SubscribeToProjectsChangesResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterEnum("texture_studio.ServerStatus", ServerStatus_name, ServerStatus_value)
	proto.RegisterType((*StartServerRequest)(nil), "texture_studio.StartServerRequest")
	proto.RegisterType((*StartServerResponse)(nil), "texture_studio.StartServerResponse")
	proto.RegisterType((*StopServerRequest)(nil), "texture_studio.StopServerRequest")
	proto.RegisterType((*StopServerResponse)(nil), "texture_studio.StopServerResponse")
	proto.RegisterType((*RestartServerRequest)(nil), "texture_studio.RestartServerRequest")
	proto.RegisterType((*RestartServerResponse)(nil), "texture_studio.RestartServerResponse")
	proto.RegisterType((*ServerStatusRequest)(nil), "texture_studio.ServerStatusRequest")
	proto.RegisterType((*ServerStatusResponse)(nil), "texture_studio.ServerStatusResponse")
	proto.RegisterType((*UploadProjectRequest)(nil), "texture_studio.UploadProjectRequest")
	proto.RegisterType((*UploadProjectResponse)(nil), "texture_studio.UploadProjectResponse")
	proto.RegisterType((*GetProjectRequest)(nil), "texture_studio.GetProjectRequest")
	proto.RegisterType((*GetProjectResponse)(nil), "texture_studio.GetProjectResponse")
	proto.RegisterType((*GetProjectsRequest)(nil), "texture_studio.GetProjectsRequest")
	proto.RegisterType((*GetProjectsResponse)(nil), "texture_studio.GetProjectsResponse")
	proto.RegisterType((*SubscribeToProjectsChangesRequest)(nil), "texture_studio.SubscribeToProjectsChangesRequest")
	proto.RegisterType((*SubscribeToProjectsChangesResponse)(nil), "texture_studio.SubscribeToProjectsChangesResponse")
}

func init() { proto.RegisterFile("texturestudio/server.proto", fileDescriptor_7c53cdfa8f450091) }

var fileDescriptor_7c53cdfa8f450091 = []byte{
	// 741 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x56, 0xdf, 0x4f, 0x1a, 0x4b,
	0x14, 0x76, 0x10, 0xf5, 0x72, 0x54, 0xa2, 0x23, 0xe6, 0x92, 0xbd, 0x3e, 0xe0, 0x00, 0x5e, 0xa2,
	0x17, 0xf6, 0x8a, 0xb6, 0x31, 0x4d, 0x1f, 0x5a, 0xdb, 0xd8, 0x36, 0x4d, 0xd1, 0xb0, 0xd8, 0x26,
	0x7d, 0xa1, 0x0b, 0x4c, 0x71, 0x1b, 0x61, 0xb6, 0x3b, 0xb3, 0xa4, 0x89, 0x31, 0x4d, 0xec, 0x43,
	0x1f, 0x1a, 0x1f, 0x9a, 0x26, 0xfd, 0xc7, 0xfa, 0x2f, 0xf4, 0x0f, 0x69, 0x76, 0x76, 0x14, 0x96,
	0x85, 0x45, 0xde, 0xe6, 0xc7, 0x77, 0xce, 0xf9, 0xf6, 0xcc, 0xf9, 0xbe, 0x2c, 0x68, 0x82, 0x7e,
	0x12, 0xae, 0x43, 0xb9, 0x70, 0x5b, 0x16, 0xd3, 0x39, 0x75, 0x7a, 0xd4, 0x29, 0xd9, 0x0e, 0x13,
	0x0c, 0x27, 0xd5, 0x5d, 0xdd, 0xbf, 0xd4, 0x36, 0xda, 0x8c, 0xb5, 0xcf, 0xa9, 0x6e, 0xda, 0x96,
	0x6e, 0x76, 0xbb, 0x4c, 0x98, 0xc2, 0x62, 0x5d, 0xee, 0xa3, 0x49, 0x0e, 0xb0, 0x21, 0x4c, 0x47,
	0x18, 0x32, 0x45, 0x95, 0x7e, 0x74, 0x29, 0x17, 0x38, 0x09, 0x31, 0xab, 0x95, 0x46, 0x19, 0x54,
	0x58, 0xae, 0xc6, 0xac, 0x16, 0x59, 0x87, 0xb5, 0x00, 0x8a, 0xdb, 0xac, 0xcb, 0x29, 0xc9, 0xc2,
	0xaa, 0x21, 0x98, 0x1d, 0x1d, 0x9b, 0xf2, 0x2a, 0xf4, 0x41, 0x2a, 0x74, 0x0b, 0x52, 0x55, 0xca,
	0x27, 0x57, 0xfe, 0x1b, 0xd6, 0x87, 0x70, 0x2a, 0x41, 0x1e, 0xd6, 0xfc, 0x13, 0x43, 0x98, 0xc2,
	0xe5, 0xe3, 0xe2, 0xdf, 0x41, 0x2a, 0x08, 0xf3, 0xc3, 0x31, 0x86, 0xb8, 0xcd, 0x1c, 0xa1, 0x90,
	0x72, 0x8d, 0xf7, 0x61, 0x9e, 0x4b, 0x54, 0x3a, 0x96, 0x41, 0x85, 0x64, 0x79, 0xa3, 0x14, 0x6c,
	0x65, 0x29, 0x90, 0x49, 0x61, 0xc9, 0x35, 0x82, 0xd4, 0xa9, 0x7d, 0xce, 0xcc, 0xd6, 0x89, 0xc3,
	0x3e, 0xd0, 0xa6, 0xb8, 0xa1, 0xf2, 0x0f, 0x24, 0xfc, 0x87, 0xa9, 0xdf, 0x32, 0xfa, 0xcb, 0x3f,
	0x78, 0xd1, 0xc2, 0x9b, 0xb0, 0x64, 0xfb, 0xf0, 0x7a, 0xd7, 0xec, 0x50, 0x59, 0x31, 0x51, 0x5d,
	0x54, 0x67, 0x15, 0xb3, 0x43, 0x71, 0x0a, 0xe2, 0x4d, 0xd6, 0xa2, 0xe9, 0xb8, 0x77, 0xf5, 0x7c,
	0xa6, 0x2a, 0x77, 0xde, 0xe9, 0x7b, 0xeb, 0x9c, 0xa6, 0xe7, 0x32, 0xa8, 0xb0, 0xe4, 0x9d, 0x7a,
	0xbb, 0xc3, 0x04, 0x2c, 0xa8, 0x50, 0xaf, 0x63, 0x43, 0x74, 0x54, 0xc7, 0x9e, 0xc2, 0xea, 0x33,
	0x2a, 0xa6, 0x21, 0x89, 0x21, 0x3e, 0x40, 0x4e, 0xae, 0x49, 0x01, 0xf0, 0x60, 0x96, 0x7e, 0x3b,
	0x25, 0x57, 0xe4, 0x23, 0xbd, 0x35, 0xd9, 0x1d, 0x44, 0xf2, 0xbb, 0x14, 0x24, 0x3b, 0xb0, 0x16,
	0x08, 0x51, 0xd9, 0x53, 0x30, 0xe7, 0xd5, 0xe6, 0x69, 0x94, 0x99, 0x2d, 0x24, 0xaa, 0xfe, 0x86,
	0x3c, 0x82, 0x4d, 0xc3, 0x6d, 0xf0, 0xa6, 0x63, 0x35, 0x68, 0x8d, 0xdd, 0x04, 0x3d, 0x39, 0x33,
	0xbb, 0x6d, 0x7a, 0xb7, 0x72, 0x07, 0x40, 0xa2, 0x32, 0xf4, 0xbf, 0x4d, 0x76, 0x01, 0xf5, 0xbb,
	0xb0, 0xbd, 0x07, 0x4b, 0x83, 0xc3, 0x80, 0x31, 0x24, 0x4f, 0x2b, 0x2f, 0x2b, 0xc7, 0x6f, 0x2a,
	0x75, 0xa3, 0xf6, 0xb8, 0x76, 0x6a, 0xac, 0xcc, 0xe0, 0x79, 0x88, 0x1d, 0x57, 0x56, 0x10, 0x5e,
	0x80, 0xd9, 0xe3, 0xa3, 0xa3, 0x95, 0x58, 0xf9, 0x2a, 0x01, 0x5a, 0xcd, 0x9f, 0x28, 0x43, 0x0e,
	0x94, 0x4a, 0x41, 0x9d, 0x9e, 0xd5, 0xa4, 0xf8, 0x0b, 0x82, 0xc5, 0x01, 0x95, 0x61, 0x12, 0x1a,
	0xbf, 0x90, 0x5c, 0xb4, 0x6c, 0x24, 0x46, 0x3d, 0xfc, 0xce, 0xd5, 0xaf, 0xdf, 0x3f, 0x62, 0x79,
	0x92, 0xd5, 0x7b, 0xbb, 0xfa, 0x28, 0xe7, 0xd0, 0x2f, 0xac, 0xd6, 0xa5, 0x2e, 0x55, 0x86, 0x3f,
	0x03, 0xf4, 0xe5, 0x8a, 0x37, 0xc3, 0xf9, 0x87, 0xf4, 0xae, 0x91, 0x28, 0x88, 0x62, 0xb0, 0x2d,
	0x19, 0xe4, 0x08, 0x99, 0xc4, 0x80, 0xd9, 0xf8, 0x1b, 0x82, 0xe5, 0x80, 0xe4, 0x71, 0x6e, 0xb8,
	0xc2, 0x28, 0xe7, 0xd0, 0xf2, 0x13, 0x50, 0x8a, 0x4a, 0x51, 0x52, 0xf9, 0x97, 0xe4, 0xa3, 0xa9,
	0x38, 0x7e, 0x30, 0xfe, 0x8a, 0x86, 0x5e, 0x3a, 0x1b, 0x69, 0x0a, 0x8a, 0x4b, 0x2e, 0x1a, 0xa4,
	0xa8, 0xfc, 0x27, 0xa9, 0x6c, 0xe1, 0xdc, 0xc4, 0x77, 0xf1, 0x0a, 0xff, 0x44, 0xb0, 0x1c, 0x10,
	0x76, 0xb8, 0x2f, 0xa3, 0x6c, 0x28, 0xdc, 0x97, 0xd1, 0xee, 0x70, 0x20, 0xc9, 0x94, 0x49, 0x71,
	0x3c, 0x99, 0x5b, 0x21, 0x5d, 0xea, 0xca, 0x6c, 0xf8, 0x03, 0xb4, 0x8d, 0xbf, 0x23, 0x80, 0xbe,
	0x6a, 0xc3, 0x23, 0x13, 0x32, 0x9d, 0xf0, 0xc8, 0x84, 0x1d, 0x85, 0x3c, 0x94, 0x7c, 0xee, 0xe3,
	0xfd, 0xa9, 0xf8, 0xe8, 0x17, 0x9e, 0x3c, 0x2f, 0xf1, 0x35, 0x82, 0xc5, 0x01, 0x27, 0xc1, 0x11,
	0x15, 0xf9, 0x58, 0x2d, 0x8d, 0xb0, 0x22, 0x72, 0x4f, 0xd2, 0xd2, 0xf1, 0x74, 0x6d, 0xf2, 0xc6,
	0x48, 0x1b, 0x6f, 0x35, 0x78, 0x37, 0x34, 0x2f, 0x93, 0x8c, 0x4d, 0x2b, 0x4f, 0x13, 0xa2, 0xc8,
	0xcf, 0xfc, 0x8f, 0x0e, 0x8b, 0x6f, 0x77, 0xda, 0x96, 0x38, 0x73, 0x1b, 0xa5, 0x26, 0xeb, 0xe8,
	0xaf, 0x1c, 0xf7, 0x75, 0xb1, 0x7a, 0xa2, 0x77, 0x1c, 0xb7, 0x57, 0xb4, 0x1b, 0xc5, 0x36, 0x0b,
	0x7e, 0x54, 0x63, 0x5e, 0xfe, 0x26, 0xec, 0xfd, 0x09, 0x00, 0x00, 0xff, 0xff, 0x75, 0xcd, 0xa5,
	0xbc, 0x72, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// TextureStudioServerServiceClient is the client API for TextureStudioServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TextureStudioServerServiceClient interface {
	// Start a texture studio server.
	StartServer(ctx context.Context, in *StartServerRequest, opts ...grpc.CallOption) (*StartServerResponse, error)
	// Stop a texture studio server.
	StopServer(ctx context.Context, in *StopServerRequest, opts ...grpc.CallOption) (*StopServerResponse, error)
	// Restart a texture studio server.
	RestartServer(ctx context.Context, in *RestartServerRequest, opts ...grpc.CallOption) (*RestartServerResponse, error)
	// Get texture studio server status.
	ServerStatus(ctx context.Context, in *ServerStatusRequest, opts ...grpc.CallOption) (*ServerStatusResponse, error)
	// Upload project to texture studio.
	UploadProject(ctx context.Context, in *UploadProjectRequest, opts ...grpc.CallOption) (*UploadProjectResponse, error)
	// Get texture-studio objects project.
	GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error)
	// Get all projects.
	GetProjects(ctx context.Context, in *GetProjectsRequest, opts ...grpc.CallOption) (*GetProjectsResponse, error)
	// Listen for project changes - if texture studio project has been created or modified, this will trigger an event.
	SubscribeToProjectsChanges(ctx context.Context, in *SubscribeToProjectsChangesRequest, opts ...grpc.CallOption) (TextureStudioServerService_SubscribeToProjectsChangesClient, error)
}

type textureStudioServerServiceClient struct {
	cc *grpc.ClientConn
}

func NewTextureStudioServerServiceClient(cc *grpc.ClientConn) TextureStudioServerServiceClient {
	return &textureStudioServerServiceClient{cc}
}

func (c *textureStudioServerServiceClient) StartServer(ctx context.Context, in *StartServerRequest, opts ...grpc.CallOption) (*StartServerResponse, error) {
	out := new(StartServerResponse)
	err := c.cc.Invoke(ctx, "/texture_studio.TextureStudioServerService/StartServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textureStudioServerServiceClient) StopServer(ctx context.Context, in *StopServerRequest, opts ...grpc.CallOption) (*StopServerResponse, error) {
	out := new(StopServerResponse)
	err := c.cc.Invoke(ctx, "/texture_studio.TextureStudioServerService/StopServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textureStudioServerServiceClient) RestartServer(ctx context.Context, in *RestartServerRequest, opts ...grpc.CallOption) (*RestartServerResponse, error) {
	out := new(RestartServerResponse)
	err := c.cc.Invoke(ctx, "/texture_studio.TextureStudioServerService/RestartServer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textureStudioServerServiceClient) ServerStatus(ctx context.Context, in *ServerStatusRequest, opts ...grpc.CallOption) (*ServerStatusResponse, error) {
	out := new(ServerStatusResponse)
	err := c.cc.Invoke(ctx, "/texture_studio.TextureStudioServerService/ServerStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textureStudioServerServiceClient) UploadProject(ctx context.Context, in *UploadProjectRequest, opts ...grpc.CallOption) (*UploadProjectResponse, error) {
	out := new(UploadProjectResponse)
	err := c.cc.Invoke(ctx, "/texture_studio.TextureStudioServerService/UploadProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textureStudioServerServiceClient) GetProject(ctx context.Context, in *GetProjectRequest, opts ...grpc.CallOption) (*GetProjectResponse, error) {
	out := new(GetProjectResponse)
	err := c.cc.Invoke(ctx, "/texture_studio.TextureStudioServerService/GetProject", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textureStudioServerServiceClient) GetProjects(ctx context.Context, in *GetProjectsRequest, opts ...grpc.CallOption) (*GetProjectsResponse, error) {
	out := new(GetProjectsResponse)
	err := c.cc.Invoke(ctx, "/texture_studio.TextureStudioServerService/GetProjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *textureStudioServerServiceClient) SubscribeToProjectsChanges(ctx context.Context, in *SubscribeToProjectsChangesRequest, opts ...grpc.CallOption) (TextureStudioServerService_SubscribeToProjectsChangesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_TextureStudioServerService_serviceDesc.Streams[0], "/texture_studio.TextureStudioServerService/SubscribeToProjectsChanges", opts...)
	if err != nil {
		return nil, err
	}
	x := &textureStudioServerServiceSubscribeToProjectsChangesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type TextureStudioServerService_SubscribeToProjectsChangesClient interface {
	Recv() (*SubscribeToProjectsChangesResponse, error)
	grpc.ClientStream
}

type textureStudioServerServiceSubscribeToProjectsChangesClient struct {
	grpc.ClientStream
}

func (x *textureStudioServerServiceSubscribeToProjectsChangesClient) Recv() (*SubscribeToProjectsChangesResponse, error) {
	m := new(SubscribeToProjectsChangesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// TextureStudioServerServiceServer is the server API for TextureStudioServerService service.
type TextureStudioServerServiceServer interface {
	// Start a texture studio server.
	StartServer(context.Context, *StartServerRequest) (*StartServerResponse, error)
	// Stop a texture studio server.
	StopServer(context.Context, *StopServerRequest) (*StopServerResponse, error)
	// Restart a texture studio server.
	RestartServer(context.Context, *RestartServerRequest) (*RestartServerResponse, error)
	// Get texture studio server status.
	ServerStatus(context.Context, *ServerStatusRequest) (*ServerStatusResponse, error)
	// Upload project to texture studio.
	UploadProject(context.Context, *UploadProjectRequest) (*UploadProjectResponse, error)
	// Get texture-studio objects project.
	GetProject(context.Context, *GetProjectRequest) (*GetProjectResponse, error)
	// Get all projects.
	GetProjects(context.Context, *GetProjectsRequest) (*GetProjectsResponse, error)
	// Listen for project changes - if texture studio project has been created or modified, this will trigger an event.
	SubscribeToProjectsChanges(*SubscribeToProjectsChangesRequest, TextureStudioServerService_SubscribeToProjectsChangesServer) error
}

// UnimplementedTextureStudioServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedTextureStudioServerServiceServer struct {
}

func (*UnimplementedTextureStudioServerServiceServer) StartServer(ctx context.Context, req *StartServerRequest) (*StartServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StartServer not implemented")
}
func (*UnimplementedTextureStudioServerServiceServer) StopServer(ctx context.Context, req *StopServerRequest) (*StopServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method StopServer not implemented")
}
func (*UnimplementedTextureStudioServerServiceServer) RestartServer(ctx context.Context, req *RestartServerRequest) (*RestartServerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RestartServer not implemented")
}
func (*UnimplementedTextureStudioServerServiceServer) ServerStatus(ctx context.Context, req *ServerStatusRequest) (*ServerStatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerStatus not implemented")
}
func (*UnimplementedTextureStudioServerServiceServer) UploadProject(ctx context.Context, req *UploadProjectRequest) (*UploadProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UploadProject not implemented")
}
func (*UnimplementedTextureStudioServerServiceServer) GetProject(ctx context.Context, req *GetProjectRequest) (*GetProjectResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProject not implemented")
}
func (*UnimplementedTextureStudioServerServiceServer) GetProjects(ctx context.Context, req *GetProjectsRequest) (*GetProjectsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetProjects not implemented")
}
func (*UnimplementedTextureStudioServerServiceServer) SubscribeToProjectsChanges(req *SubscribeToProjectsChangesRequest, srv TextureStudioServerService_SubscribeToProjectsChangesServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeToProjectsChanges not implemented")
}

func RegisterTextureStudioServerServiceServer(s *grpc.Server, srv TextureStudioServerServiceServer) {
	s.RegisterService(&_TextureStudioServerService_serviceDesc, srv)
}

func _TextureStudioServerService_StartServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StartServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextureStudioServerServiceServer).StartServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/texture_studio.TextureStudioServerService/StartServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextureStudioServerServiceServer).StartServer(ctx, req.(*StartServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextureStudioServerService_StopServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StopServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextureStudioServerServiceServer).StopServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/texture_studio.TextureStudioServerService/StopServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextureStudioServerServiceServer).StopServer(ctx, req.(*StopServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextureStudioServerService_RestartServer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RestartServerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextureStudioServerServiceServer).RestartServer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/texture_studio.TextureStudioServerService/RestartServer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextureStudioServerServiceServer).RestartServer(ctx, req.(*RestartServerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextureStudioServerService_ServerStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextureStudioServerServiceServer).ServerStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/texture_studio.TextureStudioServerService/ServerStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextureStudioServerServiceServer).ServerStatus(ctx, req.(*ServerStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextureStudioServerService_UploadProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UploadProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextureStudioServerServiceServer).UploadProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/texture_studio.TextureStudioServerService/UploadProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextureStudioServerServiceServer).UploadProject(ctx, req.(*UploadProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextureStudioServerService_GetProject_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextureStudioServerServiceServer).GetProject(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/texture_studio.TextureStudioServerService/GetProject",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextureStudioServerServiceServer).GetProject(ctx, req.(*GetProjectRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextureStudioServerService_GetProjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetProjectsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TextureStudioServerServiceServer).GetProjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/texture_studio.TextureStudioServerService/GetProjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TextureStudioServerServiceServer).GetProjects(ctx, req.(*GetProjectsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _TextureStudioServerService_SubscribeToProjectsChanges_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SubscribeToProjectsChangesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(TextureStudioServerServiceServer).SubscribeToProjectsChanges(m, &textureStudioServerServiceSubscribeToProjectsChangesServer{stream})
}

type TextureStudioServerService_SubscribeToProjectsChangesServer interface {
	Send(*SubscribeToProjectsChangesResponse) error
	grpc.ServerStream
}

type textureStudioServerServiceSubscribeToProjectsChangesServer struct {
	grpc.ServerStream
}

func (x *textureStudioServerServiceSubscribeToProjectsChangesServer) Send(m *SubscribeToProjectsChangesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _TextureStudioServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "texture_studio.TextureStudioServerService",
	HandlerType: (*TextureStudioServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "StartServer",
			Handler:    _TextureStudioServerService_StartServer_Handler,
		},
		{
			MethodName: "StopServer",
			Handler:    _TextureStudioServerService_StopServer_Handler,
		},
		{
			MethodName: "RestartServer",
			Handler:    _TextureStudioServerService_RestartServer_Handler,
		},
		{
			MethodName: "ServerStatus",
			Handler:    _TextureStudioServerService_ServerStatus_Handler,
		},
		{
			MethodName: "UploadProject",
			Handler:    _TextureStudioServerService_UploadProject_Handler,
		},
		{
			MethodName: "GetProject",
			Handler:    _TextureStudioServerService_GetProject_Handler,
		},
		{
			MethodName: "GetProjects",
			Handler:    _TextureStudioServerService_GetProjects_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeToProjectsChanges",
			Handler:       _TextureStudioServerService_SubscribeToProjectsChanges_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "texturestudio/server.proto",
}
