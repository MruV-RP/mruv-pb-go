// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: entrances/entrances.proto

package entrances

import (
	context "context"
	spots "github.com/MruV-RP/mruv-pb-go/spots"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Entrance struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Out  *spots.Spot `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	In   *spots.Spot `protobuf:"bytes,3,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *Entrance) Reset() {
	*x = Entrance{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Entrance) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Entrance) ProtoMessage() {}

func (x *Entrance) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Entrance.ProtoReflect.Descriptor instead.
func (*Entrance) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{0}
}

func (x *Entrance) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Entrance) GetOut() *spots.Spot {
	if x != nil {
		return x.Out
	}
	return nil
}

func (x *Entrance) GetIn() *spots.Spot {
	if x != nil {
		return x.In
	}
	return nil
}

// Request message for rpc `CreateEntrance`.
type CreateEntranceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Out  *spots.Spot `protobuf:"bytes,2,opt,name=out,proto3" json:"out,omitempty"`
	In   *spots.Spot `protobuf:"bytes,3,opt,name=in,proto3" json:"in,omitempty"`
}

func (x *CreateEntranceRequest) Reset() {
	*x = CreateEntranceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntranceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntranceRequest) ProtoMessage() {}

func (x *CreateEntranceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntranceRequest.ProtoReflect.Descriptor instead.
func (*CreateEntranceRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{1}
}

func (x *CreateEntranceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateEntranceRequest) GetOut() *spots.Spot {
	if x != nil {
		return x.Out
	}
	return nil
}

func (x *CreateEntranceRequest) GetIn() *spots.Spot {
	if x != nil {
		return x.In
	}
	return nil
}

// Response message for rpc `CreateEntrance`.
type CreateEntranceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateEntranceResponse) Reset() {
	*x = CreateEntranceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateEntranceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateEntranceResponse) ProtoMessage() {}

func (x *CreateEntranceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateEntranceResponse.ProtoReflect.Descriptor instead.
func (*CreateEntranceResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{2}
}

func (x *CreateEntranceResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `GetEntrance`.
type GetEntranceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetEntranceRequest) Reset() {
	*x = GetEntranceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntranceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntranceRequest) ProtoMessage() {}

func (x *GetEntranceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntranceRequest.ProtoReflect.Descriptor instead.
func (*GetEntranceRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{3}
}

func (x *GetEntranceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `GetEntrance`.
type GetEntranceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string      `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	InSpot  *spots.Spot `protobuf:"bytes,2,opt,name=in_spot,json=inSpot,proto3" json:"in_spot,omitempty"`
	OutSpot *spots.Spot `protobuf:"bytes,3,opt,name=out_spot,json=outSpot,proto3" json:"out_spot,omitempty"`
}

func (x *GetEntranceResponse) Reset() {
	*x = GetEntranceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetEntranceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetEntranceResponse) ProtoMessage() {}

func (x *GetEntranceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetEntranceResponse.ProtoReflect.Descriptor instead.
func (*GetEntranceResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{4}
}

func (x *GetEntranceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetEntranceResponse) GetInSpot() *spots.Spot {
	if x != nil {
		return x.InSpot
	}
	return nil
}

func (x *GetEntranceResponse) GetOutSpot() *spots.Spot {
	if x != nil {
		return x.OutSpot
	}
	return nil
}

// Request message for rpc `UpdateEntrance`.
type UpdateEntranceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	InSpotId  uint32 `protobuf:"varint,2,opt,name=in_spot_id,json=inSpotId,proto3" json:"in_spot_id,omitempty"`
	OutSpotId uint32 `protobuf:"varint,3,opt,name=out_spot_id,json=outSpotId,proto3" json:"out_spot_id,omitempty"`
}

func (x *UpdateEntranceRequest) Reset() {
	*x = UpdateEntranceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntranceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntranceRequest) ProtoMessage() {}

func (x *UpdateEntranceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntranceRequest.ProtoReflect.Descriptor instead.
func (*UpdateEntranceRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateEntranceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateEntranceRequest) GetInSpotId() uint32 {
	if x != nil {
		return x.InSpotId
	}
	return 0
}

func (x *UpdateEntranceRequest) GetOutSpotId() uint32 {
	if x != nil {
		return x.OutSpotId
	}
	return 0
}

// Response message for rpc `UpdateEntrance`.
type UpdateEntranceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateEntranceResponse) Reset() {
	*x = UpdateEntranceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateEntranceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateEntranceResponse) ProtoMessage() {}

func (x *UpdateEntranceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateEntranceResponse.ProtoReflect.Descriptor instead.
func (*UpdateEntranceResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{6}
}

// Request message for rpc `DeleteEntrance`.
type DeleteEntranceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteEntranceRequest) Reset() {
	*x = DeleteEntranceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntranceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntranceRequest) ProtoMessage() {}

func (x *DeleteEntranceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntranceRequest.ProtoReflect.Descriptor instead.
func (*DeleteEntranceRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteEntranceRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `DeleteEntrance`.
type DeleteEntranceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteEntranceResponse) Reset() {
	*x = DeleteEntranceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteEntranceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteEntranceResponse) ProtoMessage() {}

func (x *DeleteEntranceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteEntranceResponse.ProtoReflect.Descriptor instead.
func (*DeleteEntranceResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{8}
}

// Request message for rpc `Lock`.
type LockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{9}
}

func (x *LockRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `Lock`.
type LockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{10}
}

// Request message for rpc `Unlock`.
type UnlockRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UnlockRequest) Reset() {
	*x = UnlockRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockRequest) ProtoMessage() {}

func (x *UnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockRequest.ProtoReflect.Descriptor instead.
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{11}
}

func (x *UnlockRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `Unlock`.
type UnlockResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnlockResponse) Reset() {
	*x = UnlockResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResponse) ProtoMessage() {}

func (x *UnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResponse.ProtoReflect.Descriptor instead.
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{12}
}

// Request message for rpc `FindNearestEntrance`.
type FindNearestEntranceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X           float32 `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y           float32 `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z           float32 `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	MaxDistance float32 `protobuf:"fixed32,4,opt,name=max_distance,json=maxDistance,proto3" json:"max_distance,omitempty"`
}

func (x *FindNearestEntranceRequest) Reset() {
	*x = FindNearestEntranceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNearestEntranceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearestEntranceRequest) ProtoMessage() {}

func (x *FindNearestEntranceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearestEntranceRequest.ProtoReflect.Descriptor instead.
func (*FindNearestEntranceRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{13}
}

func (x *FindNearestEntranceRequest) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *FindNearestEntranceRequest) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *FindNearestEntranceRequest) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *FindNearestEntranceRequest) GetMaxDistance() float32 {
	if x != nil {
		return x.MaxDistance
	}
	return 0
}

// Response message for rpc `FindNearestEntrance`.
type FindNearestEntranceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Distance float32 `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	// Is found entrance position is in spot (out spot otherwise)
	Inside bool `protobuf:"varint,3,opt,name=inside,proto3" json:"inside,omitempty"`
}

func (x *FindNearestEntranceResponse) Reset() {
	*x = FindNearestEntranceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindNearestEntranceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindNearestEntranceResponse) ProtoMessage() {}

func (x *FindNearestEntranceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindNearestEntranceResponse.ProtoReflect.Descriptor instead.
func (*FindNearestEntranceResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{14}
}

func (x *FindNearestEntranceResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FindNearestEntranceResponse) GetDistance() float32 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *FindNearestEntranceResponse) GetInside() bool {
	if x != nil {
		return x.Inside
	}
	return false
}

// Request message for rpc `Enter`.
type EnterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EnterRequest) Reset() {
	*x = EnterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterRequest) ProtoMessage() {}

func (x *EnterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterRequest.ProtoReflect.Descriptor instead.
func (*EnterRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{15}
}

func (x *EnterRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `Enter`.
type EnterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterResponse) Reset() {
	*x = EnterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterResponse) ProtoMessage() {}

func (x *EnterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterResponse.ProtoReflect.Descriptor instead.
func (*EnterResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{16}
}

// Request message for rpc `Exit`.
type ExitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ExitRequest) Reset() {
	*x = ExitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitRequest) ProtoMessage() {}

func (x *ExitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitRequest.ProtoReflect.Descriptor instead.
func (*ExitRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{17}
}

func (x *ExitRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `Exit`.
type ExitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ExitResponse) Reset() {
	*x = ExitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExitResponse) ProtoMessage() {}

func (x *ExitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExitResponse.ProtoReflect.Descriptor instead.
func (*ExitResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{18}
}

// Request message for rpc `FetchAllEntrances`.
type FetchAllEntrancesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkSize uint32 `protobuf:"varint,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
}

func (x *FetchAllEntrancesRequest) Reset() {
	*x = FetchAllEntrancesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllEntrancesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllEntrancesRequest) ProtoMessage() {}

func (x *FetchAllEntrancesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllEntrancesRequest.ProtoReflect.Descriptor instead.
func (*FetchAllEntrancesRequest) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{19}
}

func (x *FetchAllEntrancesRequest) GetChunkSize() uint32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

// Response message for rpc `FetchAllEntrances`.
type FetchAllEntrancesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entrances map[uint32]*Entrance `protobuf:"bytes,1,rep,name=entrances,proto3" json:"entrances,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FetchAllEntrancesResponse) Reset() {
	*x = FetchAllEntrancesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entrances_entrances_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllEntrancesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllEntrancesResponse) ProtoMessage() {}

func (x *FetchAllEntrancesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_entrances_entrances_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllEntrancesResponse.ProtoReflect.Descriptor instead.
func (*FetchAllEntrancesResponse) Descriptor() ([]byte, []int) {
	return file_entrances_entrances_proto_rawDescGZIP(), []int{20}
}

func (x *FetchAllEntrancesResponse) GetEntrances() map[uint32]*Entrance {
	if x != nil {
		return x.Entrances
	}
	return nil
}

var File_entrances_entrances_proto protoreflect.FileDescriptor

var file_entrances_entrances_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x73, 0x70, 0x6f, 0x74, 0x73,
	0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x08,
	0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x03,
	0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x03, 0x6f, 0x75, 0x74,
	0x12, 0x20, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x02,
	0x69, 0x6e, 0x22, 0x71, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x22, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x03,
	0x6f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x02, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f,
	0x74, 0x52, 0x02, 0x69, 0x6e, 0x22, 0x28, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x29, 0x0a, 0x07, 0x69, 0x6e, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e,
	0x53, 0x70, 0x6f, 0x74, 0x52, 0x06, 0x69, 0x6e, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x2b, 0x0a, 0x08,
	0x6f, 0x75, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x74,
	0x52, 0x07, 0x6f, 0x75, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x22, 0x65, 0x0a, 0x15, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x6e, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x69, 0x6e, 0x53, 0x70, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x70, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6f, 0x75, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x49, 0x64,
	0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x15, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d, 0x0a,
	0x0b, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a, 0x0c,
	0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1f, 0x0a, 0x0d,
	0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x10, 0x0a,
	0x0e, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x69, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x64,
	0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d,
	0x61, 0x78, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x61, 0x0a, 0x1b, 0x46, 0x69,
	0x6e, 0x64, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x64, 0x69, 0x73,
	0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x6e, 0x73, 0x69, 0x64, 0x65, 0x22, 0x1e, 0x0a,
	0x0c, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0f, 0x0a,
	0x0d, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1d,
	0x0a, 0x0b, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x0e, 0x0a,
	0x0c, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x0a,
	0x18, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x75,
	0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63,
	0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xcb, 0x01, 0x0a, 0x19, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x09, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0x56,
	0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x9f, 0x09, 0x0a, 0x14, 0x4d, 0x72, 0x75, 0x56, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x79, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x72, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e,
	0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7e,
	0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x32, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x7b,
	0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x12, 0x25, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x45,
	0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x2a, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x04, 0x4c,
	0x6f, 0x63, 0x6b, 0x12, 0x1b, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61,
	0x6e, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65,
	0x73, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x6c, 0x6f, 0x63, 0x6b, 0x3a,
	0x01, 0x2a, 0x12, 0x6d, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x6e,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x6e, 0x6c,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x24, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1e, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x3a, 0x01,
	0x2a, 0x12, 0x8d, 0x01, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x61, 0x72, 0x65, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e,
	0x65, 0x61, 0x72, 0x65, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x4e, 0x65, 0x61, 0x72, 0x65,
	0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x76, 0x31, 0x2f,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x6e, 0x65, 0x61, 0x72, 0x65, 0x73,
	0x74, 0x12, 0x69, 0x0a, 0x05, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x6d, 0x72, 0x75,
	0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x22,
	0x18, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x3a, 0x01, 0x2a, 0x12, 0x65, 0x0a, 0x04,
	0x45, 0x78, 0x69, 0x74, 0x12, 0x1b, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74,
	0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x65, 0x78, 0x69, 0x74,
	0x3a, 0x01, 0x2a, 0x12, 0x63, 0x0a, 0x08, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x12,
	0x28, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73,
	0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x41, 0x6c, 0x6c, 0x45, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x72, 0x75, 0x56, 0x2d, 0x52, 0x50, 0x2f, 0x6d,
	0x72, 0x75, 0x76, 0x2d, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entrances_entrances_proto_rawDescOnce sync.Once
	file_entrances_entrances_proto_rawDescData = file_entrances_entrances_proto_rawDesc
)

func file_entrances_entrances_proto_rawDescGZIP() []byte {
	file_entrances_entrances_proto_rawDescOnce.Do(func() {
		file_entrances_entrances_proto_rawDescData = protoimpl.X.CompressGZIP(file_entrances_entrances_proto_rawDescData)
	})
	return file_entrances_entrances_proto_rawDescData
}

var file_entrances_entrances_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_entrances_entrances_proto_goTypes = []interface{}{
	(*Entrance)(nil),                    // 0: mruv.entrances.Entrance
	(*CreateEntranceRequest)(nil),       // 1: mruv.entrances.CreateEntranceRequest
	(*CreateEntranceResponse)(nil),      // 2: mruv.entrances.CreateEntranceResponse
	(*GetEntranceRequest)(nil),          // 3: mruv.entrances.GetEntranceRequest
	(*GetEntranceResponse)(nil),         // 4: mruv.entrances.GetEntranceResponse
	(*UpdateEntranceRequest)(nil),       // 5: mruv.entrances.UpdateEntranceRequest
	(*UpdateEntranceResponse)(nil),      // 6: mruv.entrances.UpdateEntranceResponse
	(*DeleteEntranceRequest)(nil),       // 7: mruv.entrances.DeleteEntranceRequest
	(*DeleteEntranceResponse)(nil),      // 8: mruv.entrances.DeleteEntranceResponse
	(*LockRequest)(nil),                 // 9: mruv.entrances.LockRequest
	(*LockResponse)(nil),                // 10: mruv.entrances.LockResponse
	(*UnlockRequest)(nil),               // 11: mruv.entrances.UnlockRequest
	(*UnlockResponse)(nil),              // 12: mruv.entrances.UnlockResponse
	(*FindNearestEntranceRequest)(nil),  // 13: mruv.entrances.FindNearestEntranceRequest
	(*FindNearestEntranceResponse)(nil), // 14: mruv.entrances.FindNearestEntranceResponse
	(*EnterRequest)(nil),                // 15: mruv.entrances.EnterRequest
	(*EnterResponse)(nil),               // 16: mruv.entrances.EnterResponse
	(*ExitRequest)(nil),                 // 17: mruv.entrances.ExitRequest
	(*ExitResponse)(nil),                // 18: mruv.entrances.ExitResponse
	(*FetchAllEntrancesRequest)(nil),    // 19: mruv.entrances.FetchAllEntrancesRequest
	(*FetchAllEntrancesResponse)(nil),   // 20: mruv.entrances.FetchAllEntrancesResponse
	nil,                                 // 21: mruv.entrances.FetchAllEntrancesResponse.EntrancesEntry
	(*spots.Spot)(nil),                  // 22: mruv.spots.Spot
}
var file_entrances_entrances_proto_depIdxs = []int32{
	22, // 0: mruv.entrances.Entrance.out:type_name -> mruv.spots.Spot
	22, // 1: mruv.entrances.Entrance.in:type_name -> mruv.spots.Spot
	22, // 2: mruv.entrances.CreateEntranceRequest.out:type_name -> mruv.spots.Spot
	22, // 3: mruv.entrances.CreateEntranceRequest.in:type_name -> mruv.spots.Spot
	22, // 4: mruv.entrances.GetEntranceResponse.in_spot:type_name -> mruv.spots.Spot
	22, // 5: mruv.entrances.GetEntranceResponse.out_spot:type_name -> mruv.spots.Spot
	21, // 6: mruv.entrances.FetchAllEntrancesResponse.entrances:type_name -> mruv.entrances.FetchAllEntrancesResponse.EntrancesEntry
	0,  // 7: mruv.entrances.FetchAllEntrancesResponse.EntrancesEntry.value:type_name -> mruv.entrances.Entrance
	1,  // 8: mruv.entrances.MruVEntrancesService.CreateEntrance:input_type -> mruv.entrances.CreateEntranceRequest
	3,  // 9: mruv.entrances.MruVEntrancesService.GetEntrance:input_type -> mruv.entrances.GetEntranceRequest
	5,  // 10: mruv.entrances.MruVEntrancesService.UpdateEntrance:input_type -> mruv.entrances.UpdateEntranceRequest
	7,  // 11: mruv.entrances.MruVEntrancesService.DeleteEntrance:input_type -> mruv.entrances.DeleteEntranceRequest
	9,  // 12: mruv.entrances.MruVEntrancesService.Lock:input_type -> mruv.entrances.LockRequest
	11, // 13: mruv.entrances.MruVEntrancesService.Unlock:input_type -> mruv.entrances.UnlockRequest
	13, // 14: mruv.entrances.MruVEntrancesService.FindNearestEntrance:input_type -> mruv.entrances.FindNearestEntranceRequest
	15, // 15: mruv.entrances.MruVEntrancesService.Enter:input_type -> mruv.entrances.EnterRequest
	17, // 16: mruv.entrances.MruVEntrancesService.Exit:input_type -> mruv.entrances.ExitRequest
	19, // 17: mruv.entrances.MruVEntrancesService.FetchAll:input_type -> mruv.entrances.FetchAllEntrancesRequest
	2,  // 18: mruv.entrances.MruVEntrancesService.CreateEntrance:output_type -> mruv.entrances.CreateEntranceResponse
	4,  // 19: mruv.entrances.MruVEntrancesService.GetEntrance:output_type -> mruv.entrances.GetEntranceResponse
	6,  // 20: mruv.entrances.MruVEntrancesService.UpdateEntrance:output_type -> mruv.entrances.UpdateEntranceResponse
	8,  // 21: mruv.entrances.MruVEntrancesService.DeleteEntrance:output_type -> mruv.entrances.DeleteEntranceResponse
	10, // 22: mruv.entrances.MruVEntrancesService.Lock:output_type -> mruv.entrances.LockResponse
	12, // 23: mruv.entrances.MruVEntrancesService.Unlock:output_type -> mruv.entrances.UnlockResponse
	14, // 24: mruv.entrances.MruVEntrancesService.FindNearestEntrance:output_type -> mruv.entrances.FindNearestEntranceResponse
	16, // 25: mruv.entrances.MruVEntrancesService.Enter:output_type -> mruv.entrances.EnterResponse
	18, // 26: mruv.entrances.MruVEntrancesService.Exit:output_type -> mruv.entrances.ExitResponse
	20, // 27: mruv.entrances.MruVEntrancesService.FetchAll:output_type -> mruv.entrances.FetchAllEntrancesResponse
	18, // [18:28] is the sub-list for method output_type
	8,  // [8:18] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_entrances_entrances_proto_init() }
func file_entrances_entrances_proto_init() {
	if File_entrances_entrances_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_entrances_entrances_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Entrance); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntranceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateEntranceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntranceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetEntranceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntranceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateEntranceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntranceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteEntranceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnlockResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNearestEntranceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindNearestEntranceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllEntrancesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entrances_entrances_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllEntrancesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entrances_entrances_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_entrances_entrances_proto_goTypes,
		DependencyIndexes: file_entrances_entrances_proto_depIdxs,
		MessageInfos:      file_entrances_entrances_proto_msgTypes,
	}.Build()
	File_entrances_entrances_proto = out.File
	file_entrances_entrances_proto_rawDesc = nil
	file_entrances_entrances_proto_goTypes = nil
	file_entrances_entrances_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MruVEntrancesServiceClient is the client API for MruVEntrancesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVEntrancesServiceClient interface {
	// Create an entrance to building or teleport to location.
	CreateEntrance(ctx context.Context, in *CreateEntranceRequest, opts ...grpc.CallOption) (*CreateEntranceResponse, error)
	// Get an entrance to building or a teleport to location.
	GetEntrance(ctx context.Context, in *GetEntranceRequest, opts ...grpc.CallOption) (*GetEntranceResponse, error)
	// Update an entrance to building or a teleport to location.
	UpdateEntrance(ctx context.Context, in *UpdateEntranceRequest, opts ...grpc.CallOption) (*UpdateEntranceResponse, error)
	// Delete an entrance to building or a teleport to location.
	DeleteEntrance(ctx context.Context, in *DeleteEntranceRequest, opts ...grpc.CallOption) (*DeleteEntranceResponse, error)
	// Lock entrance.
	Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error)
	// Unload entrance.
	Unlock(ctx context.Context, in *UnlockRequest, opts ...grpc.CallOption) (*UnlockResponse, error)
	// Find gate that is closest to a specific position.
	FindNearestEntrance(ctx context.Context, in *FindNearestEntranceRequest, opts ...grpc.CallOption) (*FindNearestEntranceResponse, error)
	// Enter an entrance (player teleport from in spot position to out spot position).
	Enter(ctx context.Context, in *EnterRequest, opts ...grpc.CallOption) (*EnterResponse, error)
	// Exit from entrance (player teleport from out spot position to in spot position).
	Exit(ctx context.Context, in *ExitRequest, opts ...grpc.CallOption) (*ExitResponse, error)
	//
	FetchAll(ctx context.Context, in *FetchAllEntrancesRequest, opts ...grpc.CallOption) (MruVEntrancesService_FetchAllClient, error)
}

type mruVEntrancesServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMruVEntrancesServiceClient(cc grpc.ClientConnInterface) MruVEntrancesServiceClient {
	return &mruVEntrancesServiceClient{cc}
}

func (c *mruVEntrancesServiceClient) CreateEntrance(ctx context.Context, in *CreateEntranceRequest, opts ...grpc.CallOption) (*CreateEntranceResponse, error) {
	out := new(CreateEntranceResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/CreateEntrance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) GetEntrance(ctx context.Context, in *GetEntranceRequest, opts ...grpc.CallOption) (*GetEntranceResponse, error) {
	out := new(GetEntranceResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/GetEntrance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) UpdateEntrance(ctx context.Context, in *UpdateEntranceRequest, opts ...grpc.CallOption) (*UpdateEntranceResponse, error) {
	out := new(UpdateEntranceResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/UpdateEntrance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) DeleteEntrance(ctx context.Context, in *DeleteEntranceRequest, opts ...grpc.CallOption) (*DeleteEntranceResponse, error) {
	out := new(DeleteEntranceResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/DeleteEntrance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error) {
	out := new(LockResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) Unlock(ctx context.Context, in *UnlockRequest, opts ...grpc.CallOption) (*UnlockResponse, error) {
	out := new(UnlockResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/Unlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) FindNearestEntrance(ctx context.Context, in *FindNearestEntranceRequest, opts ...grpc.CallOption) (*FindNearestEntranceResponse, error) {
	out := new(FindNearestEntranceResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/FindNearestEntrance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) Enter(ctx context.Context, in *EnterRequest, opts ...grpc.CallOption) (*EnterResponse, error) {
	out := new(EnterResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/Enter", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) Exit(ctx context.Context, in *ExitRequest, opts ...grpc.CallOption) (*ExitResponse, error) {
	out := new(ExitResponse)
	err := c.cc.Invoke(ctx, "/mruv.entrances.MruVEntrancesService/Exit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVEntrancesServiceClient) FetchAll(ctx context.Context, in *FetchAllEntrancesRequest, opts ...grpc.CallOption) (MruVEntrancesService_FetchAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVEntrancesService_serviceDesc.Streams[0], "/mruv.entrances.MruVEntrancesService/FetchAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVEntrancesServiceFetchAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVEntrancesService_FetchAllClient interface {
	Recv() (*FetchAllEntrancesResponse, error)
	grpc.ClientStream
}

type mruVEntrancesServiceFetchAllClient struct {
	grpc.ClientStream
}

func (x *mruVEntrancesServiceFetchAllClient) Recv() (*FetchAllEntrancesResponse, error) {
	m := new(FetchAllEntrancesResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVEntrancesServiceServer is the server API for MruVEntrancesService service.
type MruVEntrancesServiceServer interface {
	// Create an entrance to building or teleport to location.
	CreateEntrance(context.Context, *CreateEntranceRequest) (*CreateEntranceResponse, error)
	// Get an entrance to building or a teleport to location.
	GetEntrance(context.Context, *GetEntranceRequest) (*GetEntranceResponse, error)
	// Update an entrance to building or a teleport to location.
	UpdateEntrance(context.Context, *UpdateEntranceRequest) (*UpdateEntranceResponse, error)
	// Delete an entrance to building or a teleport to location.
	DeleteEntrance(context.Context, *DeleteEntranceRequest) (*DeleteEntranceResponse, error)
	// Lock entrance.
	Lock(context.Context, *LockRequest) (*LockResponse, error)
	// Unload entrance.
	Unlock(context.Context, *UnlockRequest) (*UnlockResponse, error)
	// Find gate that is closest to a specific position.
	FindNearestEntrance(context.Context, *FindNearestEntranceRequest) (*FindNearestEntranceResponse, error)
	// Enter an entrance (player teleport from in spot position to out spot position).
	Enter(context.Context, *EnterRequest) (*EnterResponse, error)
	// Exit from entrance (player teleport from out spot position to in spot position).
	Exit(context.Context, *ExitRequest) (*ExitResponse, error)
	//
	FetchAll(*FetchAllEntrancesRequest, MruVEntrancesService_FetchAllServer) error
}

// UnimplementedMruVEntrancesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVEntrancesServiceServer struct {
}

func (*UnimplementedMruVEntrancesServiceServer) CreateEntrance(context.Context, *CreateEntranceRequest) (*CreateEntranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateEntrance not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) GetEntrance(context.Context, *GetEntranceRequest) (*GetEntranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEntrance not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) UpdateEntrance(context.Context, *UpdateEntranceRequest) (*UpdateEntranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateEntrance not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) DeleteEntrance(context.Context, *DeleteEntranceRequest) (*DeleteEntranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteEntrance not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) Lock(context.Context, *LockRequest) (*LockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lock not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) Unlock(context.Context, *UnlockRequest) (*UnlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unlock not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) FindNearestEntrance(context.Context, *FindNearestEntranceRequest) (*FindNearestEntranceResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindNearestEntrance not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) Enter(context.Context, *EnterRequest) (*EnterResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Enter not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) Exit(context.Context, *ExitRequest) (*ExitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Exit not implemented")
}
func (*UnimplementedMruVEntrancesServiceServer) FetchAll(*FetchAllEntrancesRequest, MruVEntrancesService_FetchAllServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchAll not implemented")
}

func RegisterMruVEntrancesServiceServer(s *grpc.Server, srv MruVEntrancesServiceServer) {
	s.RegisterService(&_MruVEntrancesService_serviceDesc, srv)
}

func _MruVEntrancesService_CreateEntrance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntranceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).CreateEntrance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/CreateEntrance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).CreateEntrance(ctx, req.(*CreateEntranceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_GetEntrance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntranceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).GetEntrance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/GetEntrance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).GetEntrance(ctx, req.(*GetEntranceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_UpdateEntrance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntranceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).UpdateEntrance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/UpdateEntrance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).UpdateEntrance(ctx, req.(*UpdateEntranceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_DeleteEntrance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteEntranceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).DeleteEntrance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/DeleteEntrance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).DeleteEntrance(ctx, req.(*DeleteEntranceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).Lock(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_Unlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).Unlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/Unlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).Unlock(ctx, req.(*UnlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_FindNearestEntrance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindNearestEntranceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).FindNearestEntrance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/FindNearestEntrance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).FindNearestEntrance(ctx, req.(*FindNearestEntranceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_Enter_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnterRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).Enter(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/Enter",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).Enter(ctx, req.(*EnterRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_Exit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVEntrancesServiceServer).Exit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.entrances.MruVEntrancesService/Exit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVEntrancesServiceServer).Exit(ctx, req.(*ExitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVEntrancesService_FetchAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchAllEntrancesRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVEntrancesServiceServer).FetchAll(m, &mruVEntrancesServiceFetchAllServer{stream})
}

type MruVEntrancesService_FetchAllServer interface {
	Send(*FetchAllEntrancesResponse) error
	grpc.ServerStream
}

type mruVEntrancesServiceFetchAllServer struct {
	grpc.ServerStream
}

func (x *mruVEntrancesServiceFetchAllServer) Send(m *FetchAllEntrancesResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVEntrancesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.entrances.MruVEntrancesService",
	HandlerType: (*MruVEntrancesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateEntrance",
			Handler:    _MruVEntrancesService_CreateEntrance_Handler,
		},
		{
			MethodName: "GetEntrance",
			Handler:    _MruVEntrancesService_GetEntrance_Handler,
		},
		{
			MethodName: "UpdateEntrance",
			Handler:    _MruVEntrancesService_UpdateEntrance_Handler,
		},
		{
			MethodName: "DeleteEntrance",
			Handler:    _MruVEntrancesService_DeleteEntrance_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _MruVEntrancesService_Lock_Handler,
		},
		{
			MethodName: "Unlock",
			Handler:    _MruVEntrancesService_Unlock_Handler,
		},
		{
			MethodName: "FindNearestEntrance",
			Handler:    _MruVEntrancesService_FindNearestEntrance_Handler,
		},
		{
			MethodName: "Enter",
			Handler:    _MruVEntrancesService_Enter_Handler,
		},
		{
			MethodName: "Exit",
			Handler:    _MruVEntrancesService_Exit_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchAll",
			Handler:       _MruVEntrancesService_FetchAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "entrances/entrances.proto",
}
