// Code generated by protoc-gen-go. DO NOT EDIT.
// source: devtools/devtools_model.proto

package devtools

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Position structure.
type Position struct {
	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"`
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"`
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"`
	// Short position name.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// Description of the place which the position indicates.
	Description          string   `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Position) Reset()         { *m = Position{} }
func (m *Position) String() string { return proto.CompactTextString(m) }
func (*Position) ProtoMessage()    {}
func (*Position) Descriptor() ([]byte, []int) {
	return fileDescriptor_b89f0f820bd4c50c, []int{0}
}

func (m *Position) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Position.Unmarshal(m, b)
}
func (m *Position) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Position.Marshal(b, m, deterministic)
}
func (m *Position) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Position.Merge(m, src)
}
func (m *Position) XXX_Size() int {
	return xxx_messageInfo_Position.Size(m)
}
func (m *Position) XXX_DiscardUnknown() {
	xxx_messageInfo_Position.DiscardUnknown(m)
}

var xxx_messageInfo_Position proto.InternalMessageInfo

func (m *Position) GetX() float64 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Position) GetY() float64 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Position) GetZ() float64 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *Position) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Position) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

// GTA V player outfit structure.
// You can find more information about RageMP outfits [here](https://wiki.rage.mp/index.php?title=Clothes "RageMP Clothes")
type Outfit struct {
	// Name of the outfit.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Category of the outfit.
	Category             string   `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Outfit) Reset()         { *m = Outfit{} }
func (m *Outfit) String() string { return proto.CompactTextString(m) }
func (*Outfit) ProtoMessage()    {}
func (*Outfit) Descriptor() ([]byte, []int) {
	return fileDescriptor_b89f0f820bd4c50c, []int{1}
}

func (m *Outfit) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Outfit.Unmarshal(m, b)
}
func (m *Outfit) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Outfit.Marshal(b, m, deterministic)
}
func (m *Outfit) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Outfit.Merge(m, src)
}
func (m *Outfit) XXX_Size() int {
	return xxx_messageInfo_Outfit.Size(m)
}
func (m *Outfit) XXX_DiscardUnknown() {
	xxx_messageInfo_Outfit.DiscardUnknown(m)
}

var xxx_messageInfo_Outfit proto.InternalMessageInfo

func (m *Outfit) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Outfit) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

// GTA V animation structure.
// You can find more information about RageMP outfits [here](https://wiki.rage.mp/index.php?title=Animations "RageMP Animations")
type Animation struct {
	// Animation dictionary name.
	Dict string `protobuf:"bytes,1,opt,name=dict,proto3" json:"dict,omitempty"`
	// Animation name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Animation category, specified by author.
	ReadableCategory     string   `protobuf:"bytes,3,opt,name=readable_category,json=readableCategory,proto3" json:"readable_category,omitempty"`
	Category             string   `protobuf:"bytes,4,opt,name=category,proto3" json:"category,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Animation) Reset()         { *m = Animation{} }
func (m *Animation) String() string { return proto.CompactTextString(m) }
func (*Animation) ProtoMessage()    {}
func (*Animation) Descriptor() ([]byte, []int) {
	return fileDescriptor_b89f0f820bd4c50c, []int{2}
}

func (m *Animation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Animation.Unmarshal(m, b)
}
func (m *Animation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Animation.Marshal(b, m, deterministic)
}
func (m *Animation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Animation.Merge(m, src)
}
func (m *Animation) XXX_Size() int {
	return xxx_messageInfo_Animation.Size(m)
}
func (m *Animation) XXX_DiscardUnknown() {
	xxx_messageInfo_Animation.DiscardUnknown(m)
}

var xxx_messageInfo_Animation proto.InternalMessageInfo

func (m *Animation) GetDict() string {
	if m != nil {
		return m.Dict
	}
	return ""
}

func (m *Animation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Animation) GetReadableCategory() string {
	if m != nil {
		return m.ReadableCategory
	}
	return ""
}

func (m *Animation) GetCategory() string {
	if m != nil {
		return m.Category
	}
	return ""
}

// Player structure for storing authors of devtools saved records.
type Player struct {
	// Unique id.
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// Unique name.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Password hash.
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_b89f0f820bd4c50c, []int{3}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Player) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Player) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func init() {
	proto.RegisterType((*Position)(nil), "mruv.devtools.Position")
	proto.RegisterType((*Outfit)(nil), "mruv.devtools.Outfit")
	proto.RegisterType((*Animation)(nil), "mruv.devtools.Animation")
	proto.RegisterType((*Player)(nil), "mruv.devtools.Player")
}

func init() { proto.RegisterFile("devtools/devtools_model.proto", fileDescriptor_b89f0f820bd4c50c) }

var fileDescriptor_b89f0f820bd4c50c = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xcd, 0x6b, 0x84, 0x30,
	0x10, 0xc5, 0x89, 0xeb, 0xca, 0x3a, 0xfd, 0xa0, 0xcd, 0x49, 0x0a, 0x05, 0xf1, 0x50, 0x84, 0xa2,
	0x1e, 0x7a, 0xe9, 0xb1, 0x1f, 0xe7, 0x52, 0xf1, 0xd0, 0x43, 0x2f, 0x4b, 0x34, 0xa9, 0xa6, 0xa8,
	0x91, 0x18, 0x97, 0x75, 0xe9, 0x1f, 0x5f, 0x8c, 0xab, 0xd8, 0xb2, 0xb7, 0xf7, 0x66, 0x32, 0xef,
	0x17, 0x78, 0x70, 0x4b, 0xd9, 0x4e, 0x09, 0x51, 0xb6, 0xd1, 0x24, 0xb6, 0x95, 0xa0, 0xac, 0x0c,
	0x1b, 0x29, 0x94, 0xc0, 0x17, 0x95, 0xec, 0x76, 0xe1, 0xb4, 0xf2, 0xbe, 0x61, 0x13, 0x8b, 0x96,
	0x2b, 0x2e, 0x6a, 0x7c, 0x0e, 0x68, 0xef, 0x20, 0x17, 0xf9, 0x28, 0x41, 0xfb, 0xc1, 0xf5, 0x8e,
	0x31, 0xba, 0x7e, 0x70, 0x07, 0x67, 0x35, 0xba, 0x03, 0xc6, 0x60, 0xd6, 0xa4, 0x62, 0x8e, 0xe9,
	0x22, 0xdf, 0x4e, 0xb4, 0xc6, 0x2e, 0x9c, 0x51, 0xd6, 0x66, 0x92, 0x37, 0x43, 0x98, 0xb3, 0xd6,
	0xab, 0xe5, 0xc8, 0x7b, 0x04, 0xeb, 0xbd, 0x53, 0x5f, 0x5c, 0xcd, 0xf7, 0x68, 0x71, 0x7f, 0x03,
	0x9b, 0x8c, 0x28, 0x96, 0x0b, 0x39, 0x62, 0xed, 0x64, 0xf6, 0xde, 0x0f, 0xd8, 0xcf, 0x35, 0xaf,
	0x88, 0xfe, 0x26, 0x06, 0x93, 0xf2, 0x4c, 0x4d, 0xc7, 0x83, 0x9e, 0x03, 0x8d, 0x45, 0xe0, 0x3d,
	0x5c, 0x4b, 0x46, 0x28, 0x49, 0x4b, 0xb6, 0x9d, 0x93, 0x57, 0xfa, 0xc1, 0xd5, 0xb4, 0x78, 0x3d,
	0xce, 0xff, 0xd0, 0xcd, 0x7f, 0xf4, 0x27, 0xb0, 0xe2, 0x92, 0xf4, 0x4c, 0xe2, 0x4b, 0x30, 0x38,
	0xd5, 0xe0, 0x75, 0x62, 0x70, 0x7a, 0x12, 0x8b, 0xc1, 0x2c, 0x48, 0x5b, 0x1c, 0x49, 0x5a, 0xbf,
	0xf8, 0x9f, 0x77, 0x39, 0x57, 0x45, 0x97, 0x86, 0x99, 0xa8, 0xa2, 0x37, 0xd9, 0x7d, 0x04, 0x49,
	0x1c, 0x0d, 0x4d, 0x04, 0x4d, 0x1a, 0xe4, 0x62, 0xae, 0x2a, 0xb5, 0x74, 0x4b, 0x0f, 0xbf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x65, 0x6e, 0xc1, 0xa3, 0xc6, 0x01, 0x00, 0x00,
}
