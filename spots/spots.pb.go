// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: spots/spots.proto

package spots

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//Spot.
type Spot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message string  `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Icon    int32   `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Marker  int32   `protobuf:"varint,4,opt,name=marker,proto3" json:"marker,omitempty"`
	X       float32 `protobuf:"fixed32,5,opt,name=x,proto3" json:"x,omitempty"`
	Y       float32 `protobuf:"fixed32,6,opt,name=y,proto3" json:"y,omitempty"`
	Z       float32 `protobuf:"fixed32,7,opt,name=z,proto3" json:"z,omitempty"`
	Vw      int32   `protobuf:"varint,8,opt,name=vw,proto3" json:"vw,omitempty"`
	Int     int32   `protobuf:"varint,9,opt,name=int,proto3" json:"int,omitempty"`
}

func (x *Spot) Reset() {
	*x = Spot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spot) ProtoMessage() {}

func (x *Spot) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spot.ProtoReflect.Descriptor instead.
func (*Spot) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{0}
}

func (x *Spot) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spot) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *Spot) GetIcon() int32 {
	if x != nil {
		return x.Icon
	}
	return 0
}

func (x *Spot) GetMarker() int32 {
	if x != nil {
		return x.Marker
	}
	return 0
}

func (x *Spot) GetX() float32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Spot) GetY() float32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Spot) GetZ() float32 {
	if x != nil {
		return x.Z
	}
	return 0
}

func (x *Spot) GetVw() int32 {
	if x != nil {
		return x.Vw
	}
	return 0
}

func (x *Spot) GetInt() int32 {
	if x != nil {
		return x.Int
	}
	return 0
}

// Request message for rpc `CreateSpot`.
type CreateSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spot *Spot `protobuf:"bytes,1,opt,name=spot,proto3" json:"spot,omitempty"`
}

func (x *CreateSpotRequest) Reset() {
	*x = CreateSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpotRequest) ProtoMessage() {}

func (x *CreateSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpotRequest.ProtoReflect.Descriptor instead.
func (*CreateSpotRequest) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{1}
}

func (x *CreateSpotRequest) GetSpot() *Spot {
	if x != nil {
		return x.Spot
	}
	return nil
}

// Response message for rpc `CreateSpot`.
type CreateSpotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateSpotResponse) Reset() {
	*x = CreateSpotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpotResponse) ProtoMessage() {}

func (x *CreateSpotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpotResponse.ProtoReflect.Descriptor instead.
func (*CreateSpotResponse) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{2}
}

func (x *CreateSpotResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Request message for rpc `GetSpot`.
type GetSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetSpotRequest) Reset() {
	*x = GetSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpotRequest) ProtoMessage() {}

func (x *GetSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpotRequest.ProtoReflect.Descriptor instead.
func (*GetSpotRequest) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{3}
}

func (x *GetSpotRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `GetSpot`.
type GetSpotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spot *Spot `protobuf:"bytes,1,opt,name=spot,proto3" json:"spot,omitempty"`
}

func (x *GetSpotResponse) Reset() {
	*x = GetSpotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpotResponse) ProtoMessage() {}

func (x *GetSpotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpotResponse.ProtoReflect.Descriptor instead.
func (*GetSpotResponse) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{4}
}

func (x *GetSpotResponse) GetSpot() *Spot {
	if x != nil {
		return x.Spot
	}
	return nil
}

// Request message for rpc `UpdateSpot`.
type UpdateSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spot *Spot  `protobuf:"bytes,2,opt,name=spot,proto3" json:"spot,omitempty"`
}

func (x *UpdateSpotRequest) Reset() {
	*x = UpdateSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpotRequest) ProtoMessage() {}

func (x *UpdateSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpotRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpotRequest) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateSpotRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateSpotRequest) GetSpot() *Spot {
	if x != nil {
		return x.Spot
	}
	return nil
}

// Response message for rpc `UpdateSpot`.
type UpdateSpotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateSpotResponse) Reset() {
	*x = UpdateSpotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpotResponse) ProtoMessage() {}

func (x *UpdateSpotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpotResponse.ProtoReflect.Descriptor instead.
func (*UpdateSpotResponse) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{6}
}

// Request message for rpc `DeleteSpot`.
type DeleteSpotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteSpotRequest) Reset() {
	*x = DeleteSpotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpotRequest) ProtoMessage() {}

func (x *DeleteSpotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpotRequest.ProtoReflect.Descriptor instead.
func (*DeleteSpotRequest) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteSpotRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

// Response message for rpc `DeleteSpot`.
type DeleteSpotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteSpotResponse) Reset() {
	*x = DeleteSpotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSpotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSpotResponse) ProtoMessage() {}

func (x *DeleteSpotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSpotResponse.ProtoReflect.Descriptor instead.
func (*DeleteSpotResponse) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{8}
}

// Request message for rpc `FetchAllSpots`.
type FetchAllSpotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChunkSize uint32 `protobuf:"varint,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
}

func (x *FetchAllSpotsRequest) Reset() {
	*x = FetchAllSpotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllSpotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllSpotsRequest) ProtoMessage() {}

func (x *FetchAllSpotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllSpotsRequest.ProtoReflect.Descriptor instead.
func (*FetchAllSpotsRequest) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{9}
}

func (x *FetchAllSpotsRequest) GetChunkSize() uint32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

// Response message for rpc `FetchAllSpots`.
type FetchAllSpotsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Spots map[uint32]*Spot `protobuf:"bytes,1,rep,name=spots,proto3" json:"spots,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *FetchAllSpotsResponse) Reset() {
	*x = FetchAllSpotsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spots_spots_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchAllSpotsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchAllSpotsResponse) ProtoMessage() {}

func (x *FetchAllSpotsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spots_spots_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchAllSpotsResponse.ProtoReflect.Descriptor instead.
func (*FetchAllSpotsResponse) Descriptor() ([]byte, []int) {
	return file_spots_spots_proto_rawDescGZIP(), []int{10}
}

func (x *FetchAllSpotsResponse) GetSpots() map[uint32]*Spot {
	if x != nil {
		return x.Spots
	}
	return nil
}

var File_spots_spots_proto protoreflect.FileDescriptor

var file_spots_spots_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x01,
	0x0a, 0x04, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x72,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01,
	0x7a, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x01, 0x7a, 0x12, 0x0e, 0x0a, 0x02, 0x76, 0x77,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x76, 0x77, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x22, 0x39, 0x0a, 0x11,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f,
	0x74, 0x52, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x37, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70,
	0x6f, 0x74, 0x52, 0x04, 0x73, 0x70, 0x6f, 0x74, 0x22, 0x49, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a,
	0x04, 0x73, 0x70, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x72,
	0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x04, 0x73,
	0x70, 0x6f, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22, 0x14,
	0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x35, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c,
	0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x68, 0x75, 0x6e, 0x6b, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xa7, 0x01, 0x0a, 0x15,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74,
	0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x1a, 0x4a, 0x0a, 0x0a, 0x53, 0x70, 0x6f,
	0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xed, 0x03, 0x0a, 0x10, 0x4d, 0x72, 0x75, 0x56, 0x53, 0x70,
	0x6f, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5e, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73,
	0x70, 0x6f, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x22,
	0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x12, 0x5a, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x1a, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f,
	0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74,
	0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x63, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x53, 0x70, 0x6f, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74,
	0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x32, 0x0e, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x63, 0x0a, 0x0a, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74, 0x12, 0x1d, 0x2e, 0x6d, 0x72, 0x75, 0x76,
	0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e,
	0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x70, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x2a, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d,
	0x12, 0x53, 0x0a, 0x08, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41, 0x6c, 0x6c, 0x12, 0x20, 0x2e, 0x6d,
	0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x41,
	0x6c, 0x6c, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x6d, 0x72, 0x75, 0x76, 0x2e, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x2e, 0x46, 0x65, 0x74, 0x63,
	0x68, 0x41, 0x6c, 0x6c, 0x53, 0x70, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x4d, 0x72, 0x75, 0x56, 0x2d, 0x52, 0x50, 0x2f, 0x6d, 0x72, 0x75, 0x76,
	0x2d, 0x70, 0x62, 0x2d, 0x67, 0x6f, 0x2f, 0x73, 0x70, 0x6f, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spots_spots_proto_rawDescOnce sync.Once
	file_spots_spots_proto_rawDescData = file_spots_spots_proto_rawDesc
)

func file_spots_spots_proto_rawDescGZIP() []byte {
	file_spots_spots_proto_rawDescOnce.Do(func() {
		file_spots_spots_proto_rawDescData = protoimpl.X.CompressGZIP(file_spots_spots_proto_rawDescData)
	})
	return file_spots_spots_proto_rawDescData
}

var file_spots_spots_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_spots_spots_proto_goTypes = []interface{}{
	(*Spot)(nil),                  // 0: mruv.spots.Spot
	(*CreateSpotRequest)(nil),     // 1: mruv.spots.CreateSpotRequest
	(*CreateSpotResponse)(nil),    // 2: mruv.spots.CreateSpotResponse
	(*GetSpotRequest)(nil),        // 3: mruv.spots.GetSpotRequest
	(*GetSpotResponse)(nil),       // 4: mruv.spots.GetSpotResponse
	(*UpdateSpotRequest)(nil),     // 5: mruv.spots.UpdateSpotRequest
	(*UpdateSpotResponse)(nil),    // 6: mruv.spots.UpdateSpotResponse
	(*DeleteSpotRequest)(nil),     // 7: mruv.spots.DeleteSpotRequest
	(*DeleteSpotResponse)(nil),    // 8: mruv.spots.DeleteSpotResponse
	(*FetchAllSpotsRequest)(nil),  // 9: mruv.spots.FetchAllSpotsRequest
	(*FetchAllSpotsResponse)(nil), // 10: mruv.spots.FetchAllSpotsResponse
	nil,                           // 11: mruv.spots.FetchAllSpotsResponse.SpotsEntry
}
var file_spots_spots_proto_depIdxs = []int32{
	0,  // 0: mruv.spots.CreateSpotRequest.spot:type_name -> mruv.spots.Spot
	0,  // 1: mruv.spots.GetSpotResponse.spot:type_name -> mruv.spots.Spot
	0,  // 2: mruv.spots.UpdateSpotRequest.spot:type_name -> mruv.spots.Spot
	11, // 3: mruv.spots.FetchAllSpotsResponse.spots:type_name -> mruv.spots.FetchAllSpotsResponse.SpotsEntry
	0,  // 4: mruv.spots.FetchAllSpotsResponse.SpotsEntry.value:type_name -> mruv.spots.Spot
	1,  // 5: mruv.spots.MruVSpotsService.CreateSpot:input_type -> mruv.spots.CreateSpotRequest
	3,  // 6: mruv.spots.MruVSpotsService.GetSpot:input_type -> mruv.spots.GetSpotRequest
	5,  // 7: mruv.spots.MruVSpotsService.UpdateSpot:input_type -> mruv.spots.UpdateSpotRequest
	7,  // 8: mruv.spots.MruVSpotsService.DeleteSpot:input_type -> mruv.spots.DeleteSpotRequest
	9,  // 9: mruv.spots.MruVSpotsService.FetchAll:input_type -> mruv.spots.FetchAllSpotsRequest
	2,  // 10: mruv.spots.MruVSpotsService.CreateSpot:output_type -> mruv.spots.CreateSpotResponse
	4,  // 11: mruv.spots.MruVSpotsService.GetSpot:output_type -> mruv.spots.GetSpotResponse
	6,  // 12: mruv.spots.MruVSpotsService.UpdateSpot:output_type -> mruv.spots.UpdateSpotResponse
	8,  // 13: mruv.spots.MruVSpotsService.DeleteSpot:output_type -> mruv.spots.DeleteSpotResponse
	10, // 14: mruv.spots.MruVSpotsService.FetchAll:output_type -> mruv.spots.FetchAllSpotsResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_spots_spots_proto_init() }
func file_spots_spots_proto_init() {
	if File_spots_spots_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spots_spots_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSpotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllSpotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spots_spots_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchAllSpotsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spots_spots_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spots_spots_proto_goTypes,
		DependencyIndexes: file_spots_spots_proto_depIdxs,
		MessageInfos:      file_spots_spots_proto_msgTypes,
	}.Build()
	File_spots_spots_proto = out.File
	file_spots_spots_proto_rawDesc = nil
	file_spots_spots_proto_goTypes = nil
	file_spots_spots_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MruVSpotsServiceClient is the client API for MruVSpotsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVSpotsServiceClient interface {
	// Create a spot.
	CreateSpot(ctx context.Context, in *CreateSpotRequest, opts ...grpc.CallOption) (*CreateSpotResponse, error)
	// Get a spot.
	GetSpot(ctx context.Context, in *GetSpotRequest, opts ...grpc.CallOption) (*GetSpotResponse, error)
	// Update a spot.
	UpdateSpot(ctx context.Context, in *UpdateSpotRequest, opts ...grpc.CallOption) (*UpdateSpotResponse, error)
	// Delete a spot.
	DeleteSpot(ctx context.Context, in *DeleteSpotRequest, opts ...grpc.CallOption) (*DeleteSpotResponse, error)
	// Fetch all spots.
	FetchAll(ctx context.Context, in *FetchAllSpotsRequest, opts ...grpc.CallOption) (MruVSpotsService_FetchAllClient, error)
}

type mruVSpotsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewMruVSpotsServiceClient(cc grpc.ClientConnInterface) MruVSpotsServiceClient {
	return &mruVSpotsServiceClient{cc}
}

func (c *mruVSpotsServiceClient) CreateSpot(ctx context.Context, in *CreateSpotRequest, opts ...grpc.CallOption) (*CreateSpotResponse, error) {
	out := new(CreateSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/CreateSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) GetSpot(ctx context.Context, in *GetSpotRequest, opts ...grpc.CallOption) (*GetSpotResponse, error) {
	out := new(GetSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/GetSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) UpdateSpot(ctx context.Context, in *UpdateSpotRequest, opts ...grpc.CallOption) (*UpdateSpotResponse, error) {
	out := new(UpdateSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/UpdateSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) DeleteSpot(ctx context.Context, in *DeleteSpotRequest, opts ...grpc.CallOption) (*DeleteSpotResponse, error) {
	out := new(DeleteSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/DeleteSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) FetchAll(ctx context.Context, in *FetchAllSpotsRequest, opts ...grpc.CallOption) (MruVSpotsService_FetchAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVSpotsService_serviceDesc.Streams[0], "/mruv.spots.MruVSpotsService/FetchAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVSpotsServiceFetchAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVSpotsService_FetchAllClient interface {
	Recv() (*FetchAllSpotsResponse, error)
	grpc.ClientStream
}

type mruVSpotsServiceFetchAllClient struct {
	grpc.ClientStream
}

func (x *mruVSpotsServiceFetchAllClient) Recv() (*FetchAllSpotsResponse, error) {
	m := new(FetchAllSpotsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVSpotsServiceServer is the server API for MruVSpotsService service.
type MruVSpotsServiceServer interface {
	// Create a spot.
	CreateSpot(context.Context, *CreateSpotRequest) (*CreateSpotResponse, error)
	// Get a spot.
	GetSpot(context.Context, *GetSpotRequest) (*GetSpotResponse, error)
	// Update a spot.
	UpdateSpot(context.Context, *UpdateSpotRequest) (*UpdateSpotResponse, error)
	// Delete a spot.
	DeleteSpot(context.Context, *DeleteSpotRequest) (*DeleteSpotResponse, error)
	// Fetch all spots.
	FetchAll(*FetchAllSpotsRequest, MruVSpotsService_FetchAllServer) error
}

// UnimplementedMruVSpotsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVSpotsServiceServer struct {
}

func (*UnimplementedMruVSpotsServiceServer) CreateSpot(context.Context, *CreateSpotRequest) (*CreateSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) GetSpot(context.Context, *GetSpotRequest) (*GetSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) UpdateSpot(context.Context, *UpdateSpotRequest) (*UpdateSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) DeleteSpot(context.Context, *DeleteSpotRequest) (*DeleteSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) FetchAll(*FetchAllSpotsRequest, MruVSpotsService_FetchAllServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchAll not implemented")
}

func RegisterMruVSpotsServiceServer(s *grpc.Server, srv MruVSpotsServiceServer) {
	s.RegisterService(&_MruVSpotsService_serviceDesc, srv)
}

func _MruVSpotsService_CreateSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).CreateSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/CreateSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).CreateSpot(ctx, req.(*CreateSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_GetSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).GetSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/GetSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).GetSpot(ctx, req.(*GetSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_UpdateSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).UpdateSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/UpdateSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).UpdateSpot(ctx, req.(*UpdateSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_DeleteSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).DeleteSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/DeleteSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).DeleteSpot(ctx, req.(*DeleteSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_FetchAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchAllSpotsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVSpotsServiceServer).FetchAll(m, &mruVSpotsServiceFetchAllServer{stream})
}

type MruVSpotsService_FetchAllServer interface {
	Send(*FetchAllSpotsResponse) error
	grpc.ServerStream
}

type mruVSpotsServiceFetchAllServer struct {
	grpc.ServerStream
}

func (x *mruVSpotsServiceFetchAllServer) Send(m *FetchAllSpotsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVSpotsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.spots.MruVSpotsService",
	HandlerType: (*MruVSpotsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSpot",
			Handler:    _MruVSpotsService_CreateSpot_Handler,
		},
		{
			MethodName: "GetSpot",
			Handler:    _MruVSpotsService_GetSpot_Handler,
		},
		{
			MethodName: "UpdateSpot",
			Handler:    _MruVSpotsService_UpdateSpot_Handler,
		},
		{
			MethodName: "DeleteSpot",
			Handler:    _MruVSpotsService_DeleteSpot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchAll",
			Handler:       _MruVSpotsService_FetchAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "spots/spots.proto",
}
