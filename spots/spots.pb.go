// Code generated by protoc-gen-go. DO NOT EDIT.
// source: spots/spots.proto

package spots

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//Spot.
type Spot struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Icon                 int32    `protobuf:"varint,3,opt,name=icon,proto3" json:"icon,omitempty"`
	Marker               int32    `protobuf:"varint,4,opt,name=marker,proto3" json:"marker,omitempty"`
	X                    float32  `protobuf:"fixed32,5,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,6,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,7,opt,name=z,proto3" json:"z,omitempty"`
	Vw                   int32    `protobuf:"varint,8,opt,name=vw,proto3" json:"vw,omitempty"`
	Int                  int32    `protobuf:"varint,9,opt,name=int,proto3" json:"int,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Spot) Reset()         { *m = Spot{} }
func (m *Spot) String() string { return proto.CompactTextString(m) }
func (*Spot) ProtoMessage()    {}
func (*Spot) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{0}
}

func (m *Spot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Spot.Unmarshal(m, b)
}
func (m *Spot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Spot.Marshal(b, m, deterministic)
}
func (m *Spot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Spot.Merge(m, src)
}
func (m *Spot) XXX_Size() int {
	return xxx_messageInfo_Spot.Size(m)
}
func (m *Spot) XXX_DiscardUnknown() {
	xxx_messageInfo_Spot.DiscardUnknown(m)
}

var xxx_messageInfo_Spot proto.InternalMessageInfo

func (m *Spot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Spot) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Spot) GetIcon() int32 {
	if m != nil {
		return m.Icon
	}
	return 0
}

func (m *Spot) GetMarker() int32 {
	if m != nil {
		return m.Marker
	}
	return 0
}

func (m *Spot) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *Spot) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *Spot) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *Spot) GetVw() int32 {
	if m != nil {
		return m.Vw
	}
	return 0
}

func (m *Spot) GetInt() int32 {
	if m != nil {
		return m.Int
	}
	return 0
}

// Request message for rpc `CreateSpot`.
type CreateSpotRequest struct {
	Spot                 *Spot    `protobuf:"bytes,1,opt,name=spot,proto3" json:"spot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSpotRequest) Reset()         { *m = CreateSpotRequest{} }
func (m *CreateSpotRequest) String() string { return proto.CompactTextString(m) }
func (*CreateSpotRequest) ProtoMessage()    {}
func (*CreateSpotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{1}
}

func (m *CreateSpotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSpotRequest.Unmarshal(m, b)
}
func (m *CreateSpotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSpotRequest.Marshal(b, m, deterministic)
}
func (m *CreateSpotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSpotRequest.Merge(m, src)
}
func (m *CreateSpotRequest) XXX_Size() int {
	return xxx_messageInfo_CreateSpotRequest.Size(m)
}
func (m *CreateSpotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSpotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSpotRequest proto.InternalMessageInfo

func (m *CreateSpotRequest) GetSpot() *Spot {
	if m != nil {
		return m.Spot
	}
	return nil
}

// Response message for rpc `CreateSpot`.
type CreateSpotResponse struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateSpotResponse) Reset()         { *m = CreateSpotResponse{} }
func (m *CreateSpotResponse) String() string { return proto.CompactTextString(m) }
func (*CreateSpotResponse) ProtoMessage()    {}
func (*CreateSpotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{2}
}

func (m *CreateSpotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateSpotResponse.Unmarshal(m, b)
}
func (m *CreateSpotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateSpotResponse.Marshal(b, m, deterministic)
}
func (m *CreateSpotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateSpotResponse.Merge(m, src)
}
func (m *CreateSpotResponse) XXX_Size() int {
	return xxx_messageInfo_CreateSpotResponse.Size(m)
}
func (m *CreateSpotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateSpotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateSpotResponse proto.InternalMessageInfo

func (m *CreateSpotResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request message for rpc `GetSpot`.
type GetSpotRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpotRequest) Reset()         { *m = GetSpotRequest{} }
func (m *GetSpotRequest) String() string { return proto.CompactTextString(m) }
func (*GetSpotRequest) ProtoMessage()    {}
func (*GetSpotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{3}
}

func (m *GetSpotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpotRequest.Unmarshal(m, b)
}
func (m *GetSpotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpotRequest.Marshal(b, m, deterministic)
}
func (m *GetSpotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpotRequest.Merge(m, src)
}
func (m *GetSpotRequest) XXX_Size() int {
	return xxx_messageInfo_GetSpotRequest.Size(m)
}
func (m *GetSpotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpotRequest proto.InternalMessageInfo

func (m *GetSpotRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `GetSpot`.
type GetSpotResponse struct {
	Spot                 *Spot    `protobuf:"bytes,1,opt,name=spot,proto3" json:"spot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetSpotResponse) Reset()         { *m = GetSpotResponse{} }
func (m *GetSpotResponse) String() string { return proto.CompactTextString(m) }
func (*GetSpotResponse) ProtoMessage()    {}
func (*GetSpotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{4}
}

func (m *GetSpotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetSpotResponse.Unmarshal(m, b)
}
func (m *GetSpotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetSpotResponse.Marshal(b, m, deterministic)
}
func (m *GetSpotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetSpotResponse.Merge(m, src)
}
func (m *GetSpotResponse) XXX_Size() int {
	return xxx_messageInfo_GetSpotResponse.Size(m)
}
func (m *GetSpotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetSpotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetSpotResponse proto.InternalMessageInfo

func (m *GetSpotResponse) GetSpot() *Spot {
	if m != nil {
		return m.Spot
	}
	return nil
}

// Request message for rpc `UpdateSpot`.
type UpdateSpotRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Spot                 *Spot    `protobuf:"bytes,2,opt,name=spot,proto3" json:"spot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSpotRequest) Reset()         { *m = UpdateSpotRequest{} }
func (m *UpdateSpotRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateSpotRequest) ProtoMessage()    {}
func (*UpdateSpotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{5}
}

func (m *UpdateSpotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSpotRequest.Unmarshal(m, b)
}
func (m *UpdateSpotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSpotRequest.Marshal(b, m, deterministic)
}
func (m *UpdateSpotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSpotRequest.Merge(m, src)
}
func (m *UpdateSpotRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateSpotRequest.Size(m)
}
func (m *UpdateSpotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSpotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSpotRequest proto.InternalMessageInfo

func (m *UpdateSpotRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateSpotRequest) GetSpot() *Spot {
	if m != nil {
		return m.Spot
	}
	return nil
}

// Response message for rpc `UpdateSpot`.
type UpdateSpotResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateSpotResponse) Reset()         { *m = UpdateSpotResponse{} }
func (m *UpdateSpotResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateSpotResponse) ProtoMessage()    {}
func (*UpdateSpotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{6}
}

func (m *UpdateSpotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateSpotResponse.Unmarshal(m, b)
}
func (m *UpdateSpotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateSpotResponse.Marshal(b, m, deterministic)
}
func (m *UpdateSpotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateSpotResponse.Merge(m, src)
}
func (m *UpdateSpotResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateSpotResponse.Size(m)
}
func (m *UpdateSpotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateSpotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateSpotResponse proto.InternalMessageInfo

// Request message for rpc `DeleteSpot`.
type DeleteSpotRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSpotRequest) Reset()         { *m = DeleteSpotRequest{} }
func (m *DeleteSpotRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteSpotRequest) ProtoMessage()    {}
func (*DeleteSpotRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{7}
}

func (m *DeleteSpotRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSpotRequest.Unmarshal(m, b)
}
func (m *DeleteSpotRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSpotRequest.Marshal(b, m, deterministic)
}
func (m *DeleteSpotRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSpotRequest.Merge(m, src)
}
func (m *DeleteSpotRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteSpotRequest.Size(m)
}
func (m *DeleteSpotRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSpotRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSpotRequest proto.InternalMessageInfo

func (m *DeleteSpotRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `DeleteSpot`.
type DeleteSpotResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteSpotResponse) Reset()         { *m = DeleteSpotResponse{} }
func (m *DeleteSpotResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteSpotResponse) ProtoMessage()    {}
func (*DeleteSpotResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{8}
}

func (m *DeleteSpotResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteSpotResponse.Unmarshal(m, b)
}
func (m *DeleteSpotResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteSpotResponse.Marshal(b, m, deterministic)
}
func (m *DeleteSpotResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteSpotResponse.Merge(m, src)
}
func (m *DeleteSpotResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteSpotResponse.Size(m)
}
func (m *DeleteSpotResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteSpotResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteSpotResponse proto.InternalMessageInfo

// Request message for rpc `FetchAllSpots`.
type FetchAllSpotsRequest struct {
	ChunkSize            uint32   `protobuf:"varint,1,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchAllSpotsRequest) Reset()         { *m = FetchAllSpotsRequest{} }
func (m *FetchAllSpotsRequest) String() string { return proto.CompactTextString(m) }
func (*FetchAllSpotsRequest) ProtoMessage()    {}
func (*FetchAllSpotsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{9}
}

func (m *FetchAllSpotsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAllSpotsRequest.Unmarshal(m, b)
}
func (m *FetchAllSpotsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAllSpotsRequest.Marshal(b, m, deterministic)
}
func (m *FetchAllSpotsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAllSpotsRequest.Merge(m, src)
}
func (m *FetchAllSpotsRequest) XXX_Size() int {
	return xxx_messageInfo_FetchAllSpotsRequest.Size(m)
}
func (m *FetchAllSpotsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAllSpotsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAllSpotsRequest proto.InternalMessageInfo

func (m *FetchAllSpotsRequest) GetChunkSize() uint32 {
	if m != nil {
		return m.ChunkSize
	}
	return 0
}

// Response message for rpc `FetchAllSpots`.
type FetchAllSpotsResponse struct {
	Spots                map[uint32]*Spot `protobuf:"bytes,1,rep,name=spots,proto3" json:"spots,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *FetchAllSpotsResponse) Reset()         { *m = FetchAllSpotsResponse{} }
func (m *FetchAllSpotsResponse) String() string { return proto.CompactTextString(m) }
func (*FetchAllSpotsResponse) ProtoMessage()    {}
func (*FetchAllSpotsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_59076a9e7a5d7105, []int{10}
}

func (m *FetchAllSpotsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchAllSpotsResponse.Unmarshal(m, b)
}
func (m *FetchAllSpotsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchAllSpotsResponse.Marshal(b, m, deterministic)
}
func (m *FetchAllSpotsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchAllSpotsResponse.Merge(m, src)
}
func (m *FetchAllSpotsResponse) XXX_Size() int {
	return xxx_messageInfo_FetchAllSpotsResponse.Size(m)
}
func (m *FetchAllSpotsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchAllSpotsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchAllSpotsResponse proto.InternalMessageInfo

func (m *FetchAllSpotsResponse) GetSpots() map[uint32]*Spot {
	if m != nil {
		return m.Spots
	}
	return nil
}

func init() {
	proto.RegisterType((*Spot)(nil), "mruv.spots.Spot")
	proto.RegisterType((*CreateSpotRequest)(nil), "mruv.spots.CreateSpotRequest")
	proto.RegisterType((*CreateSpotResponse)(nil), "mruv.spots.CreateSpotResponse")
	proto.RegisterType((*GetSpotRequest)(nil), "mruv.spots.GetSpotRequest")
	proto.RegisterType((*GetSpotResponse)(nil), "mruv.spots.GetSpotResponse")
	proto.RegisterType((*UpdateSpotRequest)(nil), "mruv.spots.UpdateSpotRequest")
	proto.RegisterType((*UpdateSpotResponse)(nil), "mruv.spots.UpdateSpotResponse")
	proto.RegisterType((*DeleteSpotRequest)(nil), "mruv.spots.DeleteSpotRequest")
	proto.RegisterType((*DeleteSpotResponse)(nil), "mruv.spots.DeleteSpotResponse")
	proto.RegisterType((*FetchAllSpotsRequest)(nil), "mruv.spots.FetchAllSpotsRequest")
	proto.RegisterType((*FetchAllSpotsResponse)(nil), "mruv.spots.FetchAllSpotsResponse")
	proto.RegisterMapType((map[uint32]*Spot)(nil), "mruv.spots.FetchAllSpotsResponse.SpotsEntry")
}

func init() { proto.RegisterFile("spots/spots.proto", fileDescriptor_59076a9e7a5d7105) }

var fileDescriptor_59076a9e7a5d7105 = []byte{
	// 581 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x54, 0xdd, 0x8e, 0xd2, 0x40,
	0x14, 0x76, 0x0a, 0x2c, 0xcb, 0x41, 0x11, 0x26, 0xeb, 0x66, 0x82, 0xae, 0xa9, 0xdd, 0xd5, 0x10,
	0x23, 0x54, 0x31, 0xc6, 0x9f, 0x3b, 0xd7, 0xbf, 0x68, 0x62, 0x62, 0x4a, 0xf4, 0x62, 0x2f, 0x34,
	0xa5, 0x4c, 0x60, 0x02, 0x74, 0x6a, 0x3b, 0xed, 0x2e, 0x18, 0x6f, 0x7c, 0x05, 0x1f, 0xc2, 0x1b,
	0xdf, 0xc6, 0x57, 0xf0, 0xd6, 0x77, 0x30, 0x33, 0x1d, 0xa0, 0xfc, 0x2c, 0x7a, 0x43, 0xe6, 0x9c,
	0x39, 0xdf, 0xcf, 0x19, 0x3e, 0x80, 0x5a, 0x14, 0x70, 0x11, 0xd9, 0xea, 0xb3, 0x15, 0x84, 0x5c,
	0x70, 0x0c, 0xe3, 0x30, 0x4e, 0x5a, 0xaa, 0x53, 0xbf, 0xd6, 0xe7, 0xbc, 0x3f, 0xa2, 0xb6, 0x1b,
	0x30, 0xdb, 0xf5, 0x7d, 0x2e, 0x5c, 0xc1, 0xb8, 0xaf, 0x27, 0xad, 0x9f, 0x08, 0xf2, 0x9d, 0x80,
	0x0b, 0x8c, 0x21, 0xef, 0xbb, 0x63, 0x4a, 0x90, 0x89, 0x1a, 0x25, 0x47, 0x9d, 0x31, 0x81, 0xe2,
	0x98, 0x46, 0x91, 0xdb, 0xa7, 0xc4, 0x50, 0xed, 0x59, 0x29, 0xa7, 0x99, 0xc7, 0x7d, 0x92, 0x33,
	0x51, 0xa3, 0xe0, 0xa8, 0x33, 0xde, 0x87, 0x9d, 0xb1, 0x1b, 0x0e, 0x69, 0x48, 0xf2, 0xaa, 0xab,
	0x2b, 0x7c, 0x11, 0xd0, 0x19, 0x29, 0x98, 0xa8, 0x61, 0x38, 0xe8, 0x4c, 0x56, 0x13, 0xb2, 0x93,
	0x56, 0x13, 0x59, 0x4d, 0x49, 0x31, 0xad, 0xa6, 0xb8, 0x02, 0x46, 0x72, 0x4a, 0x76, 0x15, 0xda,
	0x48, 0x4e, 0x71, 0x15, 0x72, 0xcc, 0x17, 0xa4, 0xa4, 0x1a, 0xf2, 0x68, 0x3d, 0x86, 0xda, 0xb3,
	0x90, 0xba, 0x82, 0x4a, 0xcf, 0x0e, 0xfd, 0x1c, 0xd3, 0x48, 0xe0, 0x23, 0xc8, 0xcb, 0x55, 0x95,
	0xf5, 0x72, 0xbb, 0xda, 0x5a, 0x2c, 0xdf, 0x52, 0x63, 0xea, 0xd6, 0x3a, 0x02, 0x9c, 0x85, 0x46,
	0x01, 0xf7, 0x23, 0x2a, 0x25, 0x59, 0x4f, 0x21, 0x2f, 0x39, 0x06, 0xeb, 0x59, 0x26, 0x54, 0x5e,
	0x51, 0x91, 0x65, 0x5f, 0x9d, 0x78, 0x08, 0x97, 0xe7, 0x13, 0x9a, 0xe4, 0xff, 0x0c, 0xbc, 0x86,
	0xda, 0xfb, 0xa0, 0xb7, 0xe2, 0x7d, 0x85, 0x7d, 0x4e, 0x65, 0x6c, 0xa5, 0xda, 0x03, 0x9c, 0xa5,
	0x4a, 0x6d, 0x58, 0x87, 0x50, 0x7b, 0x4e, 0x47, 0x74, 0xab, 0x80, 0x84, 0x66, 0x87, 0x34, 0xf4,
	0x01, 0xec, 0xbd, 0xa4, 0xc2, 0x1b, 0x3c, 0x1d, 0x8d, 0x64, 0x3f, 0x9a, 0xa1, 0x0f, 0x00, 0xbc,
	0x41, 0xec, 0x0f, 0x3f, 0x45, 0x6c, 0x4a, 0x35, 0x4b, 0x49, 0x75, 0x3a, 0x6c, 0x4a, 0xad, 0x1f,
	0x08, 0xae, 0xac, 0xe0, 0xf4, 0x93, 0x1c, 0x43, 0x41, 0xb9, 0x26, 0xc8, 0xcc, 0x35, 0xca, 0xed,
	0x3b, 0xd9, 0x45, 0x36, 0x22, 0xd4, 0x7a, 0xd1, 0x0b, 0x5f, 0x84, 0x13, 0x27, 0x85, 0xd6, 0xdf,
	0x00, 0x2c, 0x9a, 0x32, 0x0c, 0x43, 0x3a, 0xd1, 0x1e, 0xe4, 0x11, 0xdf, 0x82, 0x42, 0xe2, 0x8e,
	0x62, 0x7a, 0xee, 0x63, 0xa5, 0xd7, 0x4f, 0x8c, 0x47, 0xa8, 0xfd, 0x27, 0x07, 0xd5, 0xb7, 0x61,
	0xfc, 0x41, 0x11, 0x76, 0x68, 0x98, 0x30, 0x8f, 0xe2, 0x8f, 0x00, 0x8b, 0x48, 0xe0, 0x83, 0x2c,
	0x7e, 0x2d, 0x65, 0xf5, 0xeb, 0xe7, 0x5d, 0xeb, 0x27, 0xac, 0x7d, 0xfb, 0xf5, 0xfb, 0xbb, 0x51,
	0xb6, 0x4a, 0x76, 0x72, 0x2f, 0xfd, 0x31, 0xe2, 0x13, 0x28, 0xea, 0xa8, 0xe0, 0x7a, 0x16, 0xbd,
	0x9c, 0xb0, 0xfa, 0xd5, 0x8d, 0x77, 0x9a, 0x76, 0x5f, 0xd1, 0x56, 0x71, 0x65, 0x4e, 0x6b, 0x7f,
	0x61, 0xbd, 0xaf, 0xd8, 0x03, 0x58, 0x44, 0x60, 0xd9, 0xfb, 0x5a, 0xca, 0x96, 0xbd, 0x6f, 0x48,
	0x8e, 0x16, 0x69, 0x6f, 0x10, 0x59, 0x84, 0x65, 0x59, 0x64, 0x2d, 0x69, 0xcb, 0x22, 0x1b, 0x32,
	0xa6, 0x45, 0x6e, 0xaf, 0x8a, 0x74, 0x60, 0x77, 0x96, 0x08, 0x6c, 0x6e, 0xc9, 0x49, 0xaa, 0x72,
	0xe3, 0x9f, 0x49, 0xb2, 0x2e, 0xdc, 0x45, 0xc7, 0x37, 0x4f, 0x0e, 0xfb, 0x4c, 0x0c, 0xe2, 0x6e,
	0xcb, 0xe3, 0x63, 0x5b, 0x7e, 0xf3, 0x4d, 0xe7, 0x9d, 0x2d, 0xa1, 0xcd, 0xa0, 0xdb, 0xec, 0xf3,
	0xd4, 0x40, 0x77, 0x47, 0xfd, 0x0b, 0xde, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x45, 0xfd,
	0x5f, 0x44, 0x05, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MruVSpotsServiceClient is the client API for MruVSpotsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVSpotsServiceClient interface {
	// Create a spot.
	CreateSpot(ctx context.Context, in *CreateSpotRequest, opts ...grpc.CallOption) (*CreateSpotResponse, error)
	// Get a spot.
	GetSpot(ctx context.Context, in *GetSpotRequest, opts ...grpc.CallOption) (*GetSpotResponse, error)
	// Update a spot.
	UpdateSpot(ctx context.Context, in *UpdateSpotRequest, opts ...grpc.CallOption) (*UpdateSpotResponse, error)
	// Delete a spot.
	DeleteSpot(ctx context.Context, in *DeleteSpotRequest, opts ...grpc.CallOption) (*DeleteSpotResponse, error)
	// Fetch all spots.
	FetchAll(ctx context.Context, in *FetchAllSpotsRequest, opts ...grpc.CallOption) (MruVSpotsService_FetchAllClient, error)
}

type mruVSpotsServiceClient struct {
	cc *grpc.ClientConn
}

func NewMruVSpotsServiceClient(cc *grpc.ClientConn) MruVSpotsServiceClient {
	return &mruVSpotsServiceClient{cc}
}

func (c *mruVSpotsServiceClient) CreateSpot(ctx context.Context, in *CreateSpotRequest, opts ...grpc.CallOption) (*CreateSpotResponse, error) {
	out := new(CreateSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/CreateSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) GetSpot(ctx context.Context, in *GetSpotRequest, opts ...grpc.CallOption) (*GetSpotResponse, error) {
	out := new(GetSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/GetSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) UpdateSpot(ctx context.Context, in *UpdateSpotRequest, opts ...grpc.CallOption) (*UpdateSpotResponse, error) {
	out := new(UpdateSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/UpdateSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) DeleteSpot(ctx context.Context, in *DeleteSpotRequest, opts ...grpc.CallOption) (*DeleteSpotResponse, error) {
	out := new(DeleteSpotResponse)
	err := c.cc.Invoke(ctx, "/mruv.spots.MruVSpotsService/DeleteSpot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVSpotsServiceClient) FetchAll(ctx context.Context, in *FetchAllSpotsRequest, opts ...grpc.CallOption) (MruVSpotsService_FetchAllClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MruVSpotsService_serviceDesc.Streams[0], "/mruv.spots.MruVSpotsService/FetchAll", opts...)
	if err != nil {
		return nil, err
	}
	x := &mruVSpotsServiceFetchAllClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MruVSpotsService_FetchAllClient interface {
	Recv() (*FetchAllSpotsResponse, error)
	grpc.ClientStream
}

type mruVSpotsServiceFetchAllClient struct {
	grpc.ClientStream
}

func (x *mruVSpotsServiceFetchAllClient) Recv() (*FetchAllSpotsResponse, error) {
	m := new(FetchAllSpotsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// MruVSpotsServiceServer is the server API for MruVSpotsService service.
type MruVSpotsServiceServer interface {
	// Create a spot.
	CreateSpot(context.Context, *CreateSpotRequest) (*CreateSpotResponse, error)
	// Get a spot.
	GetSpot(context.Context, *GetSpotRequest) (*GetSpotResponse, error)
	// Update a spot.
	UpdateSpot(context.Context, *UpdateSpotRequest) (*UpdateSpotResponse, error)
	// Delete a spot.
	DeleteSpot(context.Context, *DeleteSpotRequest) (*DeleteSpotResponse, error)
	// Fetch all spots.
	FetchAll(*FetchAllSpotsRequest, MruVSpotsService_FetchAllServer) error
}

// UnimplementedMruVSpotsServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVSpotsServiceServer struct {
}

func (*UnimplementedMruVSpotsServiceServer) CreateSpot(ctx context.Context, req *CreateSpotRequest) (*CreateSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) GetSpot(ctx context.Context, req *GetSpotRequest) (*GetSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) UpdateSpot(ctx context.Context, req *UpdateSpotRequest) (*UpdateSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) DeleteSpot(ctx context.Context, req *DeleteSpotRequest) (*DeleteSpotResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSpot not implemented")
}
func (*UnimplementedMruVSpotsServiceServer) FetchAll(req *FetchAllSpotsRequest, srv MruVSpotsService_FetchAllServer) error {
	return status.Errorf(codes.Unimplemented, "method FetchAll not implemented")
}

func RegisterMruVSpotsServiceServer(s *grpc.Server, srv MruVSpotsServiceServer) {
	s.RegisterService(&_MruVSpotsService_serviceDesc, srv)
}

func _MruVSpotsService_CreateSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).CreateSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/CreateSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).CreateSpot(ctx, req.(*CreateSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_GetSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).GetSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/GetSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).GetSpot(ctx, req.(*GetSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_UpdateSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).UpdateSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/UpdateSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).UpdateSpot(ctx, req.(*UpdateSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_DeleteSpot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSpotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVSpotsServiceServer).DeleteSpot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.spots.MruVSpotsService/DeleteSpot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVSpotsServiceServer).DeleteSpot(ctx, req.(*DeleteSpotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVSpotsService_FetchAll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FetchAllSpotsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MruVSpotsServiceServer).FetchAll(m, &mruVSpotsServiceFetchAllServer{stream})
}

type MruVSpotsService_FetchAllServer interface {
	Send(*FetchAllSpotsResponse) error
	grpc.ServerStream
}

type mruVSpotsServiceFetchAllServer struct {
	grpc.ServerStream
}

func (x *mruVSpotsServiceFetchAllServer) Send(m *FetchAllSpotsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _MruVSpotsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.spots.MruVSpotsService",
	HandlerType: (*MruVSpotsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSpot",
			Handler:    _MruVSpotsService_CreateSpot_Handler,
		},
		{
			MethodName: "GetSpot",
			Handler:    _MruVSpotsService_GetSpot_Handler,
		},
		{
			MethodName: "UpdateSpot",
			Handler:    _MruVSpotsService_UpdateSpot_Handler,
		},
		{
			MethodName: "DeleteSpot",
			Handler:    _MruVSpotsService_DeleteSpot_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "FetchAll",
			Handler:       _MruVSpotsService_FetchAll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "spots/spots.proto",
}
