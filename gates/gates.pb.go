// Code generated by protoc-gen-go. DO NOT EDIT.
// source: gates/gates.proto

package gates

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Gate struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EstateId             uint32   `protobuf:"varint,2,opt,name=estate_id,json=estateId,proto3" json:"estate_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Gate) Reset()         { *m = Gate{} }
func (m *Gate) String() string { return proto.CompactTextString(m) }
func (*Gate) ProtoMessage()    {}
func (*Gate) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{0}
}

func (m *Gate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gate.Unmarshal(m, b)
}
func (m *Gate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gate.Marshal(b, m, deterministic)
}
func (m *Gate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gate.Merge(m, src)
}
func (m *Gate) XXX_Size() int {
	return xxx_messageInfo_Gate.Size(m)
}
func (m *Gate) XXX_DiscardUnknown() {
	xxx_messageInfo_Gate.DiscardUnknown(m)
}

var xxx_messageInfo_Gate proto.InternalMessageInfo

func (m *Gate) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Gate) GetEstateId() uint32 {
	if m != nil {
		return m.EstateId
	}
	return 0
}

// Request message for rpc `CreateGate`.
type CreateGateRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGateRequest) Reset()         { *m = CreateGateRequest{} }
func (m *CreateGateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateGateRequest) ProtoMessage()    {}
func (*CreateGateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{1}
}

func (m *CreateGateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGateRequest.Unmarshal(m, b)
}
func (m *CreateGateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGateRequest.Marshal(b, m, deterministic)
}
func (m *CreateGateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGateRequest.Merge(m, src)
}
func (m *CreateGateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateGateRequest.Size(m)
}
func (m *CreateGateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGateRequest proto.InternalMessageInfo

// Response message for rpc `CreateGate`.
type CreateGateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateGateResponse) Reset()         { *m = CreateGateResponse{} }
func (m *CreateGateResponse) String() string { return proto.CompactTextString(m) }
func (*CreateGateResponse) ProtoMessage()    {}
func (*CreateGateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{2}
}

func (m *CreateGateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateGateResponse.Unmarshal(m, b)
}
func (m *CreateGateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateGateResponse.Marshal(b, m, deterministic)
}
func (m *CreateGateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateGateResponse.Merge(m, src)
}
func (m *CreateGateResponse) XXX_Size() int {
	return xxx_messageInfo_CreateGateResponse.Size(m)
}
func (m *CreateGateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateGateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateGateResponse proto.InternalMessageInfo

// Request message for rpc `GetGate`.
type GetGateRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGateRequest) Reset()         { *m = GetGateRequest{} }
func (m *GetGateRequest) String() string { return proto.CompactTextString(m) }
func (*GetGateRequest) ProtoMessage()    {}
func (*GetGateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{3}
}

func (m *GetGateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGateRequest.Unmarshal(m, b)
}
func (m *GetGateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGateRequest.Marshal(b, m, deterministic)
}
func (m *GetGateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGateRequest.Merge(m, src)
}
func (m *GetGateRequest) XXX_Size() int {
	return xxx_messageInfo_GetGateRequest.Size(m)
}
func (m *GetGateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetGateRequest proto.InternalMessageInfo

func (m *GetGateRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `GetGate`.
type GetGateResponse struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetGateResponse) Reset()         { *m = GetGateResponse{} }
func (m *GetGateResponse) String() string { return proto.CompactTextString(m) }
func (*GetGateResponse) ProtoMessage()    {}
func (*GetGateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{4}
}

func (m *GetGateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetGateResponse.Unmarshal(m, b)
}
func (m *GetGateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetGateResponse.Marshal(b, m, deterministic)
}
func (m *GetGateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetGateResponse.Merge(m, src)
}
func (m *GetGateResponse) XXX_Size() int {
	return xxx_messageInfo_GetGateResponse.Size(m)
}
func (m *GetGateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetGateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetGateResponse proto.InternalMessageInfo

func (m *GetGateResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Request message for rpc `UpdateGate`.
type UpdateGateRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateGateRequest) Reset()         { *m = UpdateGateRequest{} }
func (m *UpdateGateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateGateRequest) ProtoMessage()    {}
func (*UpdateGateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{5}
}

func (m *UpdateGateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGateRequest.Unmarshal(m, b)
}
func (m *UpdateGateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateGateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGateRequest.Merge(m, src)
}
func (m *UpdateGateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateGateRequest.Size(m)
}
func (m *UpdateGateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGateRequest proto.InternalMessageInfo

func (m *UpdateGateRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `UpdateGate`.
type UpdateGateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateGateResponse) Reset()         { *m = UpdateGateResponse{} }
func (m *UpdateGateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateGateResponse) ProtoMessage()    {}
func (*UpdateGateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{6}
}

func (m *UpdateGateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateGateResponse.Unmarshal(m, b)
}
func (m *UpdateGateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateGateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateGateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateGateResponse.Merge(m, src)
}
func (m *UpdateGateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateGateResponse.Size(m)
}
func (m *UpdateGateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateGateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateGateResponse proto.InternalMessageInfo

// Request message for rpc `DeleteGate`.
type DeleteGateRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGateRequest) Reset()         { *m = DeleteGateRequest{} }
func (m *DeleteGateRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteGateRequest) ProtoMessage()    {}
func (*DeleteGateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{7}
}

func (m *DeleteGateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGateRequest.Unmarshal(m, b)
}
func (m *DeleteGateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGateRequest.Marshal(b, m, deterministic)
}
func (m *DeleteGateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGateRequest.Merge(m, src)
}
func (m *DeleteGateRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteGateRequest.Size(m)
}
func (m *DeleteGateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGateRequest proto.InternalMessageInfo

func (m *DeleteGateRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `DeleteGate`.
type DeleteGateResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteGateResponse) Reset()         { *m = DeleteGateResponse{} }
func (m *DeleteGateResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteGateResponse) ProtoMessage()    {}
func (*DeleteGateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{8}
}

func (m *DeleteGateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteGateResponse.Unmarshal(m, b)
}
func (m *DeleteGateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteGateResponse.Marshal(b, m, deterministic)
}
func (m *DeleteGateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteGateResponse.Merge(m, src)
}
func (m *DeleteGateResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteGateResponse.Size(m)
}
func (m *DeleteGateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteGateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteGateResponse proto.InternalMessageInfo

// Request message for rpc `Lock`.
type LockRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockRequest) Reset()         { *m = LockRequest{} }
func (m *LockRequest) String() string { return proto.CompactTextString(m) }
func (*LockRequest) ProtoMessage()    {}
func (*LockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{9}
}

func (m *LockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockRequest.Unmarshal(m, b)
}
func (m *LockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockRequest.Marshal(b, m, deterministic)
}
func (m *LockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockRequest.Merge(m, src)
}
func (m *LockRequest) XXX_Size() int {
	return xxx_messageInfo_LockRequest.Size(m)
}
func (m *LockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockRequest proto.InternalMessageInfo

func (m *LockRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `Lock`.
type LockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockResponse) Reset()         { *m = LockResponse{} }
func (m *LockResponse) String() string { return proto.CompactTextString(m) }
func (*LockResponse) ProtoMessage()    {}
func (*LockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{10}
}

func (m *LockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockResponse.Unmarshal(m, b)
}
func (m *LockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockResponse.Marshal(b, m, deterministic)
}
func (m *LockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockResponse.Merge(m, src)
}
func (m *LockResponse) XXX_Size() int {
	return xxx_messageInfo_LockResponse.Size(m)
}
func (m *LockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockResponse proto.InternalMessageInfo

// Request message for rpc `Unlock`.
type UnlockRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockRequest) Reset()         { *m = UnlockRequest{} }
func (m *UnlockRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockRequest) ProtoMessage()    {}
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{11}
}

func (m *UnlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockRequest.Unmarshal(m, b)
}
func (m *UnlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockRequest.Marshal(b, m, deterministic)
}
func (m *UnlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockRequest.Merge(m, src)
}
func (m *UnlockRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockRequest.Size(m)
}
func (m *UnlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockRequest proto.InternalMessageInfo

func (m *UnlockRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `Unlock`.
type UnlockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockResponse) Reset()         { *m = UnlockResponse{} }
func (m *UnlockResponse) String() string { return proto.CompactTextString(m) }
func (*UnlockResponse) ProtoMessage()    {}
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{12}
}

func (m *UnlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockResponse.Unmarshal(m, b)
}
func (m *UnlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockResponse.Marshal(b, m, deterministic)
}
func (m *UnlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockResponse.Merge(m, src)
}
func (m *UnlockResponse) XXX_Size() int {
	return xxx_messageInfo_UnlockResponse.Size(m)
}
func (m *UnlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockResponse proto.InternalMessageInfo

// Request message for rpc `Open`.
type OpenRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{13}
}

func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (m *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(m, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `Open`.
type OpenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenResponse) Reset()         { *m = OpenResponse{} }
func (m *OpenResponse) String() string { return proto.CompactTextString(m) }
func (*OpenResponse) ProtoMessage()    {}
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{14}
}

func (m *OpenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenResponse.Unmarshal(m, b)
}
func (m *OpenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenResponse.Marshal(b, m, deterministic)
}
func (m *OpenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenResponse.Merge(m, src)
}
func (m *OpenResponse) XXX_Size() int {
	return xxx_messageInfo_OpenResponse.Size(m)
}
func (m *OpenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenResponse proto.InternalMessageInfo

// Request message for rpc `Close`.
type CloseRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{15}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

func (m *CloseRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `Close`.
type CloseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{16}
}

func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (m *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(m, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

// Request message for rpc `FindNearestGate`.
type FindNearestGateRequest struct {
	X                    float32  `protobuf:"fixed32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y                    float32  `protobuf:"fixed32,2,opt,name=y,proto3" json:"y,omitempty"`
	Z                    float32  `protobuf:"fixed32,3,opt,name=z,proto3" json:"z,omitempty"`
	MaxDistance          float32  `protobuf:"fixed32,4,opt,name=max_distance,json=maxDistance,proto3" json:"max_distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNearestGateRequest) Reset()         { *m = FindNearestGateRequest{} }
func (m *FindNearestGateRequest) String() string { return proto.CompactTextString(m) }
func (*FindNearestGateRequest) ProtoMessage()    {}
func (*FindNearestGateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{17}
}

func (m *FindNearestGateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNearestGateRequest.Unmarshal(m, b)
}
func (m *FindNearestGateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNearestGateRequest.Marshal(b, m, deterministic)
}
func (m *FindNearestGateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNearestGateRequest.Merge(m, src)
}
func (m *FindNearestGateRequest) XXX_Size() int {
	return xxx_messageInfo_FindNearestGateRequest.Size(m)
}
func (m *FindNearestGateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNearestGateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindNearestGateRequest proto.InternalMessageInfo

func (m *FindNearestGateRequest) GetX() float32 {
	if m != nil {
		return m.X
	}
	return 0
}

func (m *FindNearestGateRequest) GetY() float32 {
	if m != nil {
		return m.Y
	}
	return 0
}

func (m *FindNearestGateRequest) GetZ() float32 {
	if m != nil {
		return m.Z
	}
	return 0
}

func (m *FindNearestGateRequest) GetMaxDistance() float32 {
	if m != nil {
		return m.MaxDistance
	}
	return 0
}

// Response message for rpc `FindNearestGate`.
type FindNearestGateResponse struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Distance             float32  `protobuf:"fixed32,2,opt,name=distance,proto3" json:"distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindNearestGateResponse) Reset()         { *m = FindNearestGateResponse{} }
func (m *FindNearestGateResponse) String() string { return proto.CompactTextString(m) }
func (*FindNearestGateResponse) ProtoMessage()    {}
func (*FindNearestGateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_67f243c11fcf1d61, []int{18}
}

func (m *FindNearestGateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindNearestGateResponse.Unmarshal(m, b)
}
func (m *FindNearestGateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindNearestGateResponse.Marshal(b, m, deterministic)
}
func (m *FindNearestGateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindNearestGateResponse.Merge(m, src)
}
func (m *FindNearestGateResponse) XXX_Size() int {
	return xxx_messageInfo_FindNearestGateResponse.Size(m)
}
func (m *FindNearestGateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindNearestGateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindNearestGateResponse proto.InternalMessageInfo

func (m *FindNearestGateResponse) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *FindNearestGateResponse) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func init() {
	proto.RegisterType((*Gate)(nil), "mruv.gates.Gate")
	proto.RegisterType((*CreateGateRequest)(nil), "mruv.gates.CreateGateRequest")
	proto.RegisterType((*CreateGateResponse)(nil), "mruv.gates.CreateGateResponse")
	proto.RegisterType((*GetGateRequest)(nil), "mruv.gates.GetGateRequest")
	proto.RegisterType((*GetGateResponse)(nil), "mruv.gates.GetGateResponse")
	proto.RegisterType((*UpdateGateRequest)(nil), "mruv.gates.UpdateGateRequest")
	proto.RegisterType((*UpdateGateResponse)(nil), "mruv.gates.UpdateGateResponse")
	proto.RegisterType((*DeleteGateRequest)(nil), "mruv.gates.DeleteGateRequest")
	proto.RegisterType((*DeleteGateResponse)(nil), "mruv.gates.DeleteGateResponse")
	proto.RegisterType((*LockRequest)(nil), "mruv.gates.LockRequest")
	proto.RegisterType((*LockResponse)(nil), "mruv.gates.LockResponse")
	proto.RegisterType((*UnlockRequest)(nil), "mruv.gates.UnlockRequest")
	proto.RegisterType((*UnlockResponse)(nil), "mruv.gates.UnlockResponse")
	proto.RegisterType((*OpenRequest)(nil), "mruv.gates.OpenRequest")
	proto.RegisterType((*OpenResponse)(nil), "mruv.gates.OpenResponse")
	proto.RegisterType((*CloseRequest)(nil), "mruv.gates.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "mruv.gates.CloseResponse")
	proto.RegisterType((*FindNearestGateRequest)(nil), "mruv.gates.FindNearestGateRequest")
	proto.RegisterType((*FindNearestGateResponse)(nil), "mruv.gates.FindNearestGateResponse")
}

func init() { proto.RegisterFile("gates/gates.proto", fileDescriptor_67f243c11fcf1d61) }

var fileDescriptor_67f243c11fcf1d61 = []byte{
	// 609 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x55, 0xdb, 0x6e, 0xd3, 0x30,
	0x18, 0x56, 0x43, 0x19, 0xdb, 0xbf, 0x9e, 0xe2, 0x76, 0x3d, 0xa4, 0xdb, 0xd8, 0x52, 0x21, 0x21,
	0xa4, 0x36, 0x62, 0x7b, 0x03, 0x36, 0x98, 0x90, 0x38, 0xa9, 0x68, 0xbd, 0xe8, 0xc5, 0xa6, 0x34,
	0xb1, 0x4a, 0x44, 0x1b, 0x87, 0xc4, 0xa9, 0xba, 0x21, 0x6e, 0x78, 0x05, 0x1e, 0x8d, 0x57, 0xe0,
	0x2d, 0xb8, 0x41, 0xb1, 0xbd, 0xc6, 0x6e, 0xd2, 0x72, 0x33, 0xc9, 0xfe, 0xbf, 0xc3, 0x9f, 0xf9,
	0xfb, 0x54, 0xd0, 0xa7, 0x36, 0xc5, 0x91, 0xc5, 0xfe, 0x0e, 0x82, 0x90, 0x50, 0x82, 0x60, 0x1e,
	0xc6, 0x8b, 0x01, 0xbb, 0x31, 0x0e, 0xa7, 0x84, 0x4c, 0x67, 0xd8, 0xb2, 0x03, 0xcf, 0xb2, 0x7d,
	0x9f, 0x50, 0x9b, 0x7a, 0xc4, 0x17, 0x48, 0xf3, 0x1c, 0x8a, 0x57, 0x36, 0xc5, 0xa8, 0x02, 0x9a,
	0xe7, 0xb6, 0x0b, 0x27, 0x85, 0xe7, 0xe5, 0xa1, 0xe6, 0xb9, 0xa8, 0x0b, 0x7b, 0x38, 0xa2, 0x36,
	0xc5, 0xb7, 0x9e, 0xdb, 0xd6, 0xd8, 0xf5, 0x2e, 0xbf, 0x78, 0xeb, 0x9a, 0x75, 0xd0, 0x2f, 0x42,
	0x6c, 0x53, 0x9c, 0x50, 0x87, 0xf8, 0x5b, 0x8c, 0x23, 0x6a, 0x36, 0x00, 0xc9, 0x97, 0x51, 0x40,
	0xfc, 0x08, 0x9b, 0x27, 0x50, 0xb9, 0xc2, 0x54, 0xc2, 0xad, 0x3b, 0x99, 0xa7, 0x50, 0x5d, 0x21,
	0x38, 0x29, 0x03, 0xe9, 0x81, 0x7e, 0x1d, 0xb8, 0xaa, 0x5f, 0x06, 0xd4, 0x00, 0x24, 0x83, 0x84,
	0x7f, 0x0f, 0xf4, 0x4b, 0x3c, 0xc3, 0xff, 0xa5, 0xca, 0x20, 0x41, 0x3d, 0x82, 0xfd, 0x77, 0xc4,
	0xf9, 0xba, 0x89, 0x54, 0x81, 0x12, 0x1f, 0x0b, 0xf8, 0x53, 0x28, 0x5f, 0xfb, 0xb3, 0x2d, 0x84,
	0x1a, 0x54, 0x1e, 0x00, 0xa9, 0xc3, 0xc7, 0x00, 0xfb, 0x5b, 0x1c, 0xf8, 0x58, 0xc0, 0x8f, 0xa1,
	0x74, 0x31, 0x23, 0xd1, 0xc6, 0xcf, 0xa8, 0x42, 0x59, 0xcc, 0x05, 0x01, 0x43, 0xf3, 0x8d, 0xe7,
	0xbb, 0x1f, 0xb0, 0x1d, 0xe2, 0x48, 0x79, 0x84, 0x12, 0x14, 0x96, 0x8c, 0xa9, 0x0d, 0x0b, 0xcb,
	0xe4, 0x74, 0xc7, 0x1e, 0x59, 0x1b, 0x16, 0xee, 0x92, 0xd3, 0x7d, 0xfb, 0x11, 0x3f, 0xdd, 0xa3,
	0x53, 0x28, 0xcd, 0xed, 0xe5, 0xad, 0xeb, 0x45, 0xd4, 0xf6, 0x1d, 0xdc, 0x2e, 0xb2, 0xc1, 0xfe,
	0xdc, 0x5e, 0x5e, 0x8a, 0x2b, 0xf3, 0x35, 0xb4, 0x32, 0x36, 0xf9, 0x2f, 0x89, 0x0c, 0xd8, 0x5d,
	0x29, 0x71, 0xc3, 0xd5, 0xf9, 0xec, 0xef, 0x0e, 0xd4, 0xde, 0x87, 0xf1, 0x28, 0x11, 0x88, 0x3e,
	0xe3, 0x70, 0xe1, 0x39, 0x18, 0xdd, 0x00, 0xa4, 0xa9, 0x42, 0x47, 0x83, 0x34, 0xd8, 0x83, 0x4c,
	0x04, 0x8d, 0xe3, 0x4d, 0x63, 0xf1, 0xff, 0xd0, 0x7f, 0xfe, 0xfe, 0xf3, 0x4b, 0xdb, 0x37, 0xf7,
	0xac, 0xc5, 0x4b, 0xde, 0x17, 0x34, 0x86, 0x27, 0x22, 0x7d, 0xc8, 0x90, 0xd9, 0x6a, 0x68, 0x8d,
	0x6e, 0xee, 0x4c, 0xc8, 0x36, 0x99, 0x6c, 0x0d, 0x55, 0x56, 0xb2, 0xd6, 0x77, 0xcf, 0xfd, 0x81,
	0x1c, 0x80, 0x34, 0x91, 0xea, 0xee, 0x99, 0x38, 0xab, 0xbb, 0xe7, 0x04, 0x59, 0x98, 0x9c, 0xe5,
	0x98, 0xa4, 0xd9, 0x55, 0x4d, 0x32, 0xc1, 0x57, 0x4d, 0x72, 0x22, 0x2f, 0x4c, 0x5e, 0xac, 0x9b,
	0x8c, 0xa0, 0x98, 0x64, 0x1d, 0xb5, 0x64, 0xbe, 0x54, 0x0e, 0xa3, 0x9d, 0x1d, 0x08, 0xc9, 0x2e,
	0x93, 0x3c, 0x30, 0xeb, 0xaa, 0xa4, 0x95, 0x14, 0x01, 0xdd, 0xc0, 0x0e, 0xaf, 0x04, 0xea, 0x28,
	0x9f, 0x2f, 0xf7, 0xc8, 0x30, 0xf2, 0x46, 0x0f, 0x0d, 0x62, 0xea, 0x2d, 0xf3, 0x60, 0x4d, 0x3d,
	0xe6, 0xaa, 0x23, 0x28, 0x26, 0x0d, 0x52, 0xf7, 0x96, 0x2a, 0xa7, 0xee, 0xad, 0x94, 0x6d, 0xd3,
	0xde, 0x24, 0xd1, 0x1b, 0xc3, 0x63, 0xd6, 0x34, 0xa4, 0xf0, 0xe5, 0x72, 0x1a, 0x9d, 0x9c, 0x89,
	0x90, 0x3e, 0x64, 0xd2, 0x4d, 0xb3, 0xb1, 0x26, 0xed, 0x30, 0xc9, 0x18, 0xaa, 0x6b, 0x6d, 0x42,
	0xa6, 0xac, 0x95, 0xdf, 0x68, 0xa3, 0xb7, 0x15, 0x23, 0x9c, 0x3b, 0xcc, 0xb9, 0x8e, 0xf4, 0xd4,
	0xd9, 0xe7, 0xb0, 0x57, 0xcf, 0xc6, 0xbd, 0xa9, 0x47, 0xbf, 0xc4, 0x93, 0x81, 0x43, 0xe6, 0x56,
	0xd2, 0xc3, 0xfe, 0xf0, 0x93, 0x95, 0x68, 0xf6, 0x83, 0x49, 0x7f, 0x4a, 0x38, 0x7c, 0xb2, 0xc3,
	0x7e, 0x36, 0xce, 0xff, 0x05, 0x00, 0x00, 0xff, 0xff, 0x1f, 0xec, 0xc2, 0x06, 0x75, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MruVGatesServiceClient is the client API for MruVGatesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVGatesServiceClient interface {
	// Create a gate or a moving objects objects group.
	CreateGate(ctx context.Context, in *CreateGateRequest, opts ...grpc.CallOption) (*CreateGateResponse, error)
	// Get a gate or a moving objects objects group.
	GetGate(ctx context.Context, in *GetGateRequest, opts ...grpc.CallOption) (*GetGateResponse, error)
	// Update a gate or a moving objects objects group.
	UpdateGate(ctx context.Context, in *UpdateGateRequest, opts ...grpc.CallOption) (*UpdateGateResponse, error)
	// Delete a gate or a moving objects objects group.
	DeleteGate(ctx context.Context, in *DeleteGateRequest, opts ...grpc.CallOption) (*DeleteGateResponse, error)
	// Lock a gate. Locked gate cannot be opened.
	Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error)
	// Unload a gate, so it can be open.
	Unlock(ctx context.Context, in *UnlockRequest, opts ...grpc.CallOption) (*UnlockResponse, error)
	// Opens a gate.
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error)
	// Close a gate.
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	// Find gate that is closest to a specific position.
	FindNearestGate(ctx context.Context, in *FindNearestGateRequest, opts ...grpc.CallOption) (*FindNearestGateResponse, error)
}

type mruVGatesServiceClient struct {
	cc *grpc.ClientConn
}

func NewMruVGatesServiceClient(cc *grpc.ClientConn) MruVGatesServiceClient {
	return &mruVGatesServiceClient{cc}
}

func (c *mruVGatesServiceClient) CreateGate(ctx context.Context, in *CreateGateRequest, opts ...grpc.CallOption) (*CreateGateResponse, error) {
	out := new(CreateGateResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/CreateGate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) GetGate(ctx context.Context, in *GetGateRequest, opts ...grpc.CallOption) (*GetGateResponse, error) {
	out := new(GetGateResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/GetGate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) UpdateGate(ctx context.Context, in *UpdateGateRequest, opts ...grpc.CallOption) (*UpdateGateResponse, error) {
	out := new(UpdateGateResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/UpdateGate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) DeleteGate(ctx context.Context, in *DeleteGateRequest, opts ...grpc.CallOption) (*DeleteGateResponse, error) {
	out := new(DeleteGateResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/DeleteGate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error) {
	out := new(LockResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) Unlock(ctx context.Context, in *UnlockRequest, opts ...grpc.CallOption) (*UnlockResponse, error) {
	out := new(UnlockResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/Unlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error) {
	out := new(OpenResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVGatesServiceClient) FindNearestGate(ctx context.Context, in *FindNearestGateRequest, opts ...grpc.CallOption) (*FindNearestGateResponse, error) {
	out := new(FindNearestGateResponse)
	err := c.cc.Invoke(ctx, "/mruv.gates.MruVGatesService/FindNearestGate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MruVGatesServiceServer is the server API for MruVGatesService service.
type MruVGatesServiceServer interface {
	// Create a gate or a moving objects objects group.
	CreateGate(context.Context, *CreateGateRequest) (*CreateGateResponse, error)
	// Get a gate or a moving objects objects group.
	GetGate(context.Context, *GetGateRequest) (*GetGateResponse, error)
	// Update a gate or a moving objects objects group.
	UpdateGate(context.Context, *UpdateGateRequest) (*UpdateGateResponse, error)
	// Delete a gate or a moving objects objects group.
	DeleteGate(context.Context, *DeleteGateRequest) (*DeleteGateResponse, error)
	// Lock a gate. Locked gate cannot be opened.
	Lock(context.Context, *LockRequest) (*LockResponse, error)
	// Unload a gate, so it can be open.
	Unlock(context.Context, *UnlockRequest) (*UnlockResponse, error)
	// Opens a gate.
	Open(context.Context, *OpenRequest) (*OpenResponse, error)
	// Close a gate.
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	// Find gate that is closest to a specific position.
	FindNearestGate(context.Context, *FindNearestGateRequest) (*FindNearestGateResponse, error)
}

// UnimplementedMruVGatesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVGatesServiceServer struct {
}

func (*UnimplementedMruVGatesServiceServer) CreateGate(ctx context.Context, req *CreateGateRequest) (*CreateGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateGate not implemented")
}
func (*UnimplementedMruVGatesServiceServer) GetGate(ctx context.Context, req *GetGateRequest) (*GetGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetGate not implemented")
}
func (*UnimplementedMruVGatesServiceServer) UpdateGate(ctx context.Context, req *UpdateGateRequest) (*UpdateGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateGate not implemented")
}
func (*UnimplementedMruVGatesServiceServer) DeleteGate(ctx context.Context, req *DeleteGateRequest) (*DeleteGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteGate not implemented")
}
func (*UnimplementedMruVGatesServiceServer) Lock(ctx context.Context, req *LockRequest) (*LockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lock not implemented")
}
func (*UnimplementedMruVGatesServiceServer) Unlock(ctx context.Context, req *UnlockRequest) (*UnlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Unlock not implemented")
}
func (*UnimplementedMruVGatesServiceServer) Open(ctx context.Context, req *OpenRequest) (*OpenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedMruVGatesServiceServer) Close(ctx context.Context, req *CloseRequest) (*CloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedMruVGatesServiceServer) FindNearestGate(ctx context.Context, req *FindNearestGateRequest) (*FindNearestGateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindNearestGate not implemented")
}

func RegisterMruVGatesServiceServer(s *grpc.Server, srv MruVGatesServiceServer) {
	s.RegisterService(&_MruVGatesService_serviceDesc, srv)
}

func _MruVGatesService_CreateGate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).CreateGate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/CreateGate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).CreateGate(ctx, req.(*CreateGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_GetGate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).GetGate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/GetGate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).GetGate(ctx, req.(*GetGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_UpdateGate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).UpdateGate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/UpdateGate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).UpdateGate(ctx, req.(*UpdateGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_DeleteGate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).DeleteGate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/DeleteGate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).DeleteGate(ctx, req.(*DeleteGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).Lock(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_Unlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).Unlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/Unlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).Unlock(ctx, req.(*UnlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVGatesService_FindNearestGate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindNearestGateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVGatesServiceServer).FindNearestGate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.gates.MruVGatesService/FindNearestGate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVGatesServiceServer).FindNearestGate(ctx, req.(*FindNearestGateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MruVGatesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.gates.MruVGatesService",
	HandlerType: (*MruVGatesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateGate",
			Handler:    _MruVGatesService_CreateGate_Handler,
		},
		{
			MethodName: "GetGate",
			Handler:    _MruVGatesService_GetGate_Handler,
		},
		{
			MethodName: "UpdateGate",
			Handler:    _MruVGatesService_UpdateGate_Handler,
		},
		{
			MethodName: "DeleteGate",
			Handler:    _MruVGatesService_DeleteGate_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _MruVGatesService_Lock_Handler,
		},
		{
			MethodName: "Unlock",
			Handler:    _MruVGatesService_Unlock_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _MruVGatesService_Open_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _MruVGatesService_Close_Handler,
		},
		{
			MethodName: "FindNearestGate",
			Handler:    _MruVGatesService_FindNearestGate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "gates/gates.proto",
}
