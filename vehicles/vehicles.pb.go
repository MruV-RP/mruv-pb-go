// Code generated by protoc-gen-go. DO NOT EDIT.
// source: vehicles/vehicles.proto

package vehicles

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Request message for rpc `CreateVehicle`.
type CreateVehicleRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVehicleRequest) Reset()         { *m = CreateVehicleRequest{} }
func (m *CreateVehicleRequest) String() string { return proto.CompactTextString(m) }
func (*CreateVehicleRequest) ProtoMessage()    {}
func (*CreateVehicleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{0}
}

func (m *CreateVehicleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVehicleRequest.Unmarshal(m, b)
}
func (m *CreateVehicleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVehicleRequest.Marshal(b, m, deterministic)
}
func (m *CreateVehicleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVehicleRequest.Merge(m, src)
}
func (m *CreateVehicleRequest) XXX_Size() int {
	return xxx_messageInfo_CreateVehicleRequest.Size(m)
}
func (m *CreateVehicleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVehicleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVehicleRequest proto.InternalMessageInfo

// Response message for rpc `CreateVehicle`.
type CreateVehicleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateVehicleResponse) Reset()         { *m = CreateVehicleResponse{} }
func (m *CreateVehicleResponse) String() string { return proto.CompactTextString(m) }
func (*CreateVehicleResponse) ProtoMessage()    {}
func (*CreateVehicleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{1}
}

func (m *CreateVehicleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateVehicleResponse.Unmarshal(m, b)
}
func (m *CreateVehicleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateVehicleResponse.Marshal(b, m, deterministic)
}
func (m *CreateVehicleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateVehicleResponse.Merge(m, src)
}
func (m *CreateVehicleResponse) XXX_Size() int {
	return xxx_messageInfo_CreateVehicleResponse.Size(m)
}
func (m *CreateVehicleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateVehicleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateVehicleResponse proto.InternalMessageInfo

// Request message for rpc `GetVehicle`.
type GetVehicleRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVehicleRequest) Reset()         { *m = GetVehicleRequest{} }
func (m *GetVehicleRequest) String() string { return proto.CompactTextString(m) }
func (*GetVehicleRequest) ProtoMessage()    {}
func (*GetVehicleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{2}
}

func (m *GetVehicleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVehicleRequest.Unmarshal(m, b)
}
func (m *GetVehicleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVehicleRequest.Marshal(b, m, deterministic)
}
func (m *GetVehicleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVehicleRequest.Merge(m, src)
}
func (m *GetVehicleRequest) XXX_Size() int {
	return xxx_messageInfo_GetVehicleRequest.Size(m)
}
func (m *GetVehicleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVehicleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVehicleRequest proto.InternalMessageInfo

func (m *GetVehicleRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `GetVehicle`.
type GetVehicleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetVehicleResponse) Reset()         { *m = GetVehicleResponse{} }
func (m *GetVehicleResponse) String() string { return proto.CompactTextString(m) }
func (*GetVehicleResponse) ProtoMessage()    {}
func (*GetVehicleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{3}
}

func (m *GetVehicleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetVehicleResponse.Unmarshal(m, b)
}
func (m *GetVehicleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetVehicleResponse.Marshal(b, m, deterministic)
}
func (m *GetVehicleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVehicleResponse.Merge(m, src)
}
func (m *GetVehicleResponse) XXX_Size() int {
	return xxx_messageInfo_GetVehicleResponse.Size(m)
}
func (m *GetVehicleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVehicleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetVehicleResponse proto.InternalMessageInfo

// Request message for rpc `UpdateVehicle`.
type UpdateVehicleRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVehicleRequest) Reset()         { *m = UpdateVehicleRequest{} }
func (m *UpdateVehicleRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateVehicleRequest) ProtoMessage()    {}
func (*UpdateVehicleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{4}
}

func (m *UpdateVehicleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVehicleRequest.Unmarshal(m, b)
}
func (m *UpdateVehicleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVehicleRequest.Marshal(b, m, deterministic)
}
func (m *UpdateVehicleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVehicleRequest.Merge(m, src)
}
func (m *UpdateVehicleRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateVehicleRequest.Size(m)
}
func (m *UpdateVehicleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVehicleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVehicleRequest proto.InternalMessageInfo

func (m *UpdateVehicleRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `UpdateVehicle`.
type UpdateVehicleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateVehicleResponse) Reset()         { *m = UpdateVehicleResponse{} }
func (m *UpdateVehicleResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateVehicleResponse) ProtoMessage()    {}
func (*UpdateVehicleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{5}
}

func (m *UpdateVehicleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateVehicleResponse.Unmarshal(m, b)
}
func (m *UpdateVehicleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateVehicleResponse.Marshal(b, m, deterministic)
}
func (m *UpdateVehicleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateVehicleResponse.Merge(m, src)
}
func (m *UpdateVehicleResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateVehicleResponse.Size(m)
}
func (m *UpdateVehicleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateVehicleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateVehicleResponse proto.InternalMessageInfo

// Request message for rpc `DeleteVehicle`.
type DeleteVehicleRequest struct {
	Id                   uint32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVehicleRequest) Reset()         { *m = DeleteVehicleRequest{} }
func (m *DeleteVehicleRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteVehicleRequest) ProtoMessage()    {}
func (*DeleteVehicleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{6}
}

func (m *DeleteVehicleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVehicleRequest.Unmarshal(m, b)
}
func (m *DeleteVehicleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVehicleRequest.Marshal(b, m, deterministic)
}
func (m *DeleteVehicleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVehicleRequest.Merge(m, src)
}
func (m *DeleteVehicleRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteVehicleRequest.Size(m)
}
func (m *DeleteVehicleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVehicleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVehicleRequest proto.InternalMessageInfo

func (m *DeleteVehicleRequest) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

// Response message for rpc `DeleteVehicle`.
type DeleteVehicleResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteVehicleResponse) Reset()         { *m = DeleteVehicleResponse{} }
func (m *DeleteVehicleResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteVehicleResponse) ProtoMessage()    {}
func (*DeleteVehicleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00b1955180b272d9, []int{7}
}

func (m *DeleteVehicleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteVehicleResponse.Unmarshal(m, b)
}
func (m *DeleteVehicleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteVehicleResponse.Marshal(b, m, deterministic)
}
func (m *DeleteVehicleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteVehicleResponse.Merge(m, src)
}
func (m *DeleteVehicleResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteVehicleResponse.Size(m)
}
func (m *DeleteVehicleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteVehicleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteVehicleResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*CreateVehicleRequest)(nil), "mruv.vehicles.CreateVehicleRequest")
	proto.RegisterType((*CreateVehicleResponse)(nil), "mruv.vehicles.CreateVehicleResponse")
	proto.RegisterType((*GetVehicleRequest)(nil), "mruv.vehicles.GetVehicleRequest")
	proto.RegisterType((*GetVehicleResponse)(nil), "mruv.vehicles.GetVehicleResponse")
	proto.RegisterType((*UpdateVehicleRequest)(nil), "mruv.vehicles.UpdateVehicleRequest")
	proto.RegisterType((*UpdateVehicleResponse)(nil), "mruv.vehicles.UpdateVehicleResponse")
	proto.RegisterType((*DeleteVehicleRequest)(nil), "mruv.vehicles.DeleteVehicleRequest")
	proto.RegisterType((*DeleteVehicleResponse)(nil), "mruv.vehicles.DeleteVehicleResponse")
}

func init() { proto.RegisterFile("vehicles/vehicles.proto", fileDescriptor_00b1955180b272d9) }

var fileDescriptor_00b1955180b272d9 = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x69, 0x3f, 0xf8, 0x16, 0x17, 0x53, 0xe8, 0x34, 0xb5, 0x5a, 0x5c, 0xd4, 0x54, 0x4a,
	0x11, 0x9a, 0xc1, 0xfa, 0x06, 0x2a, 0xb8, 0x12, 0xa4, 0x62, 0x17, 0xee, 0xf2, 0xe7, 0x92, 0x0e,
	0xa4, 0x99, 0x31, 0x99, 0x64, 0x23, 0x6e, 0x7c, 0x05, 0x1f, 0xcd, 0x47, 0xd0, 0x07, 0x91, 0xb6,
	0x93, 0xb6, 0xc9, 0x0c, 0xc5, 0x5d, 0xb8, 0x9c, 0x7b, 0x7e, 0xb9, 0xe7, 0x30, 0xd0, 0x2b, 0x70,
	0xc1, 0x82, 0x18, 0x33, 0x5a, 0x7e, 0xb8, 0x22, 0xe5, 0x92, 0x13, 0x6b, 0x99, 0xe6, 0x85, 0x5b,
	0x0e, 0xfb, 0x67, 0x11, 0xe7, 0x51, 0x8c, 0xd4, 0x13, 0x8c, 0x7a, 0x49, 0xc2, 0xa5, 0x27, 0x19,
	0x4f, 0x94, 0xd8, 0x39, 0x06, 0xfb, 0x36, 0x45, 0x4f, 0xe2, 0x7c, 0xa3, 0x9f, 0xe1, 0x6b, 0x8e,
	0x99, 0x74, 0x7a, 0xd0, 0xad, 0xcd, 0x33, 0xc1, 0x93, 0x0c, 0x9d, 0x21, 0xb4, 0xef, 0x51, 0x56,
	0xd5, 0xa4, 0x05, 0x4d, 0x16, 0x9e, 0x34, 0x06, 0x8d, 0xb1, 0x35, 0x6b, 0xb2, 0xd0, 0xb1, 0x81,
	0xec, 0x8b, 0xd4, 0xea, 0x08, 0xec, 0x67, 0x11, 0x6a, 0x2c, 0x6d, 0xbb, 0x07, 0xdd, 0x9a, 0x6e,
	0x67, 0x70, 0x87, 0x31, 0xfe, 0xc5, 0xa0, 0xa6, 0xdb, 0x18, 0x4c, 0xbf, 0xff, 0x41, 0xe7, 0x21,
	0xcd, 0xe7, 0x6a, 0x9e, 0x3d, 0x61, 0x5a, 0xb0, 0x00, 0x89, 0x00, 0xab, 0x72, 0x2d, 0x19, 0xba,
	0x95, 0x10, 0x5d, 0x53, 0x46, 0xfd, 0x8b, 0xc3, 0x22, 0xf5, 0xd3, 0xf6, 0xc7, 0xd7, 0xcf, 0x67,
	0xb3, 0xe5, 0x1c, 0xd1, 0xe2, 0x6a, 0x5b, 0x15, 0x89, 0x01, 0x76, 0x09, 0x91, 0x41, 0xcd, 0x49,
	0x4b, 0xb8, 0x7f, 0x7e, 0x40, 0xa1, 0x40, 0xa7, 0x6b, 0x50, 0x87, 0xb4, 0xf7, 0x41, 0xf4, 0x8d,
	0x85, 0xef, 0x24, 0x07, 0xab, 0x92, 0xa8, 0x76, 0x9f, 0xa9, 0x17, 0xed, 0x3e, 0x73, 0x29, 0x0a,
	0x3b, 0x35, 0x63, 0x2b, 0x3d, 0x68, 0x58, 0x53, 0x9b, 0x1a, 0xd6, 0x58, 0x65, 0x89, 0xbd, 0xd4,
	0xb1, 0x37, 0xe3, 0x97, 0x51, 0xc4, 0xe4, 0x22, 0xf7, 0xdd, 0x80, 0x2f, 0xe9, 0xaa, 0xef, 0xc9,
	0xec, 0x91, 0xae, 0x4c, 0x27, 0xc2, 0x9f, 0x44, 0x7c, 0x2b, 0xf7, 0xff, 0xaf, 0x1f, 0xc1, 0xf5,
	0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x2f, 0xb6, 0xe7, 0x4c, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MruVVehiclesServiceClient is the client API for MruVVehiclesService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MruVVehiclesServiceClient interface {
	// Create a vehicle.
	CreateVehicle(ctx context.Context, in *CreateVehicleRequest, opts ...grpc.CallOption) (*CreateVehicleResponse, error)
	// Get a vehicle.
	GetVehicle(ctx context.Context, in *GetVehicleRequest, opts ...grpc.CallOption) (*GetVehicleResponse, error)
	// Update a vehicle.
	UpdateVehicle(ctx context.Context, in *UpdateVehicleRequest, opts ...grpc.CallOption) (*UpdateVehicleResponse, error)
	// Delete a vehicle.
	DeleteVehicle(ctx context.Context, in *DeleteVehicleRequest, opts ...grpc.CallOption) (*DeleteVehicleResponse, error)
}

type mruVVehiclesServiceClient struct {
	cc *grpc.ClientConn
}

func NewMruVVehiclesServiceClient(cc *grpc.ClientConn) MruVVehiclesServiceClient {
	return &mruVVehiclesServiceClient{cc}
}

func (c *mruVVehiclesServiceClient) CreateVehicle(ctx context.Context, in *CreateVehicleRequest, opts ...grpc.CallOption) (*CreateVehicleResponse, error) {
	out := new(CreateVehicleResponse)
	err := c.cc.Invoke(ctx, "/mruv.vehicles.MruVVehiclesService/CreateVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVVehiclesServiceClient) GetVehicle(ctx context.Context, in *GetVehicleRequest, opts ...grpc.CallOption) (*GetVehicleResponse, error) {
	out := new(GetVehicleResponse)
	err := c.cc.Invoke(ctx, "/mruv.vehicles.MruVVehiclesService/GetVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVVehiclesServiceClient) UpdateVehicle(ctx context.Context, in *UpdateVehicleRequest, opts ...grpc.CallOption) (*UpdateVehicleResponse, error) {
	out := new(UpdateVehicleResponse)
	err := c.cc.Invoke(ctx, "/mruv.vehicles.MruVVehiclesService/UpdateVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mruVVehiclesServiceClient) DeleteVehicle(ctx context.Context, in *DeleteVehicleRequest, opts ...grpc.CallOption) (*DeleteVehicleResponse, error) {
	out := new(DeleteVehicleResponse)
	err := c.cc.Invoke(ctx, "/mruv.vehicles.MruVVehiclesService/DeleteVehicle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MruVVehiclesServiceServer is the server API for MruVVehiclesService service.
type MruVVehiclesServiceServer interface {
	// Create a vehicle.
	CreateVehicle(context.Context, *CreateVehicleRequest) (*CreateVehicleResponse, error)
	// Get a vehicle.
	GetVehicle(context.Context, *GetVehicleRequest) (*GetVehicleResponse, error)
	// Update a vehicle.
	UpdateVehicle(context.Context, *UpdateVehicleRequest) (*UpdateVehicleResponse, error)
	// Delete a vehicle.
	DeleteVehicle(context.Context, *DeleteVehicleRequest) (*DeleteVehicleResponse, error)
}

// UnimplementedMruVVehiclesServiceServer can be embedded to have forward compatible implementations.
type UnimplementedMruVVehiclesServiceServer struct {
}

func (*UnimplementedMruVVehiclesServiceServer) CreateVehicle(ctx context.Context, req *CreateVehicleRequest) (*CreateVehicleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateVehicle not implemented")
}
func (*UnimplementedMruVVehiclesServiceServer) GetVehicle(ctx context.Context, req *GetVehicleRequest) (*GetVehicleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVehicle not implemented")
}
func (*UnimplementedMruVVehiclesServiceServer) UpdateVehicle(ctx context.Context, req *UpdateVehicleRequest) (*UpdateVehicleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateVehicle not implemented")
}
func (*UnimplementedMruVVehiclesServiceServer) DeleteVehicle(ctx context.Context, req *DeleteVehicleRequest) (*DeleteVehicleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVehicle not implemented")
}

func RegisterMruVVehiclesServiceServer(s *grpc.Server, srv MruVVehiclesServiceServer) {
	s.RegisterService(&_MruVVehiclesService_serviceDesc, srv)
}

func _MruVVehiclesService_CreateVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVVehiclesServiceServer).CreateVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.vehicles.MruVVehiclesService/CreateVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVVehiclesServiceServer).CreateVehicle(ctx, req.(*CreateVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVVehiclesService_GetVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVVehiclesServiceServer).GetVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.vehicles.MruVVehiclesService/GetVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVVehiclesServiceServer).GetVehicle(ctx, req.(*GetVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVVehiclesService_UpdateVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVVehiclesServiceServer).UpdateVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.vehicles.MruVVehiclesService/UpdateVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVVehiclesServiceServer).UpdateVehicle(ctx, req.(*UpdateVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MruVVehiclesService_DeleteVehicle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteVehicleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MruVVehiclesServiceServer).DeleteVehicle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/mruv.vehicles.MruVVehiclesService/DeleteVehicle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MruVVehiclesServiceServer).DeleteVehicle(ctx, req.(*DeleteVehicleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MruVVehiclesService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "mruv.vehicles.MruVVehiclesService",
	HandlerType: (*MruVVehiclesServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateVehicle",
			Handler:    _MruVVehiclesService_CreateVehicle_Handler,
		},
		{
			MethodName: "GetVehicle",
			Handler:    _MruVVehiclesService_GetVehicle_Handler,
		},
		{
			MethodName: "UpdateVehicle",
			Handler:    _MruVVehiclesService_UpdateVehicle_Handler,
		},
		{
			MethodName: "DeleteVehicle",
			Handler:    _MruVVehiclesService_DeleteVehicle_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "vehicles/vehicles.proto",
}
